{"version":3,"file":"select.min.js","sources":["../../node_modules/@material/base/foundation.js","../../node_modules/@material/select/constants.js","../../node_modules/@material/base/component.js","../../node_modules/@material/select/foundation.js","../../node_modules/@material/select/bottom-line/constants.js","../../node_modules/@material/select/bottom-line/adapter.js","../../node_modules/@material/select/bottom-line/foundation.js","../../node_modules/@material/select/label/constants.js","../../node_modules/@material/select/label/adapter.js","../../node_modules/@material/select/label/foundation.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../components/select/mdc-select.vue","../../components/base/auto-init.js","../../components/select/entry.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  IS_CHANGING: 'mdc-select--is-changing',\n};\n\nexport const numbers = {\n  FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS: 125,\n};\n\nexport const strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  BOTTOM_LINE_SELECTOR: '.mdc-select__bottom-line',\n  LABEL_SELECTOR: '.mdc-select__label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, numbers, strings} from './constants';\n\nexport default class MDCSelectFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      floatLabel: (/* value: boolean */) => {},\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getSelectedIndex: () => /* number */ -1,\n      setSelectedIndex: (/* index: number */) => {},\n      setDisabled: (/* disabled: boolean */) => {},\n      getValue: () => /* string */ '',\n      setValue: (/* value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    this.focusHandler_ = (evt) => this.handleFocus_(evt);\n    this.blurHandler_ = (evt) => this.handleBlur_(evt);\n    this.selectionHandler_ = (evt) => this.handleSelect_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerInteractionHandler('change', this.selectionHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterInteractionHandler('change', this.selectionHandler_);\n  }\n\n  setSelectedIndex(index) {\n    const {IS_CHANGING} = MDCSelectFoundation.cssClasses;\n    const {FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS} = MDCSelectFoundation.numbers;\n\n    this.adapter_.setSelectedIndex(index);\n    this.adapter_.addClass(IS_CHANGING);\n    const optionHasValue = this.adapter_.getValue().length > 0;\n\n    this.adapter_.floatLabel(optionHasValue);\n\n    setTimeout(() => {\n      this.adapter_.removeClass(IS_CHANGING);\n    }, FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS);\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  setDisabled(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    this.adapter_.setDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  handleFocus_() {\n    this.adapter_.activateBottomLine();\n  }\n\n  handleBlur_() {\n    this.adapter_.deactivateBottomLine();\n  }\n\n  handleSelect_() {\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  BOTTOM_LINE_ACTIVE: 'mdc-select__bottom-line--active',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Bottom Line.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectBottomLineAdapter {\n  /**\n   * Adds a class to the bottom line element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the bottom line element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n}\n\nexport default MDCSelectBottomLineAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectBottomLineAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectBottomLineAdapter>}\n * @final\n */\nclass MDCSelectBottomLineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCSelectBottomLineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectBottomLineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectBottomLineAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n    });\n  }\n\n  /**\n   * Adds the active class to bottom line\n   */\n  activate() {\n    this.adapter_.addClass(cssClasses.BOTTOM_LINE_ACTIVE);\n  }\n\n  /**\n   * Removes the active class from the bottom line\n   */\n  deactivate() {\n    this.adapter_.removeClass(cssClasses.BOTTOM_LINE_ACTIVE);\n  }\n\n  /**\n   * @param {!MDCSelectBottomLineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectBottomLineFoundation.defaultAdapter, adapter));\n  }\n}\n\nexport default MDCSelectBottomLineFoundation;\n","export const cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-select__label--float-above',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n}\n\nexport default MDCSelectLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectLabelAdapter>}\n * @final\n */\nclass MDCSelectLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCSelectLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectLabelFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Styles the label to float or defloat as necessary.\n   * @param {string} value The value of the input.\n   */\n  styleFloat(value) {\n    const {LABEL_FLOAT_ABOVE} = MDCSelectLabelFoundation.cssClasses;\n    if (!!value) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n    }\n  }\n}\n\nexport default MDCSelectLabelFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {!{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {!{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {!{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {!{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {!{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {!{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {!{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n      }\n      this.layoutInternal_();\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    requestAnimationFrame(() => {\n      // This needs to be wrapped in an rAF call b/c web browsers\n      // report active states inconsistently when they're called within\n      // event handling code:\n      // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n      // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n      activationState.wasElementMadeActive = (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      } else {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n    });\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {supportsCssVariables, getMatchesProperty, applyPassive} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n\n  static get MATCHES () {\n    /* global HTMLElement */\n    return RippleBase._matches ||\n      ( RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n  }\n\n  static isSurfaceActive (ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor (vm, options) {\n    super(Object.assign({\n      browserSupportsCssVars: () => {\n        return supportsCssVariables(window)\n      },\n      isUnbounded: () => {\n        return false\n      },\n      isSurfaceActive: () => {\n        return vm.$el[RippleBase.MATCHES](':active')\n      },\n      isSurfaceDisabled: () => {\n        return vm.disabled\n      },\n      addClass (className) {\n        vm.$set(vm.classes, className, true)\n      },\n      removeClass (className) {\n        vm.$delete(vm.classes, className)\n      },\n      containsEventTarget: (target) => vm.$el.contains(target),\n      registerInteractionHandler: (evt, handler) => {\n        vm.$el.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        vm.$el.removeEventListener(evt, handler)\n      },\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) => {\n        return window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        return window.removeEventListener('resize', handler)\n      },\n      updateCssVariable: (varName, value) => {\n        vm.$set(vm.styles, varName, value)\n      },\n      computeBoundingRect: () => {\n        return vm.$el.getBoundingClientRect()\n      },\n      getWindowPageOffset: () => {\n        return ({x: window.pageXOffset, y: window.pageYOffset})\n      },\n    }, options))\n  }\n}\n\nexport const RippleMixin = {\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted () {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.ripple.destroy()\n  }\n}  ","<template>\n<div class=\"mdc-select\" :class=\"rootClasses\" :style=\"styles\">\r\n  <select ref=\"native_control\" class=\"mdc-select__native-control\" v-on=\"listeners\" v-bind=\"$attrs\">\r\n    <option class=\"mdc-option\" value=\"\" disabled selected v-if=\"!!label\"></option>\r\n    <slot></slot>\r\n  </select>\r\n  <div ref=\"label\" class=\"mdc-select__label\" :class=\"labelClasses\">{{label}}</div>\r\n  <div ref=\"bottomLine\" class=\"mdc-select__bottom-line\" :class=\"bottomLineClasses\" v-if=\"bottomLine\"></div>\r\n</div>\n</template>\r\n\r\n<script>\nimport MDCSelectFoundation from '@material/select/foundation';\nimport MDCSelectBottomLineFoundation from '@material/select/bottom-line/foundation';\nimport MDCSelectLabelFoundation from '@material/select/label/foundation';\nimport { RippleBase } from '../ripple';\n\nexport default {\n  name: 'mdc-select',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: {\n    value: String,\n    disabled: Boolean,\n    label: String,\n    box: Boolean,\n    bottomLine: { type: Boolean, default: true },\n  },\n  inheritAttrs: false,\n  data() {\n    return {\n      styles: {},\n      labelClasses: {},\n      bottomLineClasses: {},\n      classes: {},\n    };\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.setDisabled(value);\n    },\n    value: 'refreshIndex',\n  },\n  methods: {\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')];\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value;\n      });\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.foundation.setSelectedIndex(idx);\n      }\n    },\n  },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select--box': this.box,\n        ...this.classes,\n      };\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.$emit('change', event.target.value),\n      };\n    },\n  },\n  mounted() {\n    if (this.label) {\n      this.labelFoundation = new MDCSelectLabelFoundation({\n        addClass: className => this.$set(this.labelClasses, className, true),\n        removeClass: className => this.$delete(this.labelClasses, className),\n      });\n      this.labelFoundation.init();\n    }\n\n    if (this.bottomLine) {\n      this.bottomLineFoundation = new MDCSelectBottomLineFoundation({\n        addClass: className => {\n          this.$set(this.bottomLineClasses, className, true);\n        },\n        removeClass: className => {\n          this.$delete(this.bottomLineClasses, className);\n        },\n      });\n      this.bottomLineFoundation.init();\n    }\n\n    this.foundation = new MDCSelectFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      floatLabel: value => {\n        this.labelFoundation.styleFloat(value);\n      },\n      activateBottomLine: () => {\n        this.bottomLineFoundation.activate();\n      },\n      deactivateBottomLine: () => {\n        this.bottomLineFoundation.deactivate();\n      },\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.native_control.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.native_control.removeEventListener(type, handler),\n      getSelectedIndex: () => this.$refs.native_control.selectedIndex,\n      setSelectedIndex: index =>\n        (this.$refs.native_control.selectedIndex = index),\n      setDisabled: disabled => (this.$refs.native_control.disabled = disabled),\n      getValue: () => this.$refs.native_control.value,\n      setValue: value => (this.$refs.native_control.value = value),\n    });\n\n    this.foundation.init();\n\n    this.foundation.setDisabled(this.disabled);\n\n    // initial sync with DOM\n    this.refreshIndex();\n    this.slotObserver = new MutationObserver(() => this.refreshIndex());\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true,\n    });\n\n    if (this.box) {\n      this.ripple = new RippleBase(this);\n      this.ripple.init();\n    }\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect();\n    let foundation = this.foundation;\n    this.foundation = null;\n    foundation.destroy();\n\n    let labelFoundation = this.labelFoundation;\n    this.labelFoundation = null;\n    labelFoundation.destroy();\n\n    let bottomLineFoundation = this.bottomLineFoundation;\n    this.bottomLineFoundation = null;\n    bottomLineFoundation.destroy();\n\n    this.ripple && this.ripple.destroy();\n  },\n};\n</script>\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["MDCFoundation","adapter","adapter_","cssClasses","root","foundation","undefined","root_","args","initialize","foundation_","this","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","numbers","strings","MDCSelectFoundation","babelHelpers.extends","defaultAdapter","focusHandler_","_this","handleFocus_","blurHandler_","handleBlur_","selectionHandler_","handleSelect_","registerInteractionHandler","deregisterInteractionHandler","index","IS_CHANGING","FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS","setSelectedIndex","addClass","optionHasValue","getValue","length","floatLabel","removeClass","value","setValue","getSelectedIndex","disabled","DISABLED","setDisabled","activateBottomLine","deactivateBottomLine","className","MDCSelectBottomLineFoundation","BOTTOM_LINE_ACTIVE","MDCSelectLabelFoundation","LABEL_FLOAT_ABOVE","target","varName","supportsCssVariables_","supportsPassive_","applyPassive","globalObj","window","forceRefresh","isSupported","passive","e","components","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","requestAnimationFrame","BG_FOCUSED","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","_this2","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","type","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","isSurfaceActive","animateActivation_","event","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","setTimeout","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","Math","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","vm","options","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","$el","MATCHES","$set","classes","$delete","contains","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","render","String","Boolean","default","idx","$refs","native_control","querySelectorAll","findIndex","selectedIndex","box","$listeners","$emit","label","labelFoundation","_this3","labelClasses","bottomLine","bottomLineFoundation","bottomLineClasses","styleFloat","activate","deactivate","refreshIndex","slotObserver","MutationObserver","observe","ripple","disconnect","key","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}