{"version":3,"file":"checkbox.min.js","sources":["../../components/base/dispatch-focus-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../node_modules/@material/checkbox/constants.js","../../node_modules/@material/ripple/index.js","../../node_modules/@material/checkbox/adapter.js","../../node_modules/@material/checkbox/foundation.js","../../node_modules/@material/form-field/adapter.js","../../node_modules/@material/form-field/constants.js","../../node_modules/@material/form-field/foundation.js","../../node_modules/@material/animation/index.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../components/checkbox/mdc-checkbox.vue","../../components/base/auto-init.js","../../components/checkbox/entry.js"],"sourcesContent":["export const DispatchFocusMixin = {\n  data () {\n    return  {hasFocus: false}\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp () {\n      this._active = false\n    },\n    onFocusEvent () {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    onBlurEvent () {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted () {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy () {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {!{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {!{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {!{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {!{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {!{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {!{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {!{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n      }\n      this.layoutInternal_();\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    requestAnimationFrame(() => {\n      // This needs to be wrapped in an rAF call b/c web browsers\n      // report active states inconsistently when they're called within\n      // event handling code:\n      // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n      // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n      activationState.wasElementMadeActive = (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      } else {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n    });\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /** @return {!MDCRippleFoundation} */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCCheckboxAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the input element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setNativeControlAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the input element.\n   * @param {string} attr\n   */\n  removeNativeControlAttr(attr) {}\n\n  /** @param {!EventListener} handler */\n  registerAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  registerChangeHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterChangeHandler(handler) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n\n  forceLayout() {}\n\n  /** @return {boolean} */\n  isAttachedToDOM() {}\n}\n\nexport default MDCCheckboxAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/** @const {!Array<string>} */\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlAttr: () => {},\n      removeNativeControlAttr: () => {},\n      registerAnimationEndHandler: (/* handler: EventListener */) => {},\n      deregisterAnimationEndHandler: (/* handler: EventListener */) => {},\n      registerChangeHandler: (/* handler: EventListener */) => {},\n      deregisterChangeHandler: (/* handler: EventListener */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    this.animEndHandler_ = /** @private {!EventListener} */ (\n      () => this.handleAnimationEnd());\n\n    this.changeHandler_ = /** @private {!EventListener} */ (\n      () => this.handleChange());\n  }\n\n  init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  }\n\n  destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  }\n\n  /** @param {boolean} indeterminate */\n  setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    clearTimeout(this.animEndLatchTimer_);\n    this.animEndLatchTimer_ = setTimeout(() => {\n      this.adapter_.removeClass(this.currentAnimationClass_);\n      this.adapter_.deregisterAnimationEndHandler(this.animEndHandler_);\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState_();\n  }\n\n  /** @private */\n  installPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n          get: desc.get,\n          set: (state) => {\n            desc.set.call(nativeCb, state);\n            this.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable,\n        });\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  }\n\n  /** @private */\n  uninstallPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = /** @type {!ObjectPropertyDescriptor} */ (\n        Object.getOwnPropertyDescriptor(cbProto, controlState));\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    const nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n    if (this.isIndeterminate()) {\n      this.adapter_.setNativeControlAttr(\n        strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n    } else {\n      this.adapter_.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n    }\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  }\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n  determineCheckState_(nativeCb) {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Form Field. Provides an interface for managing\n * - event handlers\n * - ripple activation\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCFormFieldAdapter {\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  activateInputRipple() {}\n\n  deactivateInputRipple() {}\n}\n\nexport default MDCFormFieldAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-form-field',\n};\n\n/** @enum {string} */\nconst strings = {\n  LABEL_SELECTOR: '.mdc-form-field > label',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFormFieldAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFormFieldAdapter>}\n */\nclass MDCFormFieldFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCFormFieldAdapter} */\n  static get defaultAdapter() {\n    return {\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      activateInputRipple: () => {},\n      deactivateInputRipple: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter));\n\n    /** @private {!EventListener} */\n    this.clickHandler_ = /** @type {!EventListener} */ (\n      () => this.handleClick_());\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n  }\n\n  /** @private */\n  handleClick_() {\n    this.adapter_.activateInputRipple();\n    requestAnimationFrame(() => this.adapter_.deactivateInputRipple());\n  }\n}\n\nexport default MDCFormFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {supportsCssVariables, getMatchesProperty, applyPassive} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n\n  static get MATCHES () {\n    /* global HTMLElement */\n    return RippleBase._matches ||\n      ( RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n  }\n\n  static isSurfaceActive (ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor (vm, options) {\n    super(Object.assign({\n      browserSupportsCssVars: () => {\n        return supportsCssVariables(window)\n      },\n      isUnbounded: () => {\n        return false\n      },\n      isSurfaceActive: () => {\n        return vm.$el[RippleBase.MATCHES](':active')\n      },\n      isSurfaceDisabled: () => {\n        return vm.disabled\n      },\n      addClass (className) {\n        vm.$set(vm.classes, className, true)\n      },\n      removeClass (className) {\n        vm.$delete(vm.classes, className)\n      },\n      containsEventTarget: (target) => vm.$el.contains(target),\n      registerInteractionHandler: (evt, handler) => {\n        vm.$el.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        vm.$el.removeEventListener(evt, handler)\n      },\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) => {\n        return window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        return window.removeEventListener('resize', handler)\n      },\n      updateCssVariable: (varName, value) => {\n        vm.$set(vm.styles, varName, value)\n      },\n      computeBoundingRect: () => {\n        return vm.$el.getBoundingClientRect()\n      },\n      getWindowPageOffset: () => {\n        return ({x: window.pageXOffset, y: window.pageYOffset})\n      },\n    }, options))\n  }\n}\n\nexport const RippleMixin = {\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted () {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.ripple.destroy()\n  }\n}  ","<template>\n  <div :class=formFieldClasses class=\"mdc-checkbox-wrapper\">\n    <div ref=\"root\" class=\"mdc-checkbox\"\n    :class=\"classes\" :style=\"styles\">\n      <input ref=\"control\" :id=\"vma_uid_\" type=\"checkbox\" :name=\"name\"\n        class=\"mdc-checkbox__native-control\" :value=\"value\"\n        @change=\"onChange\"/>\n      <div class=\"mdc-checkbox__background\">\n        <svg class=\"mdc-checkbox__checkmark\"\n            viewBox=\"0 0 24 24\">\n          <path class=\"checkbox__checkmark-path\"\n                fill=\"none\"\n                stroke=\"white\"\n                d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n        </svg>\n        <div class=\"mdc-checkbox__mixedmark\"></div>\n      </div>\n    </div>\n    <label ref=\"label\"  :for=\"vma_uid_\"\n    ><slot>{{label}}</slot></label>\n  </div>\n</template>\n\n<script>\n/* global HTMLElement */\nimport MDCCheckboxFoundation from '@material/checkbox/foundation';\nimport MDCFormFieldFoundation from '@material/form-field/foundation';\nimport { getCorrectEventName } from '@material/animation';\nimport { DispatchFocusMixin } from '../base';\nimport { RippleBase } from '../ripple';\n\nexport default {\n  name: 'mdc-checkbox',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'checked',\n    event: 'change',\n  },\n  props: {\n    checked: [Boolean, Array],\n    indeterminate: Boolean,\n    disabled: Boolean,\n    label: String,\n    'align-end': Boolean,\n    value: {\n      type: [String, Number],\n      default() {\n        return 'on';\n      },\n    },\n    name: String,\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {},\n    };\n  },\n  computed: {\n    hasLabel() {\n      return this.label || this.$slots.default;\n    },\n    formFieldClasses() {\n      return {\n        'mdc-form-field': this.hasLabel,\n        'mdc-form-field--align-end': this.hasLabel && this.alignEnd,\n      };\n    },\n  },\n  watch: {\n    checked: 'setChecked',\n    disabled(value) {\n      this.foundation.setDisabled(value);\n    },\n    indeterminate(value) {\n      this.foundation.setIndeterminate(value);\n    },\n  },\n  mounted() {\n    this.foundation = new MDCCheckboxFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setNativeControlAttr: (attr, value) => {\n        this.$refs.control.setAttribute(attr, value);\n      },\n      removeNativeControlAttr: attr => {\n        this.$refs.control.removeAttribute(attr);\n      },\n      registerAnimationEndHandler: handler =>\n        this.$refs.root.addEventListener(\n          getCorrectEventName(window, 'animationend'),\n          handler,\n        ),\n      deregisterAnimationEndHandler: handler =>\n        this.$refs.root.removeEventListener(\n          getCorrectEventName(window, 'animationend'),\n          handler,\n        ),\n      registerChangeHandler: handler =>\n        this.$refs.control.addEventListener('change', handler),\n      deregisterChangeHandler: handler =>\n        this.$refs.control.removeEventListener('change', handler),\n      getNativeControl: () => this.$refs.control,\n      forceLayout: () => this.$refs.root.offsetWidth,\n      isAttachedToDOM: () => Boolean(this.$el.parentNode),\n    });\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => RippleBase.isSurfaceActive(this.$refs.control),\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler);\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler);\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect();\n      },\n    });\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler);\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler);\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate();\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate();\n      },\n    });\n\n    this.foundation.init();\n    this.ripple.init();\n    this.formField.init();\n    this.setChecked(this.checked);\n    this.foundation.setDisabled(this.disabled);\n    this.foundation.setIndeterminate(this.indeterminate);\n  },\n  beforeDestroy() {\n    this.formField.destroy();\n    this.ripple.destroy();\n    this.foundation.destroy();\n  },\n  methods: {\n    setChecked(checked) {\n      this.foundation.setChecked(\n        Array.isArray(checked) ? checked.indexOf(this.value) > -1 : checked,\n      );\n    },\n\n    onChange() {\n      this.$emit('update:indeterminate', this.foundation.isIndeterminate());\n      const isChecked = this.foundation.isChecked();\n\n      if (Array.isArray(this.checked)) {\n        const idx = this.checked.indexOf(this.value);\n        if (isChecked) {\n          idx < 0 && this.$emit('change', this.checked.concat(this.value));\n        } else {\n          idx > -1 &&\n            this.$emit(\n              'change',\n              this.checked.slice(0, idx).concat(this.checked.slice(idx + 1)),\n            );\n        }\n      } else {\n        this.$emit('change', isChecked);\n      }\n    },\n  },\n};\n</script>\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["DispatchFocusMixin","hasFocus","_active","_this","dispatchFocusEvent","setTimeout","_this2","this","$el","document","activeElement","contains","$emit","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","MDCFoundation","adapter","adapter_","MDCComponent","root","foundation","undefined","root_","args","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtType","handler","evtData","shouldBubble","evt","CustomEvent","createEvent","initCustomEvent","dispatchEvent","cssClasses","className","target","varName","value","strings","numbers","supportsCssVariables_","supportsPassive_","supportsCssVariables","windowObj","forceRefresh","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","applyPassive","globalObj","window","isSupported","passive","e","getMatchesProperty","HTMLElementPrototype","filter","p","pop","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","babelHelpers.extends","defaultAdapter","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","requestAnimationFrame","addClass","BG_FOCUSED","blurHandler_","removeClass","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","type","registerInteractionHandler","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","isSurfaceActive","animateActivation_","event","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","Math","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","disabled","unbounded_","setUnbounded","activate","deactivate","MDCRipple","createAdapter","dataset","Boolean","setUnbounded_","ripple","instance","MATCHES","util","HTMLElement","prototype","classList","add","documentElement","style","setProperty","getBoundingClientRect","pageXOffset","pageYOffset","attr","CB_PROTO_PROPS","MDCCheckboxFoundation","currentCheckState_","TRANSITION_STATE_INIT","currentAnimationClass_","animEndLatchTimer_","animEndHandler_","handleAnimationEnd","changeHandler_","handleChange","determineCheckState_","getNativeControl_","UPGRADED","registerChangeHandler","installPropertyChangeHooks_","deregisterChangeHandler","uninstallPropertyChangeHooks_","checked","indeterminate","DISABLED","deregisterAnimationEndHandler","ANIM_END_LATCH_MS","transitionCheckState_","nativeCb","cbProto","Object","getPrototypeOf","controlState","desc","getOwnPropertyDescriptor","validDescriptor","nativeCbDesc","get","set","call","configurable","enumerable","defineProperty","getNativeControl","oldState","newState","isIndeterminate","setNativeControlAttr","ARIA_CHECKED_ATTR","ARIA_CHECKED_INDETERMINATE_VALUE","removeNativeControlAttr","forceLayout","getTransitionAnimationClass_","isAttachedToDOM","registerAnimationEndHandler","TRANSITION_STATE_INDETERMINATE","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","inputPropDesc","MDCFormFieldFoundation","clickHandler_","handleClick_","activateInputRipple","deactivateInputRipple","eventTypeMap","cssPropertyMap","getAnimationName","eventType","hasProperShape","eventFoundInMaps","map","el","styleProperty","noPrefix","webkitPrefix","getJavaScriptEventName","getCorrectEventName","components","RippleBase","vm","options","$set","classes","$delete","styles","ref","_matches","render","Array","String","Number","label","$slots","default","hasLabel","alignEnd","setDisabled","setIndeterminate","$refs","control","setAttribute","removeAttribute","offsetWidth","parentNode","formField","setChecked","isArray","isChecked","idx","concat","slice","key","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}