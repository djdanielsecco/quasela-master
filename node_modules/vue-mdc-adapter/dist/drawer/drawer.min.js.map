{"version":3,"file":"drawer.min.js","sources":["../../components/base/custom-link.js","../../components/base/dispatch-event-mixin.js","../../components/drawer/mdc-permanent-drawer.vue","../../node_modules/@material/drawer/slidable/constants.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/drawer/slidable/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/drawer/persistent/constants.js","../../node_modules/@material/drawer/persistent/foundation.js","../../node_modules/@material/drawer/util.js","../../components/drawer/mdc-persistent-drawer.vue","../../node_modules/@material/drawer/temporary/constants.js","../../node_modules/@material/drawer/temporary/foundation.js","../../components/drawer/mdc-temporary-drawer.vue","../../components/common/event-bus.js","../../components/drawer/mdc-drawer.vue","../../components/drawer/mdc-drawer-header.vue","../../components/drawer/mdc-drawer-list.vue","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../components/drawer/mdc-drawer-item.vue","../../components/drawer/mdc-drawer-layout.vue","../../components/drawer/mdc-drawer-divider.vue","../../components/base/auto-init.js","../../components/drawer/entry.js"],"sourcesContent":["export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link : Object,\n  },\n  render (h, context) {\n    let element \n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link'] \n      data.props = Object.assign({tag: context.props.tag}, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = {click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag \n    } \n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n  },\n  computed: {\n    link () {\n      return this.to && {\n        to: this.to,\n        exact: this.exact,\n        append: this.append,\n        replace: this.replace,\n        activeClass: this.activeClass,\n        exactActiveClass: this.exactActiveClass,\n      }\n    }\n  },\n  components : { \n    CustomLink \n  }\n}","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array,\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt);\n      if (this.event) {\n        let target = this.eventTarget || this.$root;\n        let args = this.eventArgs || [];\n        target.$emit(this.event, ...args);\n      }\n    },\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e),\n      };\n    },\n  },\n};\n","<template>\n  <nav class=\"mdc-permanent-drawer mdc-drawer--permanent mdc-typography\">\n    <nav class=\"mdc-drawer__content\">\n      <div class=\"mdc-drawer__toolbar-spacer\" \n        v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-permanent-drawer',\n  props: {\n    'toolbar-spacer': Boolean,\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FOCUSABLE_ELEMENTS =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' +\n  'button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n\nexport class MDCSlidableDrawerFoundation extends MDCFoundation {\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      hasNecessaryDom: () => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      setTranslateX: (/* value: number | null */) => {},\n      getFocusableElements: () => /* NodeList */ {},\n      saveElementTabState: (/* el: Element */) => {},\n      restoreElementTabState: (/* el: Element */) => {},\n      makeElementUntabbable: (/* el: Element */) => {},\n      notifyOpen: () => {},\n      notifyClose: () => {},\n      isRtl: () => /* boolean */ false,\n      getDrawerWidth: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter, rootCssClass, animatingCssClass, openCssClass) {\n    super(Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, adapter));\n\n    this.rootCssClass_ = rootCssClass;\n    this.animatingCssClass_ = animatingCssClass;\n    this.openCssClass_ = openCssClass;\n\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n\n    this.inert_ = false;\n\n    this.componentTouchStartHandler_ = (evt) => this.handleTouchStart_(evt);\n    this.componentTouchMoveHandler_ = (evt) => this.handleTouchMove_(evt);\n    this.componentTouchEndHandler_ = (evt) => this.handleTouchEnd_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.close();\n      }\n    };\n  }\n\n  init() {\n    const ROOT = this.rootCssClass_;\n    const OPEN = this.openCssClass_;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    } else {\n      this.detabinate_();\n      this.isOpen_ = false;\n    }\n\n    this.adapter_.registerDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.registerInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.registerInteractionHandler('touchend', this.componentTouchEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.deregisterInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.deregisterInteractionHandler('touchend', this.componentTouchEndHandler_);\n    // Deregister the document keydown handler just in case the component is destroyed while the menu is open.\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n  }\n\n  open() {\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.addClass(this.openCssClass_);\n    this.retabinate_();\n    // Debounce multiple calls\n    if (!this.isOpen_) {\n      this.adapter_.notifyOpen();\n    }\n    this.isOpen_ = true;\n  }\n\n  close() {\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.removeClass(this.openCssClass_);\n    this.detabinate_();\n    // Debounce multiple calls\n    if (this.isOpen_) {\n      this.adapter_.notifyClose();\n    }\n    this.isOpen_ = false;\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   *  Render all children of the drawer inert when it's closed.\n   */\n  detabinate_() {\n    if (this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.saveElementTabState(elements[i]);\n        this.adapter_.makeElementUntabbable(elements[i]);\n      }\n    }\n\n    this.inert_ = true;\n  }\n\n  /**\n   *  Make all children of the drawer tabbable again when it's open.\n   */\n  retabinate_() {\n    if (!this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.restoreElementTabState(elements[i]);\n      }\n    }\n\n    this.inert_ = false;\n  }\n\n  handleTouchStart_(evt) {\n    if (!this.adapter_.hasClass(this.openCssClass_)) {\n      return;\n    }\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.direction_ = this.adapter_.isRtl() ? -1 : 1;\n    this.drawerWidth_ = this.adapter_.getDrawerWidth();\n    this.startX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n    this.currentX_ = this.startX_;\n\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n  }\n\n  handleTouchMove_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.currentX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n  }\n\n  handleTouchEnd_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.prepareForTouchEnd_();\n\n    // Did the user close the drawer by more than 50%?\n    if (Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5) {\n      this.close();\n    } else {\n      // Triggering an open here means we'll get a nice animation back to the fully open state.\n      this.open();\n    }\n  }\n\n  prepareForTouchEnd_() {\n    cancelAnimationFrame(this.updateRaf_);\n    this.adapter_.setTranslateX(null);\n  }\n\n  updateDrawer_() {\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n    this.adapter_.setTranslateX(this.newPosition_);\n  }\n\n  get newPosition_() {\n    let newPos = null;\n\n    if (this.direction_ === 1) {\n      newPos = Math.min(0, this.currentX_ - this.startX_);\n    } else {\n      newPos = Math.max(0, this.currentX_ - this.startX_);\n    }\n\n    return newPos;\n  }\n\n  isRootTransitioningEventTarget_() {\n    // Classes extending MDCSlidableDrawerFoundation should implement this method to return true or false\n    // if the event target is the root event target currently transitioning.\n    return false;\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.isRootTransitioningEventTarget_(evt.target)) {\n      this.adapter_.removeClass(this.animatingCssClass_);\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--persistent',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--persistent .mdc-drawer__drawer',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCPersistentDrawer:open',\n  CLOSE_EVENT: 'MDCPersistentDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCPersistentDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      isDrawer: () => false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCPersistentDrawerFoundation.defaultAdapter, adapter),\n      MDCPersistentDrawerFoundation.cssClasses.ROOT,\n      MDCPersistentDrawerFoundation.cssClasses.ANIMATING,\n      MDCPersistentDrawerFoundation.cssClasses.OPEN);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAB_DATA = 'data-mdc-tabindex';\nconst TAB_DATA_HANDLED = 'data-mdc-tabindex-handled';\n\nlet storedTransformPropertyName_;\nlet supportsPassive_;\n\n// Remap touch events to pointer events, if the browser doesn't support touch events.\nexport function remapEvent(eventName, globalObj = window) {\n  if (!('ontouchstart' in globalObj.document)) {\n    switch (eventName) {\n    case 'touchstart':\n      return 'pointerdown';\n    case 'touchmove':\n      return 'pointermove';\n    case 'touchend':\n      return 'pointerup';\n    default:\n      return eventName;\n    }\n  }\n\n  return eventName;\n}\n\n// Choose the correct transform property to use on the current browser.\nexport function getTransformPropertyName(globalObj = window, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : '-webkit-transform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n// Determine whether the current browser supports CSS properties.\nexport function supportsCssCustomProperties(globalObj = window) {\n  if ('CSS' in globalObj) {\n    return globalObj.CSS.supports('(--color: red)');\n  }\n  return false;\n}\n\n// Determine whether the current browser supports passive event listeners, and if so, use them.\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n// Save the tab state for an element.\nexport function saveElementTabState(el) {\n  if (el.hasAttribute('tabindex')) {\n    el.setAttribute(TAB_DATA, el.getAttribute('tabindex'));\n  }\n  el.setAttribute(TAB_DATA_HANDLED, true);\n}\n\n// Restore the tab state for an element, if it was saved.\nexport function restoreElementTabState(el) {\n  // Only modify elements we've already handled, in case anything was dynamically added since we saved state.\n  if (el.hasAttribute(TAB_DATA_HANDLED)) {\n    if (el.hasAttribute(TAB_DATA)) {\n      el.setAttribute('tabindex', el.getAttribute(TAB_DATA));\n      el.removeAttribute(TAB_DATA);\n    } else {\n      el.removeAttribute('tabindex');\n    }\n    el.removeAttribute(TAB_DATA_HANDLED);\n  }\n}\n","<template>\n  <aside class=\"mdc-persistent-drawer mdc-drawer--persistent mdc-typography\" :class=\"classes\">\n    <nav ref=\"drawer\" class=\"mdc-drawer__drawer\">\n      <div class=\"mdc-drawer__toolbar-spacer\" \n        v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCPersistentDrawerFoundation from '@material/drawer/persistent/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-persistent-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    'toolbar-spacer': Boolean,\n    'open':Boolean\n  },\n  data () {\n    return {\n      classes: {},\n    }\n  },\n  watch: {\n    open() {\n      this._refresh()\n    }\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()          \n      }\n      else {\n        this.foundation && this.foundation.close()          \n      }\n    }\n  },\n  mounted () {\n    const {FOCUSABLE_ELEMENTS} = MDCPersistentDrawerFoundation.strings\n\n    this.foundation = new MDCPersistentDrawerFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: (className) => {\n        return this.$el.classList.contains(className)\n      },\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(util.remapEvent(evt), handler)\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(util.remapEvent(evt), handler)\n      },\n      registerTransitionEndHandler: (handler) => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: (handler) => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: (handler) => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: (handler) => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: (value) => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: (el) => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: (el) => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: (el) => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change',true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change',false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n      },\n      isDrawer: (el) => {\n        return el === this.$refs.drawer\n      }\n    })\n    this.foundation && this.foundation.init()  \n    this._refresh()\n  },\n  beforeDestroy () {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--temporary',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n  SCROLL_LOCK: 'mdc-drawer-scroll-lock',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--temporary .mdc-drawer__drawer',\n  OPACITY_VAR_NAME: '--mdc-temporary-drawer-opacity',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCTemporaryDrawer:open',\n  CLOSE_EVENT: 'MDCTemporaryDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTemporaryDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      isDrawer: () => false,\n      updateCssVariable: (/* value: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCTemporaryDrawerFoundation.defaultAdapter, adapter),\n      MDCTemporaryDrawerFoundation.cssClasses.ROOT,\n      MDCTemporaryDrawerFoundation.cssClasses.ANIMATING,\n      MDCTemporaryDrawerFoundation.cssClasses.OPEN);\n\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.ROOT)) {\n        this.close(true);\n      }\n    };\n  }\n\n  init() {\n    super.init();\n\n    // Make browser aware of custom property being used in this element.\n    // Workaround for certain types of hard-to-reproduce heisenbugs.\n    this.adapter_.updateCssVariable(0);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.enableScroll_();\n  }\n\n  open() {\n    this.disableScroll_();\n    // Make sure custom property values are cleared before starting.\n    this.adapter_.updateCssVariable('');\n\n    super.open();\n  }\n\n  close() {\n    // Make sure custom property values are cleared before making any changes.\n    this.adapter_.updateCssVariable('');\n\n    super.close();\n  }\n\n  prepareForTouchEnd_() {\n    super.prepareForTouchEnd_();\n\n    this.adapter_.updateCssVariable('');\n  }\n\n  updateDrawer_() {\n    super.updateDrawer_();\n\n    const newOpacity = Math.max(0, 1 + this.direction_ * (this.newPosition_ / this.drawerWidth_));\n    this.adapter_.updateCssVariable(newOpacity);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n\n  handleTransitionEnd_(evt) {\n    super.handleTransitionEnd_(evt);\n    if (!this.isOpen_) {\n      this.enableScroll_();\n    }\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","<template>\n  <aside class=\"mdc-temporary-drawer mdc-drawer--temporary mdc-typography\" :class=\"classes\">\n    <nav ref=\"drawer\" class=\"mdc-drawer__drawer\">\n      <div class=\"mdc-drawer__toolbar-spacer\" v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCTemporaryDrawerFoundation from '@material/drawer/temporary/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-temporary-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    'open': Boolean,\n    'toolbar-spacer': Boolean,\n  },\n  data () {\n    return {\n      classes: {},\n    }\n  },\n  watch: {\n    open() {\n      this._refresh()\n    }\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()          \n      }\n      else {\n        this.foundation && this.foundation.close()          \n      }\n    }\n  },\n  mounted () {\n    const {FOCUSABLE_ELEMENTS, OPACITY_VAR_NAME} = \n      MDCTemporaryDrawerFoundation.strings\n    \n    this.foundation = new MDCTemporaryDrawerFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: (className) => {\n        return this.$el.classList.contains(className)\n      },\n      addBodyClass: (className) => document.body.classList.add(className),\n      removeBodyClass: (className) => document.body.classList.remove(className),\n      eventTargetHasClass: (target, className) => target.classList.contains(className),\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(util.remapEvent(evt), handler)\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(util.remapEvent(evt), handler)\n      },\n      registerTransitionEndHandler: (handler) => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: (handler) => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: (handler) => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: (handler) => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: (value) => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      updateCssVariable: (value) => {\n        if (util.supportsCssCustomProperties()) {\n          this.$el.style.setProperty(OPACITY_VAR_NAME, value)\n        }\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: (el) => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: (el) => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: (el) => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change',true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change',false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n      },\n      isDrawer: (el) => el === this.$refs.drawer,\n    })\n    this.foundation && this.foundation.init()  \n    this._refresh()\n  },\n  beforeDestroy () {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  }\n}\n</script>\n","let bus_;\n\nexport const eventBus = {\n  install(vue) {\n    bus_ = new vue();\n  },\n  $emit(event, ...args) {\n    bus_ && bus_.$emit(event, ...args);\n  },\n  $on(event, callback) {\n    bus_ && bus_.$on(event, callback);\n  },\n  $once(event, callback) {\n    bus_ && bus_.$once(event, callback);\n  },\n  $off(event, callback) {\n    bus_ && bus_.$off(event, callback);\n  },\n};\n","<template>\r\n  <component  ref=\"drawer\" class=\"mdc-drawer\"\r\n      :is=\"type\" v-model=\"open_\"\r\n      :toolbar-spacer=\"toolbarSpacer\"\r\n      @change=\"busemit('mdc:layout')\"\r\n      @open=\"$emit('open')\"\r\n      @close=\"$emit('close')\" >\r\n    <slot />\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport mdcPermanentDrawer from './mdc-permanent-drawer.vue';\r\nimport mdcPersistentDrawer from './mdc-persistent-drawer.vue';\r\nimport mdcTemporaryDrawer from './mdc-temporary-drawer.vue';\r\nimport { eventBus } from '../common';\r\n\r\nconst media = new class {\r\n  get small() {\r\n    return (\r\n      this._small || (this._small = window.matchMedia('(max-width: 839px)'))\r\n    );\r\n  }\r\n\r\n  get large() {\r\n    return (\r\n      this._large || (this._large = window.matchMedia('(min-width: 1200px)'))\r\n    );\r\n  }\r\n}();\r\n\r\nexport default {\r\n  name: 'mdc-drawer',\r\n  props: {\r\n    permanent: Boolean,\r\n    persistent: Boolean,\r\n    temporary: Boolean,\r\n    drawerType: {\r\n      type: String,\r\n      validator: val => {\r\n        return val in ['temporary', 'persistent', 'permanent'];\r\n      },\r\n    },\r\n    toolbarSpacer: Boolean,\r\n    toggleOn: String,\r\n    toggleOnSource: { type: Object, required: false },\r\n    openOn: String,\r\n    openOnSource: { type: Object, required: false },\r\n    closeOn: String,\r\n    closeOnSource: { type: Object, required: false },\r\n  },\r\n  provide() {\r\n    return { mdcDrawer: this };\r\n  },\r\n  data() {\r\n    return {\r\n      small: false,\r\n      large: false,\r\n      open_: false,\r\n    };\r\n  },\r\n  components: {\r\n    'mdc-permanent-drawer': mdcPermanentDrawer,\r\n    'mdc-persistent-drawer': mdcPersistentDrawer,\r\n    'mdc-temporary-drawer': mdcTemporaryDrawer,\r\n  },\r\n  computed: {\r\n    type() {\r\n      if (this.permanent) {\r\n        return 'mdc-permanent-drawer';\r\n      } else if (this.persistent) {\r\n        return 'mdc-persistent-drawer';\r\n      } else if (this.temporary) {\r\n        return 'mdc-temporary-drawer';\r\n      } else {\r\n        switch (this.drawerType) {\r\n          case 'permanent':\r\n            return 'mdc-permanent-drawer';\r\n          case 'persistent':\r\n            return 'mdc-persistent-drawer';\r\n          case 'temporary':\r\n            return 'mdc-temporary-drawer';\r\n          default:\r\n            return this.small\r\n              ? 'mdc-temporary-drawer'\r\n              : 'mdc-persistent-drawer';\r\n        }\r\n      }\r\n    },\r\n    isPermanent() {\r\n      return this.permanent || this.type === 'mdc-permanent-drawer';\r\n    },\r\n    isPersistent() {\r\n      return this.persistent || this.type === 'mdc-persistent-drawer';\r\n    },\r\n    isTemporary() {\r\n      return this.temporary || this.type === 'mdc-temporary-drawer';\r\n    },\r\n    isResponsive() {\r\n      return !(\r\n        this.permanent ||\r\n        this.persistent ||\r\n        this.temporary ||\r\n        this.drawerType\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    busemit(event) {\r\n      eventBus.$emit(event);\r\n    },\r\n    open() {\r\n      this.open_ = true;\r\n    },\r\n    close() {\r\n      this.isPermanent || (this.open_ = false);\r\n    },\r\n    toggle() {\r\n      this.isPermanent || (this.isOpen() ? this.close() : this.open());\r\n    },\r\n    isOpen() {\r\n      return this.isPermanent || this.open_;\r\n    },\r\n    refreshMedia() {\r\n      this.small = media.small.matches;\r\n      this.large = media.large.matches;\r\n      if (this.isResponsive) {\r\n        if (this.large) {\r\n          this.open();\r\n        } else {\r\n          this.close();\r\n        }\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    if (window && window.matchMedia) {\r\n      this.small = media.small.matches;\r\n      this.large = media.large.matches;\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.toggleOn) {\r\n      this.toggleOnEventSource = this.toggleOnSource || this.$root;\r\n      this.toggleOnEventSource.$on(this.toggleOn, this.toggle);\r\n    }\r\n    if (this.openOn) {\r\n      this.openOnEventSource = this.openOnSource || this.$root;\r\n      this.openOnEventSource.$on(this.openOn, this.open);\r\n    }\r\n    if (this.closeOn) {\r\n      this.closeOnEventSource = this.closeOnSource || this.$root;\r\n      this.closeOnEventSource.$on(this.closeOn, this.close);\r\n    }\r\n    media.small.addListener(this.refreshMedia);\r\n    media.large.addListener(this.refreshMedia);\r\n    this.$nextTick(() => this.refreshMedia());\r\n  },\r\n  beforeDestroy() {\r\n    media.small.removeListener(this.refreshMedia);\r\n    media.large.removeListener(this.refreshMedia);\r\n\r\n    if (this.toggleOnEventSource) {\r\n      this.toggleOnEventSource.$off(this.toggleOn, this.toggle);\r\n    }\r\n    if (this.openOnEventSource) {\r\n      this.openOnEventSource.$off(this.openOn, this.open);\r\n    }\r\n    if (this.closeOnEventSource) {\r\n      this.closeOnEventSource.$off(this.closeOn, this.close);\r\n    }\r\n  },\r\n};\r\n</script>\r\n","<template>\n  <header class=\"mdc-drawer-header mdc-drawer__header\" v-if=\"show\">\n    <div class=\"mdc-drawer__header-content\">\n      <slot />\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-header',\n  props: {\n    'permanent': Boolean,\n    'persistent': Boolean,\n    'temporary': Boolean\n  },\n  inject: ['mdcDrawer'],\n  computed: {\n    show () {\n      if (this.temporary || this.persistent || this.permanent) {\n        return (this.temporary && this.mdcDrawer.isTemporary) ||\n          (this.persistent && this.mdcDrawer.isPersistent) ||\n            (this.permanent && this.mdcDrawer.isPermanent)\n      } else {\n        return true\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <nav class=\"mdc-drawer-list mdc-list\" :class=\"classes\">\n    <slot></slot>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-list',\n  props: {\n    'dense': Boolean,\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-list--dense': this.dense\n      }\n    }\n  }\n  \n}\n</script>","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {!{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {!{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {!{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {!{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {!{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {!{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {!{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n      }\n      this.layoutInternal_();\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    requestAnimationFrame(() => {\n      // This needs to be wrapped in an rAF call b/c web browsers\n      // report active states inconsistently when they're called within\n      // event handling code:\n      // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n      // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n      activationState.wasElementMadeActive = (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      } else {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n    });\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {supportsCssVariables, getMatchesProperty, applyPassive} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n\n  static get MATCHES () {\n    /* global HTMLElement */\n    return RippleBase._matches ||\n      ( RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n  }\n\n  static isSurfaceActive (ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor (vm, options) {\n    super(Object.assign({\n      browserSupportsCssVars: () => {\n        return supportsCssVariables(window)\n      },\n      isUnbounded: () => {\n        return false\n      },\n      isSurfaceActive: () => {\n        return vm.$el[RippleBase.MATCHES](':active')\n      },\n      isSurfaceDisabled: () => {\n        return vm.disabled\n      },\n      addClass (className) {\n        vm.$set(vm.classes, className, true)\n      },\n      removeClass (className) {\n        vm.$delete(vm.classes, className)\n      },\n      containsEventTarget: (target) => vm.$el.contains(target),\n      registerInteractionHandler: (evt, handler) => {\n        vm.$el.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        vm.$el.removeEventListener(evt, handler)\n      },\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) => {\n        return window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        return window.removeEventListener('resize', handler)\n      },\n      updateCssVariable: (varName, value) => {\n        vm.$set(vm.styles, varName, value)\n      },\n      computeBoundingRect: () => {\n        return vm.$el.getBoundingClientRect()\n      },\n      getWindowPageOffset: () => {\n        return ({x: window.pageXOffset, y: window.pageYOffset})\n      },\n    }, options))\n  }\n}\n\nexport const RippleMixin = {\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted () {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.ripple.destroy()\n  }\n}  ","<template>\r\n  <custom-link :link=\"link\"\r\n    class=\"mdc-drawer-item mdc-list-item\"\r\n    :class=\"[classes, itemClasses]\" :style=\"styles\"\r\n    v-on=\"mylisteners\">\r\n    <span class=\"mdc-list-item__graphic\" v-if=\"hasStartDetail\">\r\n      <slot name=\"start-detail\">\r\n        <i class=\"material-icons\" aria-hidden=\"true\">{{startIcon}}</i>\r\n      </slot>\r\n    </span>\r\n    <slot></slot>\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin, CustomLinkMixin } from '../base';\r\nimport { RippleBase } from '../ripple';\r\n\r\nexport default {\r\n  name: 'mdc-drawer-item',\r\n  inject: ['mdcDrawer'],\r\n  mixins: [DispatchEventMixin, CustomLinkMixin],\r\n  props: {\r\n    startIcon: String,\r\n    temporaryClose: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    activated: Boolean,\r\n    exactActiveClass: {\r\n      type: String,\r\n      default: 'mdc-list-item--activated',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {},\r\n    };\r\n  },\r\n  computed: {\r\n    mylisteners() {\r\n      return {\r\n        ...this.$listeners,\r\n        click: e => {\r\n          this.mdcDrawer.isTemporary &&\r\n            this.temporaryClose &&\r\n            this.mdcDrawer.close();\r\n          this.dispatchEvent(e);\r\n        },\r\n      };\r\n    },\r\n    itemClasses() {\r\n      return {\r\n        'mdc-list-item--activated': this.activated,\r\n      };\r\n    },\r\n    hasStartDetail() {\r\n      return this.startIcon || this.$slots['start-detail'];\r\n    },\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this);\r\n    this.ripple.init();\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple && this.ripple.destroy();\r\n    this.ripple = null;\r\n  },\r\n};\r\n</script>\r\n","<template>\n  <div class=\"mdc-drawer-layout\">\n      <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-layout',\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-divider',\n}\n</script>\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["CustomLink","type","String","default","Object","h","context","element","data","babelHelpers.extends","props","link","parent","$router","$root","$options","components","tag","on","click","nativeOn","children","CustomLinkMixin","Boolean","this","to","exact","append","replace","activeClass","exactActiveClass","DispatchEventMixin","Array","evt","$emit","event","target","eventTarget","args","eventArgs","$listeners","_this","dispatchEvent","e","render","FOCUSABLE_ELEMENTS","MDCFoundation","adapter","adapter_","MDCSlidableDrawerFoundation","root","foundation","undefined","root_","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","CustomEvent","document","createEvent","initCustomEvent","rootCssClass","animatingCssClass","openCssClass","defaultAdapter","rootCssClass_","animatingCssClass_","openCssClass_","transitionEndHandler_","handleTransitionEnd_","inert_","componentTouchStartHandler_","handleTouchStart_","componentTouchMoveHandler_","handleTouchMove_","componentTouchEndHandler_","handleTouchEnd_","documentKeydownHandler_","key","keyCode","close","ROOT","OPEN","hasClass","hasNecessaryDom","isOpen_","detabinate_","registerDrawerInteractionHandler","registerInteractionHandler","deregisterDrawerInteractionHandler","deregisterInteractionHandler","deregisterDocumentKeydownHandler","registerTransitionEndHandler","registerDocumentKeydownHandler","addClass","retabinate_","notifyOpen","removeClass","notifyClose","elements","getFocusableElements","i","length","saveElementTabState","makeElementUntabbable","restoreElementTabState","pointerType","direction_","isRtl","drawerWidth_","getDrawerWidth","startX_","touches","pageX","currentX_","updateRaf_","requestAnimationFrame","updateDrawer_","bind","prepareForTouchEnd_","Math","abs","newPosition_","open","setTranslateX","isRootTransitioningEventTarget_","deregisterTransitionEndHandler","min","max","cssClasses","strings","MDCPersistentDrawerFoundation","ANIMATING","el","isDrawer","TAB_DATA","TAB_DATA_HANDLED","storedTransformPropertyName_","supportsPassive_","remapEvent","eventName","window","getTransformPropertyName","globalObj","forceRefresh","transformPropertyName","createElement","style","applyPassive","isSupported","passive","hasAttribute","setAttribute","getAttribute","removeAttribute","_refresh","className","$set","classes","$delete","$el","classList","contains","$refs","drawer","util","offsetWidth","value","setProperty","querySelectorAll","getComputedStyle","getPropertyValue","MDCTemporaryDrawerFoundation","componentClickHandler_","eventTargetHasClass","updateCssVariable","enableScroll_","disableScroll_","newOpacity","addBodyClass","SCROLL_LOCK","removeBodyClass","OPACITY_VAR_NAME","body","add","remove","CSS","supports","bus_","eventBus","media","_small","matchMedia","_large","val","required","mdcDrawer","mdcPermanentDrawer","mdcPersistentDrawer","mdcTemporaryDrawer","permanent","persistent","temporary","drawerType","small","open_","isPermanent","isOpen","matches","large","isResponsive","toggleOn","toggleOnEventSource","toggleOnSource","$on","toggle","openOn","openOnEventSource","openOnSource","closeOn","closeOnEventSource","closeOnSource","addListener","refreshMedia","$nextTick","removeListener","$off","isTemporary","isPersistent","dense","varName","numbers","supportsCssVariables_","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","BG_FOCUSED","blurHandler_","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","UNBOUNDED","_this2","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","isSurfaceActive","animateActivation_","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","setTimeout","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","vm","options","windowObj","supportsCssVariables","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","appendChild","computedStyle","hasPseudoVarBug","borderTopStyle","detectEdgePseudoVarBug","MATCHES","disabled","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","temporaryClose","activated","startIcon","$slots","ripple","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}