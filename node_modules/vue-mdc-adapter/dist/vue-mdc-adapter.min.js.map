{"version":3,"file":"vue-mdc-adapter.min.js","sources":["../components/base/base-plugin.js","../components/base/custom-element.js","../components/base/custom-link.js","../components/base/custom-event.js","../components/base/custom-button.js","../components/base/custom-icon.js","../components/base/dispatch-event-mixin.js","../components/base/dispatch-focus-mixin.js","../components/common/unique-id.js","../components/common/event-bus.js","../components/common/mdc-common.js","../node_modules/@material/base/foundation.js","../node_modules/@material/ripple/constants.js","../node_modules/@material/ripple/adapter.js","../node_modules/@material/ripple/util.js","../node_modules/@material/ripple/foundation.js","../components/ripple/mdc-ripple-base.js","../components/ripple/index.js","../components/ripple/mdc-ripple.vue","../components/button/mdc-button-base.vue","../components/button/mdc-button.vue","../components/button/index.js","../components/card/index.js","../components/card/mdc-card.vue","../components/card/mdc-card-primary-action.vue","../components/card/mdc-card-media.vue","../components/card/mdc-card-header.vue","../components/card/mdc-card-title.vue","../components/card/mdc-card-subtitle.vue","../components/card/mdc-card-text.vue","../components/card/mdc-card-actions.vue","../components/card/mdc-card-action-buttons.vue","../components/card/mdc-card-action-button.vue","../components/card/mdc-card-action-icons.vue","../components/card/mdc-card-action-icon.vue","../node_modules/@material/base/component.js","../node_modules/@material/ripple/index.js","../node_modules/@material/checkbox/constants.js","../node_modules/@material/checkbox/adapter.js","../node_modules/@material/checkbox/foundation.js","../node_modules/@material/form-field/adapter.js","../node_modules/@material/form-field/constants.js","../node_modules/@material/form-field/foundation.js","../node_modules/@material/animation/index.js","../components/checkbox/index.js","../components/checkbox/mdc-checkbox.vue","../node_modules/@material/chips/chip/constants.js","../node_modules/@material/chips/chip/adapter.js","../node_modules/@material/chips/chip/foundation.js","../components/chips/mdc-chip.vue","../node_modules/@material/chips/chip-set/constants.js","../node_modules/@material/chips/chip-set/adapter.js","../node_modules/@material/chips/chip/index.js","../node_modules/@material/chips/chip-set/foundation.js","../components/chips/index.js","../components/chips/mdc-chip-set.vue","../node_modules/@material/dialog/constants.js","../node_modules/@material/dialog/foundation.js","../node_modules/tabbable/index.js","../node_modules/focus-trap/index.js","../components/dialog/index.js","../components/dialog/mdc-dialog.vue","../node_modules/@material/dialog/util.js","../components/drawer/mdc-permanent-drawer.vue","../node_modules/@material/drawer/slidable/constants.js","../node_modules/@material/drawer/slidable/foundation.js","../node_modules/@material/drawer/persistent/constants.js","../node_modules/@material/drawer/persistent/foundation.js","../node_modules/@material/drawer/util.js","../components/drawer/mdc-persistent-drawer.vue","../node_modules/@material/drawer/temporary/constants.js","../node_modules/@material/drawer/temporary/foundation.js","../components/drawer/mdc-temporary-drawer.vue","../components/drawer/mdc-drawer.vue","../components/drawer/index.js","../components/drawer/mdc-drawer-layout.vue","../components/drawer/mdc-drawer-header.vue","../components/drawer/mdc-drawer-list.vue","../components/drawer/mdc-drawer-item.vue","../components/drawer/mdc-drawer-divider.vue","../components/elevation/index.js","../components/elevation/mdc-elevation.vue","../components/fab/index.js","../components/fab/mdc-fab.vue","../node_modules/@material/grid-list/constants.js","../node_modules/@material/grid-list/foundation.js","../components/grid-list/index.js","../components/grid-list/mdc-grid-list.vue","../components/grid-list/mdc-grid-tile.vue","../components/icon/index.js","../components/icon/mdc-icon.vue","../node_modules/@material/icon-toggle/constants.js","../node_modules/@material/icon-toggle/adapter.js","../node_modules/@material/icon-toggle/foundation.js","../components/icon-toggle/index.js","../components/icon-toggle/mdc-icon-toggle.vue","../components/layout-app/index.js","../components/layout-app/mdc-layout-app.vue","../components/layout-grid/mdc-layout-grid.vue","../components/layout-grid/mdc-layout-cell.vue","../components/layout-grid/index.js","../components/layout-grid/mdc-layout-inner-grid.vue","../node_modules/@material/linear-progress/constants.js","../node_modules/@material/linear-progress/foundation.js","../components/linear-progress/mdc-linear-progress.vue","../components/linear-progress/index.js","../components/list/index.js","../components/list/mdc-list.vue","../components/list/mdc-list-item.vue","../components/list/mdc-list-divider.vue","../components/list/mdc-list-group.vue","../components/list/mdc-list-group-header.vue","../components/list/mdc-list-group-divider.vue","../node_modules/@material/menu/constants.js","../node_modules/@material/menu/adapter.js","../node_modules/@material/menu/foundation.js","../node_modules/@material/menu/util.js","../components/menu/index.js","../components/menu/mdc-menu.vue","../components/menu/mdc-menu-item.vue","../components/menu/mdc-menu-divider.vue","../components/menu/mdc-menu-anchor.vue","../node_modules/@material/radio/constants.js","../node_modules/@material/radio/adapter.js","../node_modules/@material/radio/foundation.js","../components/radio/index.js","../components/radio/mdc-radio.vue","../node_modules/@material/select/constants.js","../node_modules/@material/select/foundation.js","../node_modules/@material/select/bottom-line/constants.js","../node_modules/@material/select/bottom-line/adapter.js","../node_modules/@material/select/bottom-line/foundation.js","../node_modules/@material/select/label/constants.js","../node_modules/@material/select/label/adapter.js","../node_modules/@material/select/label/foundation.js","../components/select/index.js","../components/select/mdc-select.vue","../node_modules/@material/slider/constants.js","../node_modules/@material/slider/foundation.js","../node_modules/@material/slider/adapter.js","../components/slider/index.js","../components/slider/mdc-slider.vue","../node_modules/@material/snackbar/constants.js","../node_modules/@material/snackbar/foundation.js","../components/snackbar/index.js","../components/snackbar/mdc-snackbar.vue","../components/switch/index.js","../components/switch/mdc-switch.vue","../node_modules/@material/tabs/tab/constants.js","../node_modules/@material/tabs/tab/foundation.js","../components/tabs/mdc-tab.vue","../node_modules/@material/tabs/tab-bar/constants.js","../node_modules/@material/tabs/tab-bar/foundation.js","../components/tabs/index.js","../components/tabs/mdc-tab-bar.vue","../node_modules/@material/textfield/helper-text/constants.js","../node_modules/@material/textfield/helper-text/adapter.js","../node_modules/@material/textfield/helper-text/foundation.js","../node_modules/@material/textfield/icon/constants.js","../node_modules/@material/textfield/icon/adapter.js","../node_modules/@material/textfield/icon/foundation.js","../node_modules/@material/line-ripple/constants.js","../node_modules/@material/textfield/adapter.js","../node_modules/@material/line-ripple/adapter.js","../node_modules/@material/line-ripple/foundation.js","../node_modules/@material/floating-label/constants.js","../node_modules/@material/floating-label/adapter.js","../node_modules/@material/floating-label/foundation.js","../node_modules/@material/notched-outline/constants.js","../node_modules/@material/notched-outline/adapter.js","../node_modules/@material/notched-outline/foundation.js","../node_modules/@material/textfield/constants.js","../node_modules/@material/textfield/foundation.js","../components/textfield/index.js","../components/textfield/mdc-textfield.vue","../components/theme/mdc-theme.vue","../components/theme/index.js","../node_modules/@material/toolbar/constants.js","../node_modules/@material/toolbar/foundation.js","../components/toolbar/index.js","../components/toolbar/mdc-toolbar.vue","../components/toolbar/mdc-toolbar-row.vue","../components/toolbar/mdc-toolbar-section.vue","../components/toolbar/mdc-toolbar-menu-icon.vue","../components/toolbar/mdc-toolbar-title.vue","../components/toolbar/mdc-toolbar-icon.vue","../node_modules/@material/top-app-bar/constants.js","../node_modules/@material/top-app-bar/foundation.js","../node_modules/@material/top-app-bar/adapter.js","../node_modules/@material/top-app-bar/short/foundation.js","../components/top-app-bar/index.js","../components/top-app-bar/mdc-top-app-bar.vue","../components/top-app-bar/mdc-top-app-bar--action.vue","../components/typography/mdc-typography.js","../components/typography/index.js","../components/index.js","../components/base/auto-init.js","../components/entry.js"],"sourcesContent":["export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","export const CustomElement = {\n  functional: true,\n  render (createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div', \n      context.data,\n      context.children)\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link : Object,\n  },\n  render (h, context) {\n    let element \n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link'] \n      data.props = Object.assign({tag: context.props.tag}, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = {click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag \n    } \n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n  },\n  computed: {\n    link () {\n      return this.to && {\n        to: this.to,\n        exact: this.exact,\n        append: this.append,\n        replace: this.replace,\n        activeClass: this.activeClass,\n        exactActiveClass: this.exactActiveClass,\n      }\n    }\n  },\n  components : { \n    CustomLink \n  }\n}","/* global CustomEvent */\n\nexport function emitCustomEvent (el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const CustomButton = {\n  name: 'custom-button',\n  functional: true,\n  props: {\n    link : Object,\n  },\n  render (h, context) {\n    let element \n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link'] \n      data.props = Object.assign({tag: context.props.tag}, context.props.link)\n      data.attrs.role = 'button'\n      if (data.on.click) {\n        data.nativeOn = {click: data.on.click }\n      }\n    } else if (data.attrs && data.attrs.href) {\n      // href case\n      element = 'a' \n      data.attrs.role = 'button'\n    }  else {\n      // button fallback\n      element = 'button'\n    } \n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomButtonMixin = {\n  props: {\n    href: String,\n    disabled: Boolean,\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n  },\n  computed: {\n    link () {\n      return this.to && {\n        to: this.to,\n        exact: this.exact,\n        append: this.append,\n        replace: this.replace,\n        activeClass: this.activeClass,\n        exactActiveClass: this.exactActiveClass,\n      }\n    }\n  },\n  components : { \n    CustomButton \n  }\n}\n","export function extractIconProp (iconProp) {\n    if (typeof iconProp === 'string') {\n      return {\n        classes: { 'material-icons' : true},\n        content: iconProp \n      }\n    }\n    else if (iconProp instanceof Array){\n      return { \n        classes: iconProp.reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        }\n    }\n    else if (typeof iconProp === 'object'){\n      return { \n        classes: iconProp.className.split(' ').reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        content: iconProp.textContent \n      }\n    }\n  }\n","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array,\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt);\n      if (this.event) {\n        let target = this.eventTarget || this.$root;\n        let args = this.eventArgs || [];\n        target.$emit(this.event, ...args);\n      }\n    },\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e),\n      };\n    },\n  },\n};\n","export const DispatchFocusMixin = {\n  data () {\n    return  {hasFocus: false}\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp () {\n      this._active = false\n    },\n    onFocusEvent () {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    onBlurEvent () {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted () {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy () {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","let uid_ = 0;\n\nconst uidMixin = {\n  beforeCreate() {\n    this.vma_uid_ = `_vma_${uid_++}`;\n  },\n};\n\nconst VMAUniqueId = {\n  install(Vue) {\n    Vue.mixin(uidMixin);\n  },\n};\n\nexport { VMAUniqueId };\n","let bus_;\n\nexport const eventBus = {\n  install(vue) {\n    bus_ = new vue();\n  },\n  $emit(event, ...args) {\n    bus_ && bus_.$emit(event, ...args);\n  },\n  $on(event, callback) {\n    bus_ && bus_.$on(event, callback);\n  },\n  $once(event, callback) {\n    bus_ && bus_.$once(event, callback);\n  },\n  $off(event, callback) {\n    bus_ && bus_.$off(event, callback);\n  },\n};\n","import { VMAUniqueId } from './unique-id.js';\nimport { eventBus } from './event-bus.js';\n\nconst VueMDCCommon = {\n  install(Vue) {\n    VMAUniqueId.install(Vue);\n    eventBus.install(Vue);\n  },\n};\n\nexport default VueMDCCommon;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {!{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {!{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {!{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {!{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {!{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {!{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {!{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n      }\n      this.layoutInternal_();\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    requestAnimationFrame(() => {\n      // This needs to be wrapped in an rAF call b/c web browsers\n      // report active states inconsistently when they're called within\n      // event handling code:\n      // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n      // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n      activationState.wasElementMadeActive = (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      } else {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n    });\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {supportsCssVariables, getMatchesProperty, applyPassive} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n\n  static get MATCHES () {\n    /* global HTMLElement */\n    return RippleBase._matches ||\n      ( RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n  }\n\n  static isSurfaceActive (ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor (vm, options) {\n    super(Object.assign({\n      browserSupportsCssVars: () => {\n        return supportsCssVariables(window)\n      },\n      isUnbounded: () => {\n        return false\n      },\n      isSurfaceActive: () => {\n        return vm.$el[RippleBase.MATCHES](':active')\n      },\n      isSurfaceDisabled: () => {\n        return vm.disabled\n      },\n      addClass (className) {\n        vm.$set(vm.classes, className, true)\n      },\n      removeClass (className) {\n        vm.$delete(vm.classes, className)\n      },\n      containsEventTarget: (target) => vm.$el.contains(target),\n      registerInteractionHandler: (evt, handler) => {\n        vm.$el.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        vm.$el.removeEventListener(evt, handler)\n      },\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) => {\n        return window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        return window.removeEventListener('resize', handler)\n      },\n      updateCssVariable: (varName, value) => {\n        vm.$set(vm.styles, varName, value)\n      },\n      computeBoundingRect: () => {\n        return vm.$el.getBoundingClientRect()\n      },\n      getWindowPageOffset: () => {\n        return ({x: window.pageXOffset, y: window.pageYOffset})\n      },\n    }, options))\n  }\n}\n\nexport const RippleMixin = {\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted () {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.ripple.destroy()\n  }\n}  ","import {BasePlugin} from '../base'\nimport mdcRipple from './mdc-ripple.vue'\n\nexport * from './mdc-ripple-base.js'\n\nexport {\n  mdcRipple\n}\n\nexport default BasePlugin({\n  mdcRipple\n})\n","<template>\n  <custom-element :tag=\"tag\" class=\"mdc-ripple\"\n    :classes=\"classes\" :styles=\"styles\">\n    <slot />\n  </custom-element>\n</template>\n\n<script>\nimport {CustomElementMixin} from '../base'\nimport {RippleMixin} from './mdc-ripple-base'\n\nexport default {\n  name: 'mdc-ripple',\n  mixins:[CustomElementMixin, RippleMixin],\n  props: {\n    tag: String\n  },\n}\n</script>\n","<template>\n  <custom-button ref=\"root\"\n    :class=\"classes\" :style=\"styles\"\n    :href=\"href\" :link=\"link\" :disabled=\"disabled\"\n    v-on=\"listeners\">\n    <slot />\n  </custom-button>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomButtonMixin } from '../base';\nimport { RippleMixin } from '../ripple';\n\nexport default {\n  name: 'mdc-button-base',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  data() {\n    return {\n      classes: {},\n      styles: {},\n    };\n  },\n};\n</script>\n","<script>\nimport mdcButtonBase from './mdc-button-base.vue';\n\nexport default {\n  name: 'mdc-button',\n  extends: mdcButtonBase,\n  props: {\n    raised: Boolean,\n    unelevated: Boolean,\n    stroked: Boolean,\n    dense: Boolean,\n    accent: Boolean,\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-button': true,\n        'mdc-button--raised': this.raised,\n        'mdc-button--unelevated': this.unelevated,\n        'mdc-button--stroked': this.stroked,\n        'mdc-button--dense': this.dense,\n        'mdc-button--accent': this.accent,\n      },\n    };\n  },\n  watch: {\n    raised() {\n      this.$set(this.classes, 'mdc-button--raised', this.raised);\n    },\n    unelevated() {\n      this.$set(this.classes, 'mdc-button--unelevated', this.unelevated);\n    },\n    stroked() {\n      this.$set(this.classes, 'mdc-button--stroked', this.stroked);\n    },\n    dense() {\n      this.$set(this.classes, 'mdc-button--dense', this.dense);\n    },\n    accent() {\n      this.$set(this.classes, 'mdc-button--accent', this.accent);\n    },\n  },\n};\n</script>\n","import {BasePlugin} from '../base'\nimport mdcButton from './mdc-button.vue'\nimport mdcButtonBase from './mdc-button-base.vue'\n\nexport {mdcButtonBase, mdcButton}\n\nexport default BasePlugin({\n  mdcButton\n})\n","import {BasePlugin} from '../base'\r\nimport mdcCard from './mdc-card.vue'\r\nimport mdcCardPrimaryAction from './mdc-card-primary-action.vue'\r\nimport mdcCardMedia from './mdc-card-media.vue'\r\nimport mdcCardHeader from './mdc-card-header.vue'\r\nimport mdcCardTitle from './mdc-card-title.vue'\r\nimport mdcCardSubtitle from './mdc-card-subtitle.vue'\r\nimport mdcCardText from './mdc-card-text.vue'\r\nimport mdcCardActions from './mdc-card-actions.vue'\r\nimport mdcCardActionButtons from './mdc-card-action-buttons.vue'\r\nimport mdcCardActionButton from './mdc-card-action-button.vue'\r\nimport mdcCardActionIcons from './mdc-card-action-icons.vue'\r\nimport mdcCardActionIcon from './mdc-card-action-icon.vue'\r\n\r\nexport {\r\n  mdcCard,\r\n  mdcCardPrimaryAction, \r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon \r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcCard, \r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n})\r\n","<template>\r\n  <div class=\"mdc-card\" :class=\"{'mdc-card--stroked': stroked}\">\r\n    <slot>\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card\",\r\n  props: {\r\n    stroked: Boolean\r\n  }\r\n};\r\n</script>\r\n","<template>\r\n  <custom-link \r\n    class=\"mdc-card-primary-action mdc-card__primary-action\"\r\n    :class=\"classes\" :style=\"styles\" \r\n    :link=\"link\" \r\n    v-on=\"listeners\">\r\n    <slot />\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin, CustomLinkMixin } from '../base';\r\nimport { RippleMixin } from '../ripple/index';\r\nexport default {\r\n  name: 'mdc-card-primary-action',\r\n  mixins: [DispatchEventMixin, CustomLinkMixin, RippleMixin],\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {},\r\n    };\r\n  },\r\n};\r\n</script>\r\n","<template>\r\n  <section class=\"mdc-card-media mdc-card__media\" \r\n    :class=\"classes\" :style=\"styles\">\r\n    <div class=\"mdc-card__media-content\" v-if=\"$slots.default\">\r\n      <slot>\r\n      </slot>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card-media\",\r\n  props: {\r\n    src: String,\r\n    'square': Boolean\r\n  },\r\n  computed: {\r\n    styles() {\r\n      var styles = {\r\n        backgroundImage: `url(${this.src})`\r\n      };\r\n\r\n      return styles;\r\n    }, \r\n    classes() {\r\n      return this.square ? 'mdc-card__media--square': 'mdc-card__media--16-9'\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\n  <section class=\"mdc-card-header mdc-card__primary\">\n    <slot>\n      <h1 class=\"mdc-card__title\"\n        :class=\"{'mdc-card__title--large': largeTitle}\"\n        v-if=\"title\"\n        >\n        {{ title }}\n      </h1>\n      <h2 class=\"mdc-card__subtitle\"\n        v-if=\"subtitle\"\n      >\n       {{ subtitle }} \n      </h2>\n    </slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-header',\n  props: {\n    'title': String,\n    'subtitle': String,\n    'large-title': { type: Boolean, default: true }\n  }\n}\n</script>\n","<template>\n  <h1 class=\"mdc-card-title mdc-card__title\"\n      :class=\"{'mdc-card__title--large': large}\">\n    <slot></slot>\n  </h1>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-title',\n  props: {\n    'large': Boolean\n  }\n}\n</script>\n","<template>\n  <h2 class=\"mdc-card-subtitle mdc-card__subtitle\">\n    <slot>\n    </slot>\n  </h2>\n</template>\n\n\n\n<script>\nexport default {\n  name: 'mdc-card-subtitle'\n}\n</script>\n","<template>\n  <section class=\"mdc-card-text mdc-card__supporting-text\">\n    <slot>\n    </slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-text'\n}\n</script>\n","<template>\r\n  <section class=\"mdc-card-actions mdc-card__actions\" \r\n          :class=\"classes\">\r\n    <slot>\r\n    </slot>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'mdc-card-actions',\r\n  props: {\r\n    fullBleed: Boolean\r\n  },\r\n  computed: {\r\n    classes () {\r\n      return {\r\n          'mdc-card__actions--full-bleed': this.fullBleed,\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-buttons mdc-card__action-buttons\">\r\n    <slot>\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card-action-buttons\"\r\n};\r\n</script>\r\n","<script>\r\nimport {mdcButtonBase} from '../button'\r\n\r\nexport default {\r\n  name: 'mdc-card-action-button',\r\n  extends: mdcButtonBase,\r\n  props: {\r\n    compact: Boolean,\r\n    accent: Boolean\r\n  },\r\n  data () {\r\n    return {\r\n      classes: {\r\n        'mdc-button': true,\r\n        'mdc-card__action': true,\r\n        'mdc-card-action-button': true,\r\n        'mdc-button--compact': this.compact,\r\n        'mdc-button--accent': this.accent,\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    compact () {\r\n      this.$set(this.classes, 'mdc-button--compact', this.compact )\r\n    },\r\n    accent () {\r\n      this.$set(this.classes, 'mdc-button--accent', this.accent )\r\n    },\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-icons mdc-card__action-icons\">\r\n    <slot>\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card-action-icons\"\r\n};\r\n</script>\r\n","<template>\r\n  <span :class=\"classes\" :style=\"styles\" \r\n     v-on=\"listeners\">\r\n    <slot>{{ icon }}</slot>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin } from '../base';\r\nimport { RippleBase } from '../ripple';\r\n\r\nexport default {\r\n  name: 'mdc-card-action-icon',\r\n  mixins: [DispatchEventMixin],\r\n  props: {\r\n    icon: String,\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-card-action-icon': true,\r\n        'material-icons': !!this.icon,\r\n        'mdc-card__action': true,\r\n        'mdc-card__action--icon': true,\r\n        'mdc-icon-toggle': true,\r\n      },\r\n      styles: {},\r\n    };\r\n  },\r\n  watch: {\r\n    icon() {\r\n      this.$set(this.classes, 'material-icons', !!this.icon);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this, {\r\n      isUnbounded: () => true,\r\n    });\r\n    this.ripple.init();\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple.destroy();\r\n  },\r\n};\r\n</script>\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /** @return {!MDCRippleFoundation} */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCCheckboxAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the input element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setNativeControlAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the input element.\n   * @param {string} attr\n   */\n  removeNativeControlAttr(attr) {}\n\n  /** @param {!EventListener} handler */\n  registerAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  registerChangeHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterChangeHandler(handler) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n\n  forceLayout() {}\n\n  /** @return {boolean} */\n  isAttachedToDOM() {}\n}\n\nexport default MDCCheckboxAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/** @const {!Array<string>} */\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlAttr: () => {},\n      removeNativeControlAttr: () => {},\n      registerAnimationEndHandler: (/* handler: EventListener */) => {},\n      deregisterAnimationEndHandler: (/* handler: EventListener */) => {},\n      registerChangeHandler: (/* handler: EventListener */) => {},\n      deregisterChangeHandler: (/* handler: EventListener */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    this.animEndHandler_ = /** @private {!EventListener} */ (\n      () => this.handleAnimationEnd());\n\n    this.changeHandler_ = /** @private {!EventListener} */ (\n      () => this.handleChange());\n  }\n\n  init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  }\n\n  destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  }\n\n  /** @param {boolean} indeterminate */\n  setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    clearTimeout(this.animEndLatchTimer_);\n    this.animEndLatchTimer_ = setTimeout(() => {\n      this.adapter_.removeClass(this.currentAnimationClass_);\n      this.adapter_.deregisterAnimationEndHandler(this.animEndHandler_);\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState_();\n  }\n\n  /** @private */\n  installPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n          get: desc.get,\n          set: (state) => {\n            desc.set.call(nativeCb, state);\n            this.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable,\n        });\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  }\n\n  /** @private */\n  uninstallPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = /** @type {!ObjectPropertyDescriptor} */ (\n        Object.getOwnPropertyDescriptor(cbProto, controlState));\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    const nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n    if (this.isIndeterminate()) {\n      this.adapter_.setNativeControlAttr(\n        strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n    } else {\n      this.adapter_.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n    }\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  }\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n  determineCheckState_(nativeCb) {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Form Field. Provides an interface for managing\n * - event handlers\n * - ripple activation\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCFormFieldAdapter {\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  activateInputRipple() {}\n\n  deactivateInputRipple() {}\n}\n\nexport default MDCFormFieldAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-form-field',\n};\n\n/** @enum {string} */\nconst strings = {\n  LABEL_SELECTOR: '.mdc-form-field > label',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFormFieldAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFormFieldAdapter>}\n */\nclass MDCFormFieldFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCFormFieldAdapter} */\n  static get defaultAdapter() {\n    return {\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      activateInputRipple: () => {},\n      deactivateInputRipple: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter));\n\n    /** @private {!EventListener} */\n    this.clickHandler_ = /** @type {!EventListener} */ (\n      () => this.handleClick_());\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n  }\n\n  /** @private */\n  handleClick_() {\n    this.adapter_.activateInputRipple();\n    requestAnimationFrame(() => this.adapter_.deactivateInputRipple());\n  }\n}\n\nexport default MDCFormFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","import {BasePlugin} from '../base'\nimport mdcCheckbox from './mdc-checkbox.vue'\n\nexport {\n  mdcCheckbox\n}\n\nexport default BasePlugin({\n  mdcCheckbox\n})\n","<template>\n  <div :class=formFieldClasses class=\"mdc-checkbox-wrapper\">\n    <div ref=\"root\" class=\"mdc-checkbox\"\n    :class=\"classes\" :style=\"styles\">\n      <input ref=\"control\" :id=\"vma_uid_\" type=\"checkbox\" :name=\"name\"\n        class=\"mdc-checkbox__native-control\" :value=\"value\"\n        @change=\"onChange\"/>\n      <div class=\"mdc-checkbox__background\">\n        <svg class=\"mdc-checkbox__checkmark\"\n            viewBox=\"0 0 24 24\">\n          <path class=\"checkbox__checkmark-path\"\n                fill=\"none\"\n                stroke=\"white\"\n                d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n        </svg>\n        <div class=\"mdc-checkbox__mixedmark\"></div>\n      </div>\n    </div>\n    <label ref=\"label\"  :for=\"vma_uid_\"\n    ><slot>{{label}}</slot></label>\n  </div>\n</template>\n\n<script>\n/* global HTMLElement */\nimport MDCCheckboxFoundation from '@material/checkbox/foundation';\nimport MDCFormFieldFoundation from '@material/form-field/foundation';\nimport { getCorrectEventName } from '@material/animation';\nimport { DispatchFocusMixin } from '../base';\nimport { RippleBase } from '../ripple';\n\nexport default {\n  name: 'mdc-checkbox',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'checked',\n    event: 'change',\n  },\n  props: {\n    checked: [Boolean, Array],\n    indeterminate: Boolean,\n    disabled: Boolean,\n    label: String,\n    'align-end': Boolean,\n    value: {\n      type: [String, Number],\n      default() {\n        return 'on';\n      },\n    },\n    name: String,\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {},\n    };\n  },\n  computed: {\n    hasLabel() {\n      return this.label || this.$slots.default;\n    },\n    formFieldClasses() {\n      return {\n        'mdc-form-field': this.hasLabel,\n        'mdc-form-field--align-end': this.hasLabel && this.alignEnd,\n      };\n    },\n  },\n  watch: {\n    checked: 'setChecked',\n    disabled(value) {\n      this.foundation.setDisabled(value);\n    },\n    indeterminate(value) {\n      this.foundation.setIndeterminate(value);\n    },\n  },\n  mounted() {\n    this.foundation = new MDCCheckboxFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setNativeControlAttr: (attr, value) => {\n        this.$refs.control.setAttribute(attr, value);\n      },\n      removeNativeControlAttr: attr => {\n        this.$refs.control.removeAttribute(attr);\n      },\n      registerAnimationEndHandler: handler =>\n        this.$refs.root.addEventListener(\n          getCorrectEventName(window, 'animationend'),\n          handler,\n        ),\n      deregisterAnimationEndHandler: handler =>\n        this.$refs.root.removeEventListener(\n          getCorrectEventName(window, 'animationend'),\n          handler,\n        ),\n      registerChangeHandler: handler =>\n        this.$refs.control.addEventListener('change', handler),\n      deregisterChangeHandler: handler =>\n        this.$refs.control.removeEventListener('change', handler),\n      getNativeControl: () => this.$refs.control,\n      forceLayout: () => this.$refs.root.offsetWidth,\n      isAttachedToDOM: () => Boolean(this.$el.parentNode),\n    });\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => RippleBase.isSurfaceActive(this.$refs.control),\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler);\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler);\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect();\n      },\n    });\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler);\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler);\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate();\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate();\n      },\n    });\n\n    this.foundation.init();\n    this.ripple.init();\n    this.formField.init();\n    this.setChecked(this.checked);\n    this.foundation.setDisabled(this.disabled);\n    this.foundation.setIndeterminate(this.indeterminate);\n  },\n  beforeDestroy() {\n    this.formField.destroy();\n    this.ripple.destroy();\n    this.foundation.destroy();\n  },\n  methods: {\n    setChecked(checked) {\n      this.foundation.setChecked(\n        Array.isArray(checked) ? checked.indexOf(this.value) > -1 : checked,\n      );\n    },\n\n    onChange() {\n      this.$emit('update:indeterminate', this.foundation.isIndeterminate());\n      const isChecked = this.foundation.isChecked();\n\n      if (Array.isArray(this.checked)) {\n        const idx = this.checked.indexOf(this.value);\n        if (isChecked) {\n          idx < 0 && this.$emit('change', this.checked.concat(this.value));\n        } else {\n          idx > -1 &&\n            this.$emit(\n              'change',\n              this.checked.slice(0, idx).concat(this.checked.slice(idx + 1)),\n            );\n        }\n      } else {\n        this.$emit('change', isChecked);\n      }\n    },\n  },\n};\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--hidden-leading',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  SELECTED: 'mdc-chip--selected',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipAdapter {\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the leading icon element.\n   * @param {string} className\n   */\n  addClassToLeadingIcon(className) {}\n\n  /**\n   * Removes a class from the leading icon element.\n   * @param {string} className\n   */\n  removeClassFromLeadingIcon(className) {}\n\n  /**\n   * Returns true if target has className, false otherwise.\n   * @param {!EventTarget} target\n   * @param {string} className\n   * @return {boolean}\n   */\n  eventTargetHasClass(target, className) {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n\n  /**\n   * Registers an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction() {}\n\n  /**\n   * Emits a custom \"MDCChip:trailingIconInteraction\" event denoting the trailing icon has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyTrailingIconInteraction() {}\n}\n\nexport default MDCChipAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      addClassToLeadingIcon: () => {},\n      removeClassFromLeadingIcon: () => {},\n      eventTargetHasClass: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n      registerTrailingIconInteractionHandler: () => {},\n      deregisterTrailingIconInteractionHandler: () => {},\n      notifyInteraction: () => {},\n      notifyTrailingIconInteraction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction_(evt);\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n    /** @private {function(!Event): undefined} */\n    this.trailingIconInteractionHandler_ = (evt) => this.handleTrailingIconInteraction_(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.registerTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.deregisterTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  /**\n   * Toggles the selected class on the chip element.\n   */\n  toggleSelected() {\n    if (this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClass(cssClasses.SELECTED);\n    } else {\n      this.adapter_.addClass(cssClasses.SELECTED);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction_(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * This is a proxy for handling a transition end event on the leading icon or checkmark,\n   * since the transition end event bubbles.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd_(evt) {\n    if (evt.propertyName !== 'opacity') {\n      return;\n    }\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.LEADING_ICON) &&\n        this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    } else if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHECKMARK) &&\n               !this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   * @param {!Event} evt\n   */\n  handleTrailingIconInteraction_(evt) {\n    evt.stopPropagation();\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyTrailingIconInteraction();\n    }\n  }\n}\n\nexport default MDCChipFoundation;\n","<template>\n<div :class=\"classes\" :style=\"styles\" tabindex=\"0\" v-on=\"$listeners\">\n  <i ref=\"leadingIcon\" class=\"mdc-chip__icon mdc-chip__icon--leading\"\n    :class=\"leadingClasses\" v-if=\"haveleadingIcon\"\n  >{{leadingIcon}}</i>\n  <div class=\"mdc-chip__checkmark\" v-if=\"isFilter\">\n    <svg class=\"mdc-chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n      <path class=\"mdc-chip__checkmark-path\" fill=\"none\" stroke=\"black\"\n            d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n    </svg>\n  </div>\n  <div class=\"mdc-chip__text\">\n    <slot></slot>\n  </div>\n  <i ref=\"trailingIcon\" class=\"mdc-chip__icon mdc-chip__icon--trailing\" tabindex=\"0\" role=\"button\"\n    :class=\"trailingClasses\" v-if=\"havetrailingIcon\"\n  >{{trailingIcon}}</i>\n</div>\n</template>\n\n<script>\nimport MDCChipFoundation from '@material/chips/chip/foundation';\nimport { CustomLinkMixin, emitCustomEvent } from '../base';\nimport { RippleBase } from '../ripple';\n\nexport default {\n  name: 'mdc-chip',\n  mixins: [CustomLinkMixin],\n  props: {\n    leadingIcon: [String],\n    trailingIcon: [String],\n    leadingIconClasses: [Object],\n    trailingIconClasses: [Object],\n  },\n  inject: ['mdcChipSet'],\n  data() {\n    return {\n      classes: {\n        'mdc-chip': true,\n      },\n      styles: {},\n    };\n  },\n  methods: {\n    toggleSelected() {\n      this.foundation.toggleSelected();\n    },\n  },\n  mounted() {\n    this.foundation = new MDCChipFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      addClassToLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.add(className);\n        }\n      },\n      removeClassFromLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.remove(className);\n        }\n      },\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      registerEventHandler: (evtType, handler) =>\n        this.$el.addEventListener(evtType, handler),\n      deregisterEventHandler: (evtType, handler) =>\n        this.$el.removeEventListener(evtType, handler),\n      notifyInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.INTERACTION_EVENT,\n          {\n            chip: this,\n          },\n          true,\n        );\n      },\n      notifyTrailingIconInteraction: () => {\n        this.$emit('trailingIconClick');\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.TRAILING_ICON_INTERACTION_EVENT,\n          {\n            chip: this,\n          },\n          true,\n        );\n      },\n\n      registerTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.addEventListener(evtType, handler);\n        }\n      },\n      deregisterTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.removeEventListener(evtType, handler);\n        }\n      },\n    });\n\n    this.foundation.init();\n\n    this.ripple = new RippleBase(this);\n    this.ripple.init();\n  },\n  computed: {\n    isFilter() {\n      return this.mdcChipSet && this.mdcChipSet.filter;\n    },\n    haveleadingIcon() {\n      return !!this.leadingIcon || this.leadingIconClasses;\n    },\n    havetrailingIcon() {\n      return !!this.trailingIcon || this.trailingIconClasses;\n    },\n    leadingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.leadingIcon,\n        },\n        this.leadingIconClasses,\n      );\n    },\n    trailingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.trailingIcon,\n        },\n        this.trailingIconClasses,\n      );\n    },\n  },\n  beforeDestroy() {\n    this.ripple.destroy();\n    this.foundation.destroy();\n  },\n};\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip Set.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip Set into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipSetAdapter {\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCChipSetAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport {MDCRipple} from '@material/ripple/index';\n\nimport MDCChipAdapter from './adapter';\nimport MDCChipFoundation from './foundation';\nimport {strings} from './constants';\n\n/**\n * @extends {MDCComponent<!MDCChipFoundation>}\n * @final\n */\nclass MDCChip extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n\n    /** @private {?Element} */\n    this.leadingIcon_ = this.root_.querySelector(strings.LEADING_ICON_SELECTOR);\n    /** @private {!MDCRipple} */\n    this.ripple_ = new MDCRipple(this.root_);\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCChip}\n   */\n  static attachTo(root) {\n    return new MDCChip(root);\n  }\n\n  destroy() {\n    this.ripple_.destroy();\n    super.destroy();\n  }\n\n  /**\n   * Toggles selected state of the chip.\n   */\n  toggleSelected() {\n    this.foundation_.toggleSelected();\n  }\n\n  /**\n   * @return {!MDCChipFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCChipFoundation(/** @type {!MDCChipAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      addClassToLeadingIcon: (className) => {\n        if (this.leadingIcon_) {\n          this.leadingIcon_.classList.add(className);\n        }\n      },\n      removeClassFromLeadingIcon: (className) => {\n        if (this.leadingIcon_) {\n          this.leadingIcon_.classList.remove(className);\n        }\n      },\n      eventTargetHasClass: (target, className) => target.classList.contains(className),\n      registerEventHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),\n      deregisterEventHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),\n      registerTrailingIconInteractionHandler: (evtType, handler) => {\n        const trailingIconEl = this.root_.querySelector(strings.TRAILING_ICON_SELECTOR);\n        if (trailingIconEl) {\n          trailingIconEl.addEventListener(evtType, handler);\n        }\n      },\n      deregisterTrailingIconInteractionHandler: (evtType, handler) => {\n        const trailingIconEl = this.root_.querySelector(strings.TRAILING_ICON_SELECTOR);\n        if (trailingIconEl) {\n          trailingIconEl.removeEventListener(evtType, handler);\n        }\n      },\n      notifyInteraction: () => this.emit(strings.INTERACTION_EVENT, {chip: this}, true /* shouldBubble */),\n      notifyTrailingIconInteraction: () => this.emit(\n        strings.TRAILING_ICON_INTERACTION_EVENT, {chip: this}, true /* shouldBubble */),\n    })));\n  }\n\n  /** @return {!MDCRipple} */\n  get ripple() {\n    return this.ripple_;\n  }\n}\n\nexport {MDCChip, MDCChipFoundation};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\n// eslint-disable-next-line no-unused-vars\nimport {MDCChip, MDCChipFoundation} from '../chip/index';\nimport {strings, cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n\n    /**\n     * The selected chips in the set. Only used for choice chip set or filter chip set.\n     * @private {!Array<!MDCChip>}\n     */\n    this.selectedChips_ = [];\n\n    /** @private {function(!Event): undefined} */\n    this.chipInteractionHandler_ = (evt) => this.handleChipInteraction_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n  }\n\n  /**\n   * Handles a chip interaction event\n   * @param {!Object} evt\n   * @private\n   */\n  handleChipInteraction_(evt) {\n    const {chip} = evt.detail;\n    if (this.adapter_.hasClass(cssClasses.CHOICE)) {\n      if (this.selectedChips_.length === 0) {\n        this.selectedChips_[0] = chip;\n      } else if (this.selectedChips_[0] !== chip) {\n        this.selectedChips_[0].toggleSelected();\n        this.selectedChips_[0] = chip;\n      } else {\n        this.selectedChips_ = [];\n      }\n      chip.toggleSelected();\n    } else if (this.adapter_.hasClass(cssClasses.FILTER)) {\n      const index = this.selectedChips_.indexOf(chip);\n      if (index >= 0) {\n        this.selectedChips_.splice(index, 1);\n      } else {\n        this.selectedChips_.push(chip);\n      }\n      chip.toggleSelected();\n    }\n  }\n}\n\nexport default MDCChipSetFoundation;\n","import {BasePlugin} from '../base'\nimport mdcChip from './mdc-chip.vue'\nimport mdcChipSet from './mdc-chip-set.vue'\n\nexport { \n  mdcChip, \n  mdcChipSet \n}\n\nexport default BasePlugin({\n  mdcChip, \n  mdcChipSet \n})\n","<template>\n  <div :class=\"classes\" v-on=\"$listeners\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport MDCChipSetFoundation from '@material/chips/chip-set/foundation';\n\nexport default {\n  name: 'mdc-chip-set',\n  props: {\n    choice: [Boolean],\n    filter: [Boolean],\n  },\n  provide() {\n    return { mdcChipSet: this };\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-chip-set': true,\n        'mdc-chip-set--choice': this.choice,\n        'mdc-chip-set--filter': this.filter,\n      },\n    };\n  },\n  methods: {},\n  mounted() {\n    this.foundation = new MDCChipSetFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler);\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler);\n      },\n    });\n\n    this.foundation.init();\n  },\n  beforeDestroy() {\n    this.foundation.destroy();\n  },\n};\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  ROOT: 'mdc-dialog',\n  OPEN: 'mdc-dialog--open',\n  ANIMATING: 'mdc-dialog--animating',\n  BACKDROP: 'mdc-dialog__backdrop',\n  SCROLL_LOCK: 'mdc-dialog-scroll-lock',\n  ACCEPT_BTN: 'mdc-dialog__footer__button--accept',\n  CANCEL_BTN: 'mdc-dialog__footer__button--cancel',\n};\n\nexport const strings = {\n  OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',\n  DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',\n  ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',\n  ACCEPT_EVENT: 'MDCDialog:accept',\n  CANCEL_EVENT: 'MDCDialog:cancel',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCDialogFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyAccept: () => {},\n      notifyCancel: () => {},\n      trapFocusOnSurface: () => {},\n      untrapFocusOnSurface: () => {},\n      isDialog: (/* el: Element */) => /* boolean */ false,\n      layoutFooterRipples: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDialogFoundation.defaultAdapter, adapter));\n    this.isOpen_ = false;\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.BACKDROP)) {\n        this.cancel(true);\n      }\n    };\n    this.dialogClickHandler_ = (evt) => this.handleDialogClick_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.cancel(true);\n      }\n    };\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n  };\n\n  destroy() {\n    // Ensure that dialog is cleaned up when destroyed\n    if (this.isOpen_) {\n      this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);\n      this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n      this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n      this.adapter_.untrapFocusOnSurface();\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);\n      this.enableScroll_();\n    }\n  }\n\n  open() {\n    this.isOpen_ = true;\n    this.disableScroll_();\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  close() {\n    this.isOpen_ = false;\n    this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.adapter_.untrapFocusOnSurface();\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  accept(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyAccept();\n    }\n\n    this.close();\n  }\n\n  cancel(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyCancel();\n    }\n\n    this.close();\n  }\n\n  handleDialogClick_(evt) {\n    const {target} = evt;\n    if (this.adapter_.eventTargetHasClass(target, cssClasses.ACCEPT_BTN)) {\n      this.accept(true);\n    } else if (this.adapter_.eventTargetHasClass(target, cssClasses.CANCEL_BTN)) {\n      this.cancel(true);\n    }\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.adapter_.isDialog(evt.target)) {\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n      if (this.isOpen_) {\n        this.adapter_.trapFocusOnSurface();\n        this.adapter_.layoutFooterRipples();\n      } else {\n        this.enableScroll_();\n      };\n    };\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","module.exports = function(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var basicTabbables = [];\n  var orderedTabbables = [];\n\n  // A node is \"available\" if\n  // - it's computed style\n  var isUnavailable = createIsUnavailable(elementDocument);\n\n  var candidateSelectors = [\n    'input',\n    'select',\n    'a[href]',\n    'textarea',\n    'button',\n    '[tabindex]',\n  ];\n\n  var candidates = el.querySelectorAll(candidateSelectors.join(','));\n\n  if (options.includeContainer) {\n    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n    if (\n      candidateSelectors.some(function(candidateSelector) {\n        return matches.call(el, candidateSelector);\n      })\n    ) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var candidate, candidateIndex;\n  for (var i = 0, l = candidates.length; i < l; i++) {\n    candidate = candidates[i];\n    candidateIndex = parseInt(candidate.getAttribute('tabindex'), 10) || candidate.tabIndex;\n\n    if (\n      candidateIndex < 0\n      || (candidate.tagName === 'INPUT' && candidate.type === 'hidden')\n      || candidate.disabled\n      || isUnavailable(candidate, elementDocument)\n    ) {\n      continue;\n    }\n\n    if (candidateIndex === 0) {\n      basicTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        index: i,\n        tabIndex: candidateIndex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(function(a, b) {\n      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;\n    })\n    .map(function(a) {\n      return a.node\n    });\n\n  Array.prototype.push.apply(tabbableNodes, basicTabbables);\n\n  return tabbableNodes;\n}\n\nfunction createIsUnavailable(elementDocument) {\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed\n  var isOffCache = [];\n\n  // \"off\" means `display: none;`, as opposed to \"hidden\",\n  // which means `visibility: hidden;`. getComputedStyle\n  // accurately reflects visiblity in context but not\n  // \"off\" state, so we need to recursively check parents.\n\n  function isOff(node, nodeComputedStyle) {\n    if (node === elementDocument.documentElement) return false;\n\n    // Find the cached node (Array.prototype.find not available in IE9)\n    for (var i = 0, length = isOffCache.length; i < length; i++) {\n      if (isOffCache[i][0] === node) return isOffCache[i][1];\n    }\n\n    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = isOff(node.parentNode);\n    }\n\n    isOffCache.push([node, result]);\n\n    return result;\n  }\n\n  return function isUnavailable(node) {\n    if (node === elementDocument.documentElement) return false;\n\n    var computedStyle = elementDocument.defaultView.getComputedStyle(node);\n\n    if (isOff(node, computedStyle)) return true;\n\n    return computedStyle.visibility === 'hidden';\n  }\n}\n","var tabbable = require('tabbable');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var tabbableNodes = [];\n  var firstTabbableNode = null;\n  var lastTabbableNode = null;\n  var nodeFocusedBeforeActivation = null;\n  var active = false;\n  var paused = false;\n  var tabEvent = null;\n\n  var container = (typeof element === 'string')\n    ? document.querySelector(element)\n    : element;\n\n  var config = userOptions || {};\n  config.returnFocusOnDeactivate = (userOptions && userOptions.returnFocusOnDeactivate !== undefined)\n    ? userOptions.returnFocusOnDeactivate\n    : true;\n  config.escapeDeactivates = (userOptions && userOptions.escapeDeactivates !== undefined)\n    ? userOptions.escapeDeactivates\n    : true;\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause,\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (active) return;\n\n    var defaultedActivateOptions = {\n      onActivate: (activateOptions && activateOptions.onActivate !== undefined)\n        ? activateOptions.onActivate\n        : config.onActivate,\n    };\n\n    active = true;\n    paused = false;\n    nodeFocusedBeforeActivation = document.activeElement;\n\n    if (defaultedActivateOptions.onActivate) {\n      defaultedActivateOptions.onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!active) return;\n\n    var defaultedDeactivateOptions = {\n      returnFocus: (deactivateOptions && deactivateOptions.returnFocus !== undefined)\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate,\n      onDeactivate: (deactivateOptions && deactivateOptions.onDeactivate !== undefined)\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate,\n    };\n\n    removeListeners();\n\n    if (defaultedDeactivateOptions.onDeactivate) {\n      defaultedDeactivateOptions.onDeactivate();\n    }\n\n    if (defaultedDeactivateOptions.returnFocus) {\n      setTimeout(function () {\n        tryFocus(nodeFocusedBeforeActivation);\n      }, 0);\n    }\n\n    active = false;\n    paused = false;\n    return this;\n  }\n\n  function pause() {\n    if (paused || !active) return;\n    paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!paused || !active) return;\n    paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n    tryFocus(firstFocusNode());\n    document.addEventListener('focus', checkFocus, true);\n    document.addEventListener('click', checkClick, true);\n    document.addEventListener('mousedown', checkPointerDown, true);\n    document.addEventListener('touchstart', checkPointerDown, true);\n    document.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!active || listeningFocusTrap !== trap) return;\n\n    document.removeEventListener('focus', checkFocus, true);\n    document.removeEventListener('click', checkClick, true);\n    document.removeEventListener('mousedown', checkPointerDown, true);\n    document.removeEventListener('touchstart', checkPointerDown, true);\n    document.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = document.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function firstFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(document.activeElement)) {\n      node = document.activeElement;\n    } else {\n      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('You can\\'t have a focus-trap without at least one focusable element');\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event\n  function checkPointerDown(e) {\n    if (config.clickOutsideDeactivates && !container.contains(e.target)) {\n      deactivate({ returnFocus: false });\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function checkFocus(e) {\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    // Checking for a blur method here resolves a Firefox issue (#15)\n    if (typeof e.target.blur === 'function') e.target.blur();\n\n    if (tabEvent) {\n      readjustFocus(tabEvent);\n    }\n  }\n\n  function checkKey(e) {\n    if (e.key === 'Tab' || e.keyCode === 9) {\n      handleTab(e);\n    }\n\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      deactivate();\n    }\n  }\n\n  function handleTab(e) {\n    updateTabbableNodes();\n\n    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {\n      return tabEvent = e;\n    }\n\n    e.preventDefault();\n    var currentFocusIndex = tabbableNodes.indexOf(e.target);\n\n    if (e.shiftKey) {\n      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {\n        return tryFocus(lastTabbableNode);\n      }\n      return tryFocus(tabbableNodes[currentFocusIndex - 1]);\n    }\n\n    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);\n\n    tryFocus(tabbableNodes[currentFocusIndex + 1]);\n  }\n\n  function updateTabbableNodes() {\n    tabbableNodes = tabbable(container);\n    firstTabbableNode = tabbableNodes[0];\n    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];\n  }\n\n  function readjustFocus(e) {\n    if (e.shiftKey) return tryFocus(lastTabbableNode);\n\n    tryFocus(firstTabbableNode);\n  }\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction tryFocus(node) {\n  if (!node || !node.focus) return;\n  if (node === document.activeElement)  return;\n\n  node.focus();\n  if (node.tagName.toLowerCase() === 'input') {\n    node.select();\n  }\n}\n\nmodule.exports = focusTrap;\n","import {BasePlugin} from '../base'\nimport mdcDialog from './mdc-dialog.vue'\n\nexport {\n  mdcDialog\n}\n\nexport default BasePlugin({\n  mdcDialog\n})\n","<template>\n  <aside class=\"mdc-dialog\" ref=\"root\" :class=\"classes\" :style=\"styles\"\n    role=\"alertdialog\"\n    :aria-labelledby=\"'label' + vma_uid_\"\n    :aria-describedby=\"'desc' + vma_uid_\"\n  >\n    <div  ref=\"surface\" class=\"mdc-dialog__surface\" :class=\"surfaceClasses\">\n      <header class=\"mdc-dialog__header\">\n        <h2 :id=\"'label' + vma_uid_\" class=\"mdc-dialog__header__title\">\n          {{ title }}\n        </h2>\n      </header>\n      <section :id=\"'desc' + vma_uid_\"\n        class=\"mdc-dialog__body\" :class=\"bodyClasses\">\n        <slot />\n      </section>\n      <footer class=\"mdc-dialog__footer\">\n        <mdcButton ref=\"cancel\" v-if=\"cancel\"\n          class=\"mdc-dialog__footer__button mdc-dialog__footer__button--cancel\"\n          :class=\"{'mdc-dialog__action':accent}\"\n          @click=\"onCancel\"\n          >{{ cancel }}</mdcButton>\n        <mdcButton  ref=\"accept\"\n          class=\"mdc-dialog__footer__button mdc-dialog__footer__button--accept\"\n          :class=\"{'mdc-dialog__action':accent}\"\n          :disabled=\"acceptDisabled\"\n          @click=\"onAccept\"\n        >{{ accept }}</mdcButton>\n      </footer>\n    </div>\n    <div class=\"mdc-dialog__backdrop\"></div>\n  </aside>\n</template>\n\n<script>\nimport MDCDialogFoundation from '@material/dialog/foundation';\nimport { createFocusTrapInstance } from '@material/dialog/util';\nimport { mdcButton } from '../button';\n\nexport default {\n  name: 'mdc-dialog',\n  props: {\n    title: { type: String, required: true },\n    accept: { type: String, default: 'Ok' },\n    acceptDisabled: Boolean,\n    cancel: { type: String, default: 'Cancel' },\n    accent: Boolean,\n    scrollable: Boolean,\n  },\n  components: {\n    mdcButton: mdcButton,\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-theme--dark': this.dark,\n      },\n      styles: {},\n      surfaceClasses: {},\n      bodyClasses: {\n        'mdc-dialog__body--scrollable': this.scrollable,\n      },\n    };\n  },\n  mounted() {\n    this.focusTrap = createFocusTrapInstance(\n      this.$refs.surface,\n      this.$refs.accept,\n    );\n\n    this.foundation = new MDCDialogFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      addBodyClass: className => document.body.classList.add(className),\n      removeBodyClass: className => document.body.classList.remove(className),\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$refs.root.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$refs.root.removeEventListener(evt, handler),\n      registerSurfaceInteractionHandler: (/*evt, handler*/) => {\n        // VMA_HACK: handle button clicks ourselves\n        // this.$refs.surface.addEventListener(evt, handler)\n      },\n      deregisterSurfaceInteractionHandler: (/*evt, handler*/) => {\n        // VMA_HACK: handle button clicks ourselves\n        // this.$refs.surface.removeEventListener(evt, handler)\n      },\n      registerDocumentKeydownHandler: handler =>\n        document.addEventListener('keydown', handler),\n      deregisterDocumentKeydownHandler: handler =>\n        document.removeEventListener('keydown', handler),\n      registerTransitionEndHandler: handler =>\n        this.$refs.surface.addEventListener('transitionend', handler),\n      deregisterTransitionEndHandler: handler =>\n        this.$refs.surface.removeEventListener('transitionend', handler),\n      notifyAccept: () => this.$emit('accept'),\n      notifyCancel: () => this.$emit('cancel'),\n      trapFocusOnSurface: () => this.focusTrap.activate(),\n      untrapFocusOnSurface: () => this.focusTrap.deactivate(),\n      isDialog: el => this.$refs.surface === el,\n      layoutFooterRipples: () => {\n        this.$refs.accept.ripple.layout();\n        this.cancel && this.$refs.cancel.ripple.layout();\n      },\n    });\n\n    this.foundation.init();\n  },\n  beforeDestroy() {\n    this.foundation.destroy();\n  },\n  methods: {\n    onCancel() {\n      this.foundation.cancel(true);\n    },\n    onAccept() {\n      if (this.$listeners['validate']) {\n        this.$emit('validate', {\n          accept: (notify = true) => this.foundation.accept(notify),\n        });\n      } else {\n        this.foundation.accept(true);\n      }\n    },\n    show() {\n      this.foundation.open();\n    },\n    close() {\n      this.foundation.close();\n    },\n  },\n};\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createFocusTrap from 'focus-trap';\n\nexport function createFocusTrapInstance(surfaceEl, acceptButtonEl, focusTrapFactory = createFocusTrap) {\n  return focusTrapFactory(surfaceEl, {\n    initialFocus: acceptButtonEl,\n    clickOutsideDeactivates: true,\n  });\n}\n","<template>\n  <nav class=\"mdc-permanent-drawer mdc-drawer--permanent mdc-typography\">\n    <nav class=\"mdc-drawer__content\">\n      <div class=\"mdc-drawer__toolbar-spacer\" \n        v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-permanent-drawer',\n  props: {\n    'toolbar-spacer': Boolean,\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FOCUSABLE_ELEMENTS =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' +\n  'button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n\nexport class MDCSlidableDrawerFoundation extends MDCFoundation {\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      hasNecessaryDom: () => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      setTranslateX: (/* value: number | null */) => {},\n      getFocusableElements: () => /* NodeList */ {},\n      saveElementTabState: (/* el: Element */) => {},\n      restoreElementTabState: (/* el: Element */) => {},\n      makeElementUntabbable: (/* el: Element */) => {},\n      notifyOpen: () => {},\n      notifyClose: () => {},\n      isRtl: () => /* boolean */ false,\n      getDrawerWidth: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter, rootCssClass, animatingCssClass, openCssClass) {\n    super(Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, adapter));\n\n    this.rootCssClass_ = rootCssClass;\n    this.animatingCssClass_ = animatingCssClass;\n    this.openCssClass_ = openCssClass;\n\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n\n    this.inert_ = false;\n\n    this.componentTouchStartHandler_ = (evt) => this.handleTouchStart_(evt);\n    this.componentTouchMoveHandler_ = (evt) => this.handleTouchMove_(evt);\n    this.componentTouchEndHandler_ = (evt) => this.handleTouchEnd_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.close();\n      }\n    };\n  }\n\n  init() {\n    const ROOT = this.rootCssClass_;\n    const OPEN = this.openCssClass_;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    } else {\n      this.detabinate_();\n      this.isOpen_ = false;\n    }\n\n    this.adapter_.registerDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.registerInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.registerInteractionHandler('touchend', this.componentTouchEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.deregisterInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.deregisterInteractionHandler('touchend', this.componentTouchEndHandler_);\n    // Deregister the document keydown handler just in case the component is destroyed while the menu is open.\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n  }\n\n  open() {\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.addClass(this.openCssClass_);\n    this.retabinate_();\n    // Debounce multiple calls\n    if (!this.isOpen_) {\n      this.adapter_.notifyOpen();\n    }\n    this.isOpen_ = true;\n  }\n\n  close() {\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.removeClass(this.openCssClass_);\n    this.detabinate_();\n    // Debounce multiple calls\n    if (this.isOpen_) {\n      this.adapter_.notifyClose();\n    }\n    this.isOpen_ = false;\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   *  Render all children of the drawer inert when it's closed.\n   */\n  detabinate_() {\n    if (this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.saveElementTabState(elements[i]);\n        this.adapter_.makeElementUntabbable(elements[i]);\n      }\n    }\n\n    this.inert_ = true;\n  }\n\n  /**\n   *  Make all children of the drawer tabbable again when it's open.\n   */\n  retabinate_() {\n    if (!this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.restoreElementTabState(elements[i]);\n      }\n    }\n\n    this.inert_ = false;\n  }\n\n  handleTouchStart_(evt) {\n    if (!this.adapter_.hasClass(this.openCssClass_)) {\n      return;\n    }\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.direction_ = this.adapter_.isRtl() ? -1 : 1;\n    this.drawerWidth_ = this.adapter_.getDrawerWidth();\n    this.startX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n    this.currentX_ = this.startX_;\n\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n  }\n\n  handleTouchMove_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.currentX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n  }\n\n  handleTouchEnd_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.prepareForTouchEnd_();\n\n    // Did the user close the drawer by more than 50%?\n    if (Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5) {\n      this.close();\n    } else {\n      // Triggering an open here means we'll get a nice animation back to the fully open state.\n      this.open();\n    }\n  }\n\n  prepareForTouchEnd_() {\n    cancelAnimationFrame(this.updateRaf_);\n    this.adapter_.setTranslateX(null);\n  }\n\n  updateDrawer_() {\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n    this.adapter_.setTranslateX(this.newPosition_);\n  }\n\n  get newPosition_() {\n    let newPos = null;\n\n    if (this.direction_ === 1) {\n      newPos = Math.min(0, this.currentX_ - this.startX_);\n    } else {\n      newPos = Math.max(0, this.currentX_ - this.startX_);\n    }\n\n    return newPos;\n  }\n\n  isRootTransitioningEventTarget_() {\n    // Classes extending MDCSlidableDrawerFoundation should implement this method to return true or false\n    // if the event target is the root event target currently transitioning.\n    return false;\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.isRootTransitioningEventTarget_(evt.target)) {\n      this.adapter_.removeClass(this.animatingCssClass_);\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n    }\n  };\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--persistent',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--persistent .mdc-drawer__drawer',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCPersistentDrawer:open',\n  CLOSE_EVENT: 'MDCPersistentDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCPersistentDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      isDrawer: () => false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCPersistentDrawerFoundation.defaultAdapter, adapter),\n      MDCPersistentDrawerFoundation.cssClasses.ROOT,\n      MDCPersistentDrawerFoundation.cssClasses.ANIMATING,\n      MDCPersistentDrawerFoundation.cssClasses.OPEN);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAB_DATA = 'data-mdc-tabindex';\nconst TAB_DATA_HANDLED = 'data-mdc-tabindex-handled';\n\nlet storedTransformPropertyName_;\nlet supportsPassive_;\n\n// Remap touch events to pointer events, if the browser doesn't support touch events.\nexport function remapEvent(eventName, globalObj = window) {\n  if (!('ontouchstart' in globalObj.document)) {\n    switch (eventName) {\n    case 'touchstart':\n      return 'pointerdown';\n    case 'touchmove':\n      return 'pointermove';\n    case 'touchend':\n      return 'pointerup';\n    default:\n      return eventName;\n    }\n  }\n\n  return eventName;\n}\n\n// Choose the correct transform property to use on the current browser.\nexport function getTransformPropertyName(globalObj = window, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : '-webkit-transform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n// Determine whether the current browser supports CSS properties.\nexport function supportsCssCustomProperties(globalObj = window) {\n  if ('CSS' in globalObj) {\n    return globalObj.CSS.supports('(--color: red)');\n  }\n  return false;\n}\n\n// Determine whether the current browser supports passive event listeners, and if so, use them.\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n// Save the tab state for an element.\nexport function saveElementTabState(el) {\n  if (el.hasAttribute('tabindex')) {\n    el.setAttribute(TAB_DATA, el.getAttribute('tabindex'));\n  }\n  el.setAttribute(TAB_DATA_HANDLED, true);\n}\n\n// Restore the tab state for an element, if it was saved.\nexport function restoreElementTabState(el) {\n  // Only modify elements we've already handled, in case anything was dynamically added since we saved state.\n  if (el.hasAttribute(TAB_DATA_HANDLED)) {\n    if (el.hasAttribute(TAB_DATA)) {\n      el.setAttribute('tabindex', el.getAttribute(TAB_DATA));\n      el.removeAttribute(TAB_DATA);\n    } else {\n      el.removeAttribute('tabindex');\n    }\n    el.removeAttribute(TAB_DATA_HANDLED);\n  }\n}\n","<template>\n  <aside class=\"mdc-persistent-drawer mdc-drawer--persistent mdc-typography\" :class=\"classes\">\n    <nav ref=\"drawer\" class=\"mdc-drawer__drawer\">\n      <div class=\"mdc-drawer__toolbar-spacer\" \n        v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCPersistentDrawerFoundation from '@material/drawer/persistent/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-persistent-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    'toolbar-spacer': Boolean,\n    'open':Boolean\n  },\n  data () {\n    return {\n      classes: {},\n    }\n  },\n  watch: {\n    open() {\n      this._refresh()\n    }\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()          \n      }\n      else {\n        this.foundation && this.foundation.close()          \n      }\n    }\n  },\n  mounted () {\n    const {FOCUSABLE_ELEMENTS} = MDCPersistentDrawerFoundation.strings\n\n    this.foundation = new MDCPersistentDrawerFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: (className) => {\n        return this.$el.classList.contains(className)\n      },\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(util.remapEvent(evt), handler)\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(util.remapEvent(evt), handler)\n      },\n      registerTransitionEndHandler: (handler) => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: (handler) => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: (handler) => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: (handler) => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: (value) => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: (el) => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: (el) => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: (el) => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change',true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change',false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n      },\n      isDrawer: (el) => {\n        return el === this.$refs.drawer\n      }\n    })\n    this.foundation && this.foundation.init()  \n    this._refresh()\n  },\n  beforeDestroy () {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--temporary',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n  SCROLL_LOCK: 'mdc-drawer-scroll-lock',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--temporary .mdc-drawer__drawer',\n  OPACITY_VAR_NAME: '--mdc-temporary-drawer-opacity',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCTemporaryDrawer:open',\n  CLOSE_EVENT: 'MDCTemporaryDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTemporaryDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      isDrawer: () => false,\n      updateCssVariable: (/* value: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCTemporaryDrawerFoundation.defaultAdapter, adapter),\n      MDCTemporaryDrawerFoundation.cssClasses.ROOT,\n      MDCTemporaryDrawerFoundation.cssClasses.ANIMATING,\n      MDCTemporaryDrawerFoundation.cssClasses.OPEN);\n\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.ROOT)) {\n        this.close(true);\n      }\n    };\n  }\n\n  init() {\n    super.init();\n\n    // Make browser aware of custom property being used in this element.\n    // Workaround for certain types of hard-to-reproduce heisenbugs.\n    this.adapter_.updateCssVariable(0);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.enableScroll_();\n  }\n\n  open() {\n    this.disableScroll_();\n    // Make sure custom property values are cleared before starting.\n    this.adapter_.updateCssVariable('');\n\n    super.open();\n  }\n\n  close() {\n    // Make sure custom property values are cleared before making any changes.\n    this.adapter_.updateCssVariable('');\n\n    super.close();\n  }\n\n  prepareForTouchEnd_() {\n    super.prepareForTouchEnd_();\n\n    this.adapter_.updateCssVariable('');\n  }\n\n  updateDrawer_() {\n    super.updateDrawer_();\n\n    const newOpacity = Math.max(0, 1 + this.direction_ * (this.newPosition_ / this.drawerWidth_));\n    this.adapter_.updateCssVariable(newOpacity);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n\n  handleTransitionEnd_(evt) {\n    super.handleTransitionEnd_(evt);\n    if (!this.isOpen_) {\n      this.enableScroll_();\n    }\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","<template>\n  <aside class=\"mdc-temporary-drawer mdc-drawer--temporary mdc-typography\" :class=\"classes\">\n    <nav ref=\"drawer\" class=\"mdc-drawer__drawer\">\n      <div class=\"mdc-drawer__toolbar-spacer\" v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCTemporaryDrawerFoundation from '@material/drawer/temporary/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-temporary-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    'open': Boolean,\n    'toolbar-spacer': Boolean,\n  },\n  data () {\n    return {\n      classes: {},\n    }\n  },\n  watch: {\n    open() {\n      this._refresh()\n    }\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()          \n      }\n      else {\n        this.foundation && this.foundation.close()          \n      }\n    }\n  },\n  mounted () {\n    const {FOCUSABLE_ELEMENTS, OPACITY_VAR_NAME} = \n      MDCTemporaryDrawerFoundation.strings\n    \n    this.foundation = new MDCTemporaryDrawerFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: (className) => {\n        return this.$el.classList.contains(className)\n      },\n      addBodyClass: (className) => document.body.classList.add(className),\n      removeBodyClass: (className) => document.body.classList.remove(className),\n      eventTargetHasClass: (target, className) => target.classList.contains(className),\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(util.remapEvent(evt), handler)\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(util.remapEvent(evt), handler)\n      },\n      registerTransitionEndHandler: (handler) => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: (handler) => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: (handler) => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: (handler) => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: (value) => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      updateCssVariable: (value) => {\n        if (util.supportsCssCustomProperties()) {\n          this.$el.style.setProperty(OPACITY_VAR_NAME, value)\n        }\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: (el) => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: (el) => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: (el) => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change',true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change',false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n      },\n      isDrawer: (el) => el === this.$refs.drawer,\n    })\n    this.foundation && this.foundation.init()  \n    this._refresh()\n  },\n  beforeDestroy () {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  }\n}\n</script>\n","<template>\r\n  <component  ref=\"drawer\" class=\"mdc-drawer\"\r\n      :is=\"type\" v-model=\"open_\"\r\n      :toolbar-spacer=\"toolbarSpacer\"\r\n      @change=\"busemit('mdc:layout')\"\r\n      @open=\"$emit('open')\"\r\n      @close=\"$emit('close')\" >\r\n    <slot />\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport mdcPermanentDrawer from './mdc-permanent-drawer.vue';\r\nimport mdcPersistentDrawer from './mdc-persistent-drawer.vue';\r\nimport mdcTemporaryDrawer from './mdc-temporary-drawer.vue';\r\nimport { eventBus } from '../common';\r\n\r\nconst media = new class {\r\n  get small() {\r\n    return (\r\n      this._small || (this._small = window.matchMedia('(max-width: 839px)'))\r\n    );\r\n  }\r\n\r\n  get large() {\r\n    return (\r\n      this._large || (this._large = window.matchMedia('(min-width: 1200px)'))\r\n    );\r\n  }\r\n}();\r\n\r\nexport default {\r\n  name: 'mdc-drawer',\r\n  props: {\r\n    permanent: Boolean,\r\n    persistent: Boolean,\r\n    temporary: Boolean,\r\n    drawerType: {\r\n      type: String,\r\n      validator: val => {\r\n        return val in ['temporary', 'persistent', 'permanent'];\r\n      },\r\n    },\r\n    toolbarSpacer: Boolean,\r\n    toggleOn: String,\r\n    toggleOnSource: { type: Object, required: false },\r\n    openOn: String,\r\n    openOnSource: { type: Object, required: false },\r\n    closeOn: String,\r\n    closeOnSource: { type: Object, required: false },\r\n  },\r\n  provide() {\r\n    return { mdcDrawer: this };\r\n  },\r\n  data() {\r\n    return {\r\n      small: false,\r\n      large: false,\r\n      open_: false,\r\n    };\r\n  },\r\n  components: {\r\n    'mdc-permanent-drawer': mdcPermanentDrawer,\r\n    'mdc-persistent-drawer': mdcPersistentDrawer,\r\n    'mdc-temporary-drawer': mdcTemporaryDrawer,\r\n  },\r\n  computed: {\r\n    type() {\r\n      if (this.permanent) {\r\n        return 'mdc-permanent-drawer';\r\n      } else if (this.persistent) {\r\n        return 'mdc-persistent-drawer';\r\n      } else if (this.temporary) {\r\n        return 'mdc-temporary-drawer';\r\n      } else {\r\n        switch (this.drawerType) {\r\n          case 'permanent':\r\n            return 'mdc-permanent-drawer';\r\n          case 'persistent':\r\n            return 'mdc-persistent-drawer';\r\n          case 'temporary':\r\n            return 'mdc-temporary-drawer';\r\n          default:\r\n            return this.small\r\n              ? 'mdc-temporary-drawer'\r\n              : 'mdc-persistent-drawer';\r\n        }\r\n      }\r\n    },\r\n    isPermanent() {\r\n      return this.permanent || this.type === 'mdc-permanent-drawer';\r\n    },\r\n    isPersistent() {\r\n      return this.persistent || this.type === 'mdc-persistent-drawer';\r\n    },\r\n    isTemporary() {\r\n      return this.temporary || this.type === 'mdc-temporary-drawer';\r\n    },\r\n    isResponsive() {\r\n      return !(\r\n        this.permanent ||\r\n        this.persistent ||\r\n        this.temporary ||\r\n        this.drawerType\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    busemit(event) {\r\n      eventBus.$emit(event);\r\n    },\r\n    open() {\r\n      this.open_ = true;\r\n    },\r\n    close() {\r\n      this.isPermanent || (this.open_ = false);\r\n    },\r\n    toggle() {\r\n      this.isPermanent || (this.isOpen() ? this.close() : this.open());\r\n    },\r\n    isOpen() {\r\n      return this.isPermanent || this.open_;\r\n    },\r\n    refreshMedia() {\r\n      this.small = media.small.matches;\r\n      this.large = media.large.matches;\r\n      if (this.isResponsive) {\r\n        if (this.large) {\r\n          this.open();\r\n        } else {\r\n          this.close();\r\n        }\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    if (window && window.matchMedia) {\r\n      this.small = media.small.matches;\r\n      this.large = media.large.matches;\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.toggleOn) {\r\n      this.toggleOnEventSource = this.toggleOnSource || this.$root;\r\n      this.toggleOnEventSource.$on(this.toggleOn, this.toggle);\r\n    }\r\n    if (this.openOn) {\r\n      this.openOnEventSource = this.openOnSource || this.$root;\r\n      this.openOnEventSource.$on(this.openOn, this.open);\r\n    }\r\n    if (this.closeOn) {\r\n      this.closeOnEventSource = this.closeOnSource || this.$root;\r\n      this.closeOnEventSource.$on(this.closeOn, this.close);\r\n    }\r\n    media.small.addListener(this.refreshMedia);\r\n    media.large.addListener(this.refreshMedia);\r\n    this.$nextTick(() => this.refreshMedia());\r\n  },\r\n  beforeDestroy() {\r\n    media.small.removeListener(this.refreshMedia);\r\n    media.large.removeListener(this.refreshMedia);\r\n\r\n    if (this.toggleOnEventSource) {\r\n      this.toggleOnEventSource.$off(this.toggleOn, this.toggle);\r\n    }\r\n    if (this.openOnEventSource) {\r\n      this.openOnEventSource.$off(this.openOn, this.open);\r\n    }\r\n    if (this.closeOnEventSource) {\r\n      this.closeOnEventSource.$off(this.closeOn, this.close);\r\n    }\r\n  },\r\n};\r\n</script>\r\n","import {BasePlugin} from '../base'\nimport mdcDrawer from './mdc-drawer.vue'\nimport mdcDrawerLayout from './mdc-drawer-layout.vue'\nimport mdcDrawerHeader from './mdc-drawer-header.vue'\nimport mdcDrawerList from './mdc-drawer-list.vue'\nimport mdcDrawerItem from './mdc-drawer-item.vue'\nimport mdcDrawerDivider from './mdc-drawer-divider.vue'\n\nexport {\n  mdcDrawer,\n  mdcDrawerLayout,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n}\n\nexport default BasePlugin({\n  mdcDrawer,\n  mdcDrawerLayout,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n})","<template>\n  <div class=\"mdc-drawer-layout\">\n      <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-layout',\n}\n</script>\n","<template>\n  <header class=\"mdc-drawer-header mdc-drawer__header\" v-if=\"show\">\n    <div class=\"mdc-drawer__header-content\">\n      <slot />\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-header',\n  props: {\n    'permanent': Boolean,\n    'persistent': Boolean,\n    'temporary': Boolean\n  },\n  inject: ['mdcDrawer'],\n  computed: {\n    show () {\n      if (this.temporary || this.persistent || this.permanent) {\n        return (this.temporary && this.mdcDrawer.isTemporary) ||\n          (this.persistent && this.mdcDrawer.isPersistent) ||\n            (this.permanent && this.mdcDrawer.isPermanent)\n      } else {\n        return true\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <nav class=\"mdc-drawer-list mdc-list\" :class=\"classes\">\n    <slot></slot>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-list',\n  props: {\n    'dense': Boolean,\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-list--dense': this.dense\n      }\n    }\n  }\n  \n}\n</script>","<template>\r\n  <custom-link :link=\"link\"\r\n    class=\"mdc-drawer-item mdc-list-item\"\r\n    :class=\"[classes, itemClasses]\" :style=\"styles\"\r\n    v-on=\"mylisteners\">\r\n    <span class=\"mdc-list-item__graphic\" v-if=\"hasStartDetail\">\r\n      <slot name=\"start-detail\">\r\n        <i class=\"material-icons\" aria-hidden=\"true\">{{startIcon}}</i>\r\n      </slot>\r\n    </span>\r\n    <slot></slot>\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin, CustomLinkMixin } from '../base';\r\nimport { RippleBase } from '../ripple';\r\n\r\nexport default {\r\n  name: 'mdc-drawer-item',\r\n  inject: ['mdcDrawer'],\r\n  mixins: [DispatchEventMixin, CustomLinkMixin],\r\n  props: {\r\n    startIcon: String,\r\n    temporaryClose: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    activated: Boolean,\r\n    exactActiveClass: {\r\n      type: String,\r\n      default: 'mdc-list-item--activated',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {},\r\n    };\r\n  },\r\n  computed: {\r\n    mylisteners() {\r\n      return {\r\n        ...this.$listeners,\r\n        click: e => {\r\n          this.mdcDrawer.isTemporary &&\r\n            this.temporaryClose &&\r\n            this.mdcDrawer.close();\r\n          this.dispatchEvent(e);\r\n        },\r\n      };\r\n    },\r\n    itemClasses() {\r\n      return {\r\n        'mdc-list-item--activated': this.activated,\r\n      };\r\n    },\r\n    hasStartDetail() {\r\n      return this.startIcon || this.$slots['start-detail'];\r\n    },\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this);\r\n    this.ripple.init();\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple && this.ripple.destroy();\r\n    this.ripple = null;\r\n  },\r\n};\r\n</script>\r\n","<template>\n  <hr class=\"mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-divider',\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcElevation from './mdc-elevation.vue'\n\nexport {\n  mdcElevation\n}\n\nexport default BasePlugin({\n  mdcElevation\n})\n","<template>\n  <div class=\"mdc-elevation\"></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-elevation',\n  props: {\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcFAB from './mdc-fab.vue'\n\nexport {\n  mdcFAB\n}\n\nexport default BasePlugin({\n  mdcFAB\n})\n","<template>\n  <custom-button class=\"mdc-fab\" \n    :class=\"classes\" :style=\"styles\"\n    :href=\"href\" :link=\"link\" \n    v-on=\"listeners\" >\n    <span class=\"mdc-fab__icon\">\n      <slot>{{ icon }}</slot>\n    </span>\n  </custom-button>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomButtonMixin } from '../base';\nimport { RippleMixin } from '../ripple';\n\nexport default {\n  name: 'mdc-fab',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  props: {\n    icon: String,\n    mini: Boolean,\n    absolute: Boolean,\n    fixed: Boolean,\n  },\n  data() {\n    return {\n      classes: {\n        'material-icons': this.icon,\n        'mdc-fab--mini': this.mini,\n        'mdc-fab--absolute': this.absolute,\n        'mdc-fab--fixed': this.fixed,\n      },\n      styles: {},\n    };\n  },\n  watch: {\n    icon() {\n      this.$set(this.classes, 'material-icons', this.icon);\n    },\n    mini() {\n      this.$set(this.classes, 'mdc-fab--mini', this.mini);\n    },\n  },\n};\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const strings = {\n  TILES_SELECTOR: '.mdc-grid-list__tiles',\n  TILE_SELECTOR: '.mdc-grid-tile',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {strings} from './constants';\n\nexport default class MDCGridListFoundation extends MDCFoundation {\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      getOffsetWidth: () => /* number */ 0,\n      getNumberOfTiles: () => /* number */ 0,\n      getOffsetWidthForTileAtIndex: (/* index: number */) => /* number */ 0,\n      setStyleForTilesElement: (/* property: string, value: string */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n    };\n  }\n  constructor(adapter) {\n    super(Object.assign(MDCGridListFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.alignCenter();\n    this.resizeFrame_ = 0;\n  }\n  init() {\n    this.alignCenter();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n  alignCenter() {\n    if (this.resizeFrame_ !== 0) {\n      cancelAnimationFrame(this.resizeFrame_);\n    }\n    this.resizeFrame_ = requestAnimationFrame(() => {\n      this.alignCenter_();\n      this.resizeFrame_ = 0;\n    });\n  }\n  alignCenter_() {\n    if (this.adapter_.getNumberOfTiles() == 0) {\n      return;\n    }\n    const gridWidth = this.adapter_.getOffsetWidth();\n    const itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);\n    const tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);\n    this.adapter_.setStyleForTilesElement('width', `${tilesWidth}px`);\n  }\n}\n","import {BasePlugin} from '../base'\nimport mdcGridList from './mdc-grid-list.vue'\nimport mdcGridTile from './mdc-grid-tile.vue'\n\nexport {\n  mdcGridList,\n  mdcGridTile\n}\n\nexport default BasePlugin({\n  mdcGridList,\n  mdcGridTile\n})\n","<template>\n  <div class=\"mdc-grid-list\">\n    <ul class=\"mdc-grid-list__tiles\" :class=\"classes\" :style=\"styles\">\n        <slot></slot>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport MDCGridListFoundation from '@material/grid-list/foundation';\n\nexport default {\n  name: 'mdc-grid-list',\n  props: {\n    width: [String, Number],\n    ratio: String,\n    'narrow-gutter': Boolean,\n    'header-caption': Boolean,\n    'icon-align-start': Boolean,\n    'icon-align-end': Boolean,\n    'with-support-text': Boolean,\n    interactive: Boolean,\n  },\n  provide() {\n    return { mdcGrid: this };\n  },\n  computed: {\n    classes() {\n      let classes = {};\n\n      classes['mdc-grid-list--tile-gutter-1'] = this.narrowGutter;\n      classes['mdc-grid-list--header-caption'] = this.headerCaption;\n      classes[`mdc-grid-list--tile-aspect-${this.ratio}`] = this.ratio;\n      classes['mdc-grid-list--with-icon-align-start'] = this.iconAlignStart;\n      classes['mdc-grid-list--with-icon-align-end'] = this.iconAlignEnd;\n      classes['mdc-grid-list--twoline-caption'] = this.withSupportText;\n      classes['mdc-grid-list--non-interactive'] = !this.interactive;\n\n      return classes;\n    },\n    styles() {\n      var defaultWidth = 200;\n      return {\n        '--mdc-grid-list-tile-width': `${this.width || defaultWidth}px`,\n      };\n    },\n  },\n  mounted() {\n    this.foundation = new MDCGridListFoundation({\n      getOffsetWidth: () => {\n        return this.$el.offsetWidth;\n      },\n      getNumberOfTiles: () => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR,\n        ).length;\n      },\n      getOffsetWidthForTileAtIndex: index => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR,\n        )[index].offsetWidth;\n      },\n      setStyleForTilesElement: (property, value) => {\n        this.$el.querySelector(\n          MDCGridListFoundation.strings.TILES_SELECTOR,\n        ).style[property] = value;\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler);\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler);\n      },\n    });\n    this.foundation.init();\n  },\n  beforeDestroy() {\n    this.foundation.destroy();\n  },\n};\n</script>\n","<template>\n  <li class=\"mdc-grid-tile\"\n    :class=\"[classes, itemClasses]\" :style=\"styles\"\n    :tabindex=\"isInteractive ? '0' : undefined\"\n    v-on=\"isInteractive ? listeners : clickListener\">\n    <div class=\"mdc-grid-tile__primary\" v-if=\"cover\">\n      <div class=\"mdc-grid-tile__primary-content\"\n        :style=\"{ backgroundImage: 'url(' + src + ')' }\">\n      </div>\n    </div>\n    <div class=\"mdc-grid-tile__primary\" v-else>\n        <img class=\"mdc-grid-tile__primary-content\" :src=\"src\" />\n    </div>\n    <span class=\"mdc-grid-tile__secondary\" v-if=\"title || supportText\">\n      <i class=\"mdc-grid-tile__icon material-icons\" v-if=\"icon\">{{ icon }}</i>\n      <span class=\"mdc-grid-tile__title\" v-if=\"title\">{{ title }}</span>\n      <span class=\"mdc-grid-tile__support-text\" v-if=\"supportText\">{{ supportText }}</span>\n    </span>\n  </li>\n</template>\n\n\n<script>\nimport { DispatchEventMixin } from '../base';\nimport { RippleBase } from '../ripple';\n\nexport default {\n  name: 'mdc-grid-tile',\n  inject: ['mdcGrid'],\n  mixins: [DispatchEventMixin],\n  props: {\n    src: String,\n    cover: Boolean,\n    icon: String,\n    title: String,\n    'support-text': String,\n    selected: Boolean,\n    activated: Boolean,\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {},\n    };\n  },\n  computed: {\n    clickListener() {\n      return { click: e => this.dispatchEvent(e) };\n    },\n    itemClasses() {\n      return {\n        'mdc-grid-tile--selected': this.selected,\n        'mdc-grid-tile--activated': this.activated,\n      };\n    },\n    isInteractive() {\n      return this.mdcGrid && this.mdcGrid.interactive;\n    },\n    hasStartDetail() {\n      return this.startIcon || this.$slots['start-detail'];\n    },\n    hasEndDetail() {\n      return this.endIcon || this.$slots['end-detail'];\n    },\n  },\n  watch: {\n    isInteractive(value) {\n      if (value) {\n        this.addRipple();\n      } else {\n        this.removeRipple();\n      }\n    },\n  },\n  methods: {\n    addRipple() {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this);\n        ripple.init();\n        this.ripple = ripple;\n      }\n    },\n    removeRipple() {\n      if (this.ripple) {\n        let ripple = this.ripple;\n        this.ripple = null;\n        ripple.destroy();\n      }\n    },\n  },\n  mounted() {\n    this.isInteractive && this.addRipple();\n  },\n  beforeDestroy() {\n    this.removeRipple();\n  },\n};\n</script>\n","import {BasePlugin} from '../base'\r\nimport mdcIcon from './mdc-icon.vue'\r\n\r\nexport {\r\n  mdcIcon\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcIcon\r\n})\r\n","<template>\n  <span class=\"mdc-icon mdc-icon--material\" :class=\"{'material-icons':!!icon}\">\n    <slot>{{ icon }}</slot>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-icon',\n  props: {\n    icon: String\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {!{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {!{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n","import {BasePlugin} from '../base'\nimport mdcIConToggle from './mdc-icon-toggle.vue'\n\nexport {\n  mdcIConToggle\n}\n\nexport default BasePlugin({\n  mdcIConToggle\n})\n","<template>\n  <span class=\"mdc-icon-toggle\" role=\"button\" aria-pressed=\"false\"\n    :class=\"classes\" :style=\"styles\"\n    :tabindex=\"tabIndex\"\n    :data-toggle-on=\"toggleOnData\"\n    :data-toggle-off=\"toggleOffData\">\n    <i :class=\"iconClasses\" aria-hidden=\"true\">{{text}}</i>\n  </span>\n</template>\n\n<script>\nimport MDCIconToggleFoundation from '@material/icon-toggle/foundation'\nimport {RippleBase} from '../ripple'\n\nexport default {\n  name: 'mdc-icon-toggle',\n  props: {\n    toggleOn: [String, Object],\n    toggleOff: [String, Object],\n    value: Boolean,\n    disabled: Boolean,\n    accent: Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-icon-toggle--accent': this.accent\n      },\n      styles: {},\n      iconClasses: {},\n      tabIndex: 0,\n      text: '',\n    }\n  },\n  watch: {\n    value (value) {\n      this.foundation && this.foundation.toggle(value)\n    },\n    disabled (disabled) {\n      this.foundation && this.foundation.setDisabled(disabled)\n    },\n    toggleOnData () {\n     this.foundation && this.foundation.refreshToggleData()\n    },\n    toggleOffData () {\n    this.foundation && this.foundation.refreshToggleData()\n    },\n    accent (value) {\n      this.$set(this.classes, 'mdc-icon-toggle--secondary', value)\n    },\n  },\n  computed: {\n    toggleOnData () {\n      let toggle = this.toggleOn\n      return toggle && JSON.stringify((typeof toggle === 'string') ? { \n        content: toggle, \n        cssClass: 'material-icons' \n      } : {\n        content: toggle.icon || toggle.content,\n        label: toggle.label,\n        cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n      })\n    } ,\n    toggleOffData () {\n      let toggle = this.toggleOff\n      return toggle && JSON.stringify((typeof toggle === 'string') ? { \n        content: toggle, \n        cssClass: 'material-icons' \n      } : {\n        content: toggle.icon || toggle.content,\n        label: toggle.label,\n        cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n      })\n    },\n  },\n  mounted () {\n    this.foundation = new MDCIconToggleFoundation({\n      addClass: (className) => this.$set(this.iconClasses, className, true),\n      removeClass: (className) => this.$delete(this.iconClasses, className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$el.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$el.removeEventListener(evt, handler),\n      setText: (text) => { this.text = text },\n      getTabIndex: () => this.tabIndex,\n      setTabIndex: (tabIndex) => { this.tabIndex = tabIndex },\n      getAttr: (name, value) => this.$el.getAttribute(name, value),\n      setAttr: (name, value) => { this.$el.setAttribute(name, value) },\n      rmAttr: (name) => { this.$el.removeAttribute(name) },\n      notifyChange: (evtData) => { this.$emit('input', evtData.isOn) }\n    })\n    this.foundation.init()\n    this.foundation.toggle(this.value)\n    this.foundation.setDisabled(this.disabled)\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.foundation.isKeyboardActivated(),\n    })\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n    this.ripple.destroy()\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcLayoutApp from './mdc-layout-app.vue'\n\nexport {\n  mdcLayoutApp\n}\n\nexport default BasePlugin({\n  mdcLayoutApp\n})\n","<template>\n  <div class=\"mdc-layout-app\">\n\n    <div class=\"mdc-layout-app--toolbar-wrapper\">\n      <slot name=\"toolbar\" />\n    </div>\n\n    <div class=\"mdc-layout-app--main-container\">\n\n      <div class=\"mdc-layout-app--drawer-wrapper\">\n        <slot name=\"drawer\" />\n      </div>\n\n      <div class=\"mdc-layout-app--content-wrapper\">\n        <slot />\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-app',\n}\n</script>","<template>\n<div :class=\"classes\">\n  <div class=\"mdc-layout-grid__inner\">\n    <slot></slot>\n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-grid',\n  props: {\n    'fixed-column-width': Boolean,\n    'align-left': Boolean,\n    'align-right': Boolean,\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-layout-grid': true,\n        'mdc-layout-grid--fixed-column-width': this.fixedColumnWidth,\n        'mdc-layout-grid--align-left': this.alignLeft,\n        'mdc-layout-grid--align-right': this.alignRight,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div class=\"mdc-layout-cell mdc-layout-grid__cell\" :class=\"classes\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nconst spanOptions = {\n  type: [String, Number],\n  default: null,\n  validator: function (value) {\n    var num = Number(value)\n    return isFinite(num) && (num <= 12) && (num > 0)\n  }\n}\n\nexport default {\n  name: 'mdc-layout-cell',\n  props: {\n    span: spanOptions,\n    order: spanOptions,\n    phone: spanOptions,\n    tablet: spanOptions,\n    desktop: spanOptions,\n    align: {\n      type: String,\n      validator: function (value) {\n        return ['top', 'bottom', 'middle'].indexOf(value) !== -1\n      }\n    }\n  },\n  computed: {\n    classes () {\n      let classes = []\n\n      if (this.span) {\n        classes.push(`mdc-layout-grid__cell--span-${this.span}`)\n      }\n\n      if (this.order) {\n        classes.push(`mdc-layout-grid__cell--order-${this.order}`)\n      }\n\n      if (this.phone) {\n        classes.push(`mdc-layout-grid__cell--span-${this.phone}-phone`)\n      }\n\n      if (this.tablet) {\n        classes.push(`mdc-layout-grid__cell--span-${this.tablet}-tablet`)\n      }\n\n      if (this.desktop) {\n        classes.push(`mdc-layout-grid__cell--span-${this.desktop}-desktop`)\n      }\n\n      if (this.align) {\n        classes.push(`mdc-layout-grid__cell--align-${this.align}`)\n      }\n\n      return classes\n    }\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcLayoutGrid from './mdc-layout-grid.vue'\nimport mdcLayoutCell from './mdc-layout-cell.vue'\nimport mdcLayoutInnerGrid from './mdc-layout-inner-grid.vue'\n\nexport {\n  mdcLayoutGrid,\n  mdcLayoutCell,\n  mdcLayoutInnerGrid\n}\n\nexport default BasePlugin({\n  mdcLayoutGrid,\n  mdcLayoutCell,\n  mdcLayoutInnerGrid\n})\n","<template>\n  <div class=\"mdc-layout-inner-grid mdc-layout-grid__inner\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-inner-grid',\n}\n</script>\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  CLOSED_CLASS: 'mdc-linear-progress--closed',\n  INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',\n  REVERSED_CLASS: 'mdc-linear-progress--reversed',\n};\n\nexport const strings = {\n  PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',\n  BUFFER_SELECTOR: '.mdc-linear-progress__buffer',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {transformStyleProperties} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCLinearProgressFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      getPrimaryBar: () => /* el: Element */ {},\n      getBuffer: () => /* el: Element */ {},\n      hasClass: (/* className: string */) => false,\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* el: Element, styleProperty: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCLinearProgressFoundation.defaultAdapter, adapter));\n  }\n\n  init() {\n    this.determinate_ = !this.adapter_.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.reverse_ = this.adapter_.hasClass(cssClasses.REVERSED_CLASS);\n    this.progress_ = 0;\n  }\n\n  setDeterminate(isDeterminate) {\n    this.determinate_ = isDeterminate;\n    if (this.determinate_) {\n      this.adapter_.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);\n    } else {\n      this.adapter_.addClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), 1);\n      this.setScale_(this.adapter_.getBuffer(), 1);\n    }\n  }\n\n  setProgress(value) {\n    this.progress_ = value;\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getPrimaryBar(), value);\n    }\n  }\n\n  setBuffer(value) {\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getBuffer(), value);\n    }\n  }\n\n  setReverse(isReversed) {\n    this.reverse_ = isReversed;\n    if (this.reverse_) {\n      this.adapter_.addClass(cssClasses.REVERSED_CLASS);\n    } else {\n      this.adapter_.removeClass(cssClasses.REVERSED_CLASS);\n    }\n  }\n\n  open() {\n    this.adapter_.removeClass(cssClasses.CLOSED_CLASS);\n  }\n\n  close() {\n    this.adapter_.addClass(cssClasses.CLOSED_CLASS);\n  }\n\n  setScale_(el, scaleValue) {\n    const value = 'scaleX(' + scaleValue + ')';\n    transformStyleProperties.forEach((transformStyleProperty) => {\n      this.adapter_.setStyle(el, transformStyleProperty, value);\n    });\n  }\n}\n","<template>\n  <div role=\"progressbar\" class=\"mdc-linear-progress\" \n    :class=\"classes\" :style=\"styles\">\n    <div class=\"mdc-linear-progress__buffering-dots\"></div>\n    <div ref=\"buffer\" class=\"mdc-linear-progress__buffer\"></div>\n    <div ref=\"primary\" class=\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"></span>\n    </div>\n    <div class=\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"></span>\n    </div>\n  </div>  \n</template>\n\n<script>\nimport MDCLinearProgressFoundation from '@material/linear-progress/foundation'\n\nconst ProgressPropType = {\n  type: [Number, String],\n  validator (value) {\n    return Number(value) >= 0 && Number(value) <= 1\n  }\n}\n\nexport default {\n  name: 'mdc-linear-progress',\n  props: {\n    'open': { type: Boolean, default: true },\n    'indeterminate': Boolean,\n    'reverse': Boolean,\n    'accent': Boolean,\n    'progress': ProgressPropType,\n    'buffer': ProgressPropType\n  },\n  data () {\n    return {\n      classes: {'mdc-linear-progress--accent': this.accent},\n      styles: {}\n    }\n  },\n  watch: {\n    open () {\n      if (this.open) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    progress () {\n      this.foundation.setProgress(Number(this.progress))\n    },\n    buffer () {\n      this.foundation.setBuffer(Number(this.buffer))\n    },\n    indeterminate () {\n      this.foundation.setDeterminate(!this.indeterminate)\n    },\n    reverse () {\n      this.foundation.setReverse(this.reverse)\n    }\n  },\n  mounted () {\n    this.foundation = new MDCLinearProgressFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      getPrimaryBar: () => /* el: Element */ {\n        return this.$refs.primary\n      },\n      getBuffer: () => /* el: Element */ {\n        return this.$refs.buffer\n      },\n      hasClass: (className) => {\n        this.$el.classList.contains(className)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      setStyle: (el, styleProperty, value) => {\n        el.style[styleProperty] = value\n      }\n    })\n    this.foundation.init()\n\n    this.foundation.setReverse(this.reverse)\n    this.foundation.setProgress(Number(this.progress))\n    this.foundation.setBuffer(Number(this.buffer))\n    this.foundation.setDeterminate(!this.indeterminate)\n    if (this.open) {\n      this.foundation.open()\n    } else {\n      this.foundation.close()\n    }\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcLinearProgress from './mdc-linear-progress.vue'\n\nexport {\n  mdcLinearProgress\n}\n\nexport default BasePlugin({\n  mdcLinearProgress\n})","import {BasePlugin} from '../base'\nimport mdcList from './mdc-list.vue'\nimport mdcListItem from './mdc-list-item.vue'\nimport mdcListDivider from './mdc-list-divider.vue'\nimport mdcListGroup from './mdc-list-group.vue'\nimport mdcListGroupHeader from './mdc-list-group-header.vue'\nimport mdcListGroupDivider from './mdc-list-group-divider.vue'\n\nexport {\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n}\n\nexport default BasePlugin({\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n})\n","<template>\n  <ul class=\"mdc-list\" :class=\"classes\">\n    <slot></slot>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list',\n  props: {\n    dense: Boolean,\n    avatarList: Boolean,\n    twoLine: Boolean,\n    bordered: Boolean,\n    interactive: Boolean\n  },\n  provide () {\n    return { mdcList: this }\n  },\n  computed: {\n    classes () {\n      return {\n        'mdc-list--dense': this.dense,\n        'mdc-list--avatar-list': this.avatarList,\n        'mdc-list--two-line': this.twoLine,\n        'mdc-list--bordered': this.bordered,\n        'mdc-list--non-interactive': !this.interactive\n      }      \n    }\n  }\n}\n</script>\n","<template>\n  <li class=\"mdc-list-item\"\n    :class=\"[classes, itemClasses]\" :style=\"styles\"   \n    :tabindex=\"isInteractive ? '0' : undefined\"\n    v-on=\"isInteractive ? $listeners : {}\">\n\n    <span class=\"mdc-list-item__graphic\" v-if=\"hasStartDetail\">\n      <slot name=\"start-detail\"></slot>\n    </span>\n\n    <span class=\"mdc-list-item__text\" v-if=\"hasSecondary\">\n      <slot></slot>\n      <span class=\"mdc-list-item__secondary-text\">\n        <slot name=\"secondary\"></slot>\n      </span>\n    </span>\n    <slot v-else></slot>\n\n    <span class=\"mdc-list-item__meta\" v-if=\"hasEndDetail\">\n      <slot name=\"end-detail\"></slot>\n    </span>\n\n  </li>\n</template>\n\n<script>\nimport {RippleBase} from '../ripple'\n\nexport default {\n  name: 'mdc-list-item',\n  inject: ['mdcList'],\n  props: {\n    selected: Boolean,\n    activated: Boolean\n  },\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    } \n  },\n  computed: {\n    itemClasses () {\n      return {\n        'mdc-list-item--selected': this.selected,\n        'mdc-list-item--activated': this.activated\n      }\n    },\n    isInteractive () {\n      return this.mdcList && this.mdcList.interactive\n    },\n    hasSecondary () {\n      return this.$slots['secondary'] && (\n        this.mdcList && this.mdcList.twoLine\n      ) \n    },\n    hasEndDetail () {\n      return !!this.$slots['end-detail']\n    },\n    hasStartDetail () {\n      return !!this.$slots['start-detail']\n    }\n  },\n  watch: {\n    isInteractive (value) {\n        if (value) {\n          this.addRipple() \n        } else {\n          this.removeRipple()\n        }\n    }\n  },\n  mounted () {\n    this.isInteractive && this.addRipple()\n  },\n  beforeDestroy () {\n    this.removeRipple()\n  },\n  methods: {\n    addRipple () {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple                 \n      } \n    },\n    removeRipple () {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null \n        ripple.destroy()\n      }                \n    }\n  }\n  \n}\n</script>\n  ","<template>\n  <li role=\"separator\" class=\"mdc-list-divider\" \n  :class=\"classes\"></li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-divider',\n  props: {\n    inset: Boolean,\n    padded: Boolean\n  },\n  computed: {\n    classes () {\n      return {\n        'mdc-list-divider--inset': this.inset,\n        'mdc-list-divider--padded': this.padded\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-list-group\"><slot></slot></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group',\n}\n</script>\n","<template>\n  <h3 class=\"mdc-list-group-header mdc-list-group__subheader\"><slot></slot></h3>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-header',\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-group-divider mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-divider',\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  OPEN: 'mdc-menu--open',\n  ANIMATING_OPEN: 'mdc-menu--animating-open',\n  ANIMATING_CLOSED: 'mdc-menu--animating-closed',\n  SELECTED_LIST_ITEM: 'mdc-list-item--selected',\n};\n\n/** @enum {string} */\nconst strings = {\n  ITEMS_SELECTOR: '.mdc-menu__items',\n  SELECTED_EVENT: 'MDCMenu:selected',\n  CANCEL_EVENT: 'MDCMenu:cancel',\n  ARIA_DISABLED_ATTR: 'aria-disabled',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Amount of time to wait before triggering a selected event on the menu. Note that this time\n  // will most likely be bumped up once interactive lists are supported to allow for the ripple to\n  // animate before closing the menu\n  SELECTED_TRIGGER_DELAY: 50,\n  // Total duration of menu open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_WIDTH_RATIO: 0.67,\n  // Ratio of vertical offset to menu height for switching from corner to mid-way origin positioning.\n  OFFSET_TO_MENU_HEIGHT_RATIO: 0.1,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Menu. Provides an interface for managing\n * - classes\n * - dom\n * - focus\n * - position\n * - dimensions\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCMenuAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /** @return {boolean} */\n  hasNecessaryDom() {}\n\n  /**\n   * @param {EventTarget} target\n   * @param {string} attributeName\n   * @return {string}\n   */\n  getAttributeForEventTarget(target, attributeName) {}\n\n  /** @return {{ width: number, height: number }} */\n  getInnerDimensions() {}\n\n  /** @return {boolean} */\n  hasAnchor() {}\n\n  /** @return {{width: number, height: number, top: number, right: number, bottom: number, left: number}} */\n  getAnchorDimensions() {}\n\n  /** @return {{ width: number, height: number }} */\n  getWindowDimensions() {}\n\n  /** @return {number} */\n  getNumberOfItems() {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerBodyClickHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterBodyClickHandler(handler) {}\n\n  /**\n   * @param {EventTarget} target\n   * @return {number}\n   */\n  getIndexForEventTarget(target) {}\n\n  /** @param {{index: number}} evtData */\n  notifySelected(evtData) {}\n\n  notifyCancel() {}\n\n  saveFocus() {}\n\n  restoreFocus() {}\n\n  /** @return {boolean} */\n  isFocused() {}\n\n  focus() {}\n\n  /** @return {number} */\n  getFocusedItemIndex() /* number */ {}\n\n  /** @param {number} index */\n  focusItemAtIndex(index) {}\n\n  /** @return {boolean} */\n  isRtl() {}\n\n  /** @param {string} origin */\n  setTransformOrigin(origin) {}\n\n  /** @param {{\n  *   top: (string|undefined),\n  *   right: (string|undefined),\n  *   bottom: (string|undefined),\n  *   left: (string|undefined)\n  * }} position */\n  setPosition(position) {}\n\n  /** @param {string} height */\n  setMaxHeight(height) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttrForOptionAtIndex(index, attr, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   */\n  rmAttrForOptionAtIndex(index, attr) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForOptionAtIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  rmClassForOptionAtIndex(index, className) {}\n}\n\nexport {MDCMenuAdapter};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   menuHeight: number,\n *   menuWidth: number,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasNecessaryDom: () => false,\n      getAttributeForEventTarget: () => {},\n      getInnerDimensions: () => ({}),\n      hasAnchor: () => false,\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getNumberOfItems: () => 0,\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      registerBodyClickHandler: () => {},\n      deregisterBodyClickHandler: () => {},\n      getIndexForEventTarget: () => 0,\n      notifySelected: () => {},\n      notifyCancel: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFocused: () => false,\n      focus: () => {},\n      getFocusedItemIndex: () => -1,\n      focusItemAtIndex: () => {},\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      setPosition: () => {},\n      setMaxHeight: () => {},\n      setAttrForOptionAtIndex: () => {},\n      rmAttrForOptionAtIndex: () => {},\n      addClassForOptionAtIndex: () => {},\n      rmClassForOptionAtIndex: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event)} */\n    this.clickHandler_ = (evt) => this.handlePossibleSelected_(evt);\n    /** @private {function(!Event)} */\n    this.keydownHandler_ = (evt) => this.handleKeyboardDown_(evt);\n    /** @private {function(!Event)} */\n    this.keyupHandler_ = (evt) => this.handleKeyboardUp_(evt);\n    /** @private {function(!Event)} */\n    this.documentClickHandler_ = (evt) => this.handleDocumentClick_(evt);\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.selectedTriggerTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {number} */\n    this.itemHeight_;\n    /** @private {Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {number} */\n    this.selectedIndex_ = -1;\n    /** @private {boolean} */\n    this.rememberSelection_ = false;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n\n    // A keyup event on the menu needs to have a corresponding keydown\n    // event on the menu. If the user opens the menu with a keydown event on a\n    // button, the menu will only get the key up event causing buggy behavior with selected elements.\n    /** @private {boolean} */\n    this.keyDownWithinMenu_ = false;\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    clearTimeout(this.selectedTriggerTimerId_);\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin 4-plet of margins from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /** @param {boolean} rememberSelection */\n  setRememberSelection(rememberSelection) {\n    this.rememberSelection_ = rememberSelection;\n    this.setSelectedIndex(-1);\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * @param {?number} focusIndex\n   * @private\n   */\n  focusOnOpen_(focusIndex) {\n    if (focusIndex === null) {\n      // If this instance of MDCMenu remembers selections, and the user has\n      // made a selection, then focus the last selected item\n      if (this.rememberSelection_ && this.selectedIndex_ >= 0) {\n        this.adapter_.focusItemAtIndex(this.selectedIndex_);\n        return;\n      }\n\n      this.adapter_.focus();\n      // If that doesn't work, focus first item instead.\n      if (!this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      }\n    } else {\n      this.adapter_.focusItemAtIndex(focusIndex);\n    }\n  }\n\n  /**\n   * Handle clicks and cancel the menu if not a child list-item\n   * @param {!Event} evt\n   * @private\n   */\n  handleDocumentClick_(evt) {\n    let el = evt.target;\n\n    while (el && el !== document.documentElement) {\n      if (this.adapter_.getIndexForEventTarget(el) !== -1) {\n        return;\n      }\n      el = el.parentNode;\n    }\n\n    this.adapter_.notifyCancel();\n    this.close(evt);\n  };\n\n  /**\n   * Handle keys that we want to repeat on hold (tab and arrows).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardDown_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key, shiftKey} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n    const isArrowUp = key === 'ArrowUp' || keyCode === 38;\n    const isArrowDown = key === 'ArrowDown' || keyCode === 40;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    // The menu needs to know if the keydown event was triggered on the menu\n    this.keyDownWithinMenu_ = isEnter || isSpace;\n\n    const focusedItemIndex = this.adapter_.getFocusedItemIndex();\n    const lastItemIndex = this.adapter_.getNumberOfItems() - 1;\n\n    if (shiftKey && isTab && focusedItemIndex === 0) {\n      this.adapter_.focusItemAtIndex(lastItemIndex);\n      evt.preventDefault();\n      return false;\n    }\n\n    if (!shiftKey && isTab && focusedItemIndex === lastItemIndex) {\n      this.adapter_.focusItemAtIndex(0);\n      evt.preventDefault();\n      return false;\n    }\n\n    // Ensure Arrow{Up,Down} and space do not cause inadvertent scrolling\n    if (isArrowUp || isArrowDown || isSpace) {\n      evt.preventDefault();\n    }\n\n    if (isArrowUp) {\n      if (focusedItemIndex === 0 || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(lastItemIndex);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex - 1);\n      }\n    } else if (isArrowDown) {\n      if (focusedItemIndex === lastItemIndex || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex + 1);\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle keys that we don't want to repeat on hold (Enter, Space, Escape).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardUp_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key} = evt;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEscape = key === 'Escape' || keyCode === 27;\n\n    if (isEnter || isSpace) {\n      // If the keydown event didn't occur on the menu, then it should\n      // disregard the possible selected event.\n      if (this.keyDownWithinMenu_) {\n        this.handlePossibleSelected_(evt);\n      }\n      this.keyDownWithinMenu_ = false;\n    }\n\n    if (isEscape) {\n      this.adapter_.notifyCancel();\n      this.close();\n    }\n\n    return true;\n  }\n\n  /**\n   * @param {!Event} evt\n   * @private\n   */\n  handlePossibleSelected_(evt) {\n    if (this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true') {\n      return;\n    }\n    const targetIndex = this.adapter_.getIndexForEventTarget(evt.target);\n    if (targetIndex < 0) {\n      return;\n    }\n    // Debounce multiple selections\n    if (this.selectedTriggerTimerId_) {\n      return;\n    }\n    this.selectedTriggerTimerId_ = setTimeout(() => {\n      this.selectedTriggerTimerId_ = 0;\n      this.close();\n      if (this.rememberSelection_) {\n        this.setSelectedIndex(targetIndex);\n      }\n      this.adapter_.notifySelected({index: targetIndex});\n    }, numbers.SELECTED_TRIGGER_DELAY);\n  }\n\n  /**\n   * @return {AutoLayoutMeasurements} Measurements used to position menu popup.\n   */\n  getAutoLayoutMeasurements_() {\n    const anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n\n    return {\n      viewport: viewport,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      menuHeight: this.dimensions_.height,\n      menuWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu.\n   * @return {Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, menuHeight, menuWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = menuHeight - availableTop;\n    const bottomOverflow = menuHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = menuWidth - availableLeft;\n    const rightOverflow = menuWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return corner;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Horizontal offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    let x = 0;\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n      x = rightOffset;\n    } else {\n      const leftOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n      x = leftOffset;\n    }\n    return x;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Vertical offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {viewport, viewportDistance, anchorHeight, menuHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuFoundation.numbers;\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const canOverlapVertically = !avoidVerticalOverlap;\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to bottom\n      // anchor corner. Bottom margin is ignored in such cases.\n      if (canOverlapVertically && menuHeight > viewportDistance.top + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.top + anchorHeight));\n      }\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to top\n      // anchor corners. Top margin is ignored in that case.\n      if (canOverlapVertically && menuHeight > viewportDistance.bottom + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.bottom + anchorHeight));\n      }\n    }\n    return y;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Maximum height of the menu, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n\n    // When maximum height is not specified, it is handled from css.\n    if (this.anchorCorner_ & CornerBit.BOTTOM) {\n      if (isBottomAligned) {\n        maxHeight = viewportDistance.top + this.anchorMargin_.top;\n      } else {\n        maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    if (!this.adapter_.hasAnchor()) {\n      return;\n    }\n\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuHeight = this.getMenuMaxHeight_(corner);\n    let verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    const position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset + 'px' : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset + 'px' : '0',\n    };\n    const {anchorWidth, menuHeight, menuWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu, otherwise keep corner.\n    if (anchorWidth / menuWidth > numbers.ANCHOR_TO_MENU_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // Adjust vertical origin when menu is positioned with significant offset from anchor. This is done so that\n    // scale animation is \"anchored\" on the anchor.\n    if (!(this.anchorCorner_ & CornerBit.BOTTOM) &&\n        Math.abs(verticalOffset / menuHeight) > numbers.OFFSET_TO_MENU_HEIGHT_RATIO) {\n      const verticalOffsetPercent = Math.abs(verticalOffset / menuHeight) * 100;\n      const originPercent = (corner & CornerBit.BOTTOM) ? 100 - verticalOffsetPercent : verticalOffsetPercent;\n      verticalAlignment = Math.round(originPercent * 100) / 100 + '%';\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuHeight ? maxMenuHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Open the menu.\n   * @param {{focusIndex: ?number}=} options\n   */\n  open({focusIndex = null} = {}) {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.OPEN);\n      this.focusOnOpen_(focusIndex);\n      this.adapter_.registerBodyClickHandler(this.documentClickHandler_);\n      if (!this.quickOpen_) {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu.\n   * @param {Event=} evt\n   */\n  close(evt = null) {\n    const targetIsDisabled = evt ?\n      this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true' :\n      false;\n\n    if (targetIsDisabled) {\n      return;\n    }\n\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuFoundation.cssClasses.OPEN);\n      if (!this.quickOpen_) {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n    this.isOpen_ = false;\n    this.adapter_.restoreFocus();\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /** @return {number} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /**\n   * @param {number} index Index of the item to set as selected.\n   */\n  setSelectedIndex(index) {\n    if (index === this.selectedIndex_) {\n      return;\n    }\n\n    const prevSelectedIndex = this.selectedIndex_;\n    if (prevSelectedIndex >= 0) {\n      this.adapter_.rmAttrForOptionAtIndex(prevSelectedIndex, 'aria-selected');\n      this.adapter_.rmClassForOptionAtIndex(prevSelectedIndex, cssClasses.SELECTED_LIST_ITEM);\n    }\n\n    this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfItems() ? index : -1;\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');\n      this.adapter_.addClassForOptionAtIndex(this.selectedIndex_, cssClasses.SELECTED_LIST_ITEM);\n    }\n  }\n}\n\nexport {MDCMenuFoundation, AnchorMargin};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n/**\n * Clamps a value between the minimum and the maximum, returning the clamped value.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value));\n}\n\n\n/**\n * Returns the easing value to apply at time t, for a given cubic bezier curve.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Parameters are as follows:\n * - time: The current time in the animation, scaled between 0 and 1.\n * - x1: The x value of control point P1.\n * - y1: The y value of control point P1.\n * - x2: The x value of control point P2.\n * - y2: The y value of control point P2.\n * @param {number} time\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nfunction bezierProgress(time, x1, y1, x2, y2) {\n  return getBezierCoordinate_(solvePositionFromXValue_(time, x1, x2), y1, y2);\n}\n\n/**\n * Compute a single coordinate at a position point between 0 and 1.\n * c1 and c2 are the matching coordinate on control points P1 and P2, respectively.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} t\n * @param {number} c1\n * @param {number} c2\n * @return {number}\n */\nfunction getBezierCoordinate_(t, c1, c2) {\n  // Special case start and end.\n  if (t === 0 || t === 1) {\n    return t;\n  }\n\n  // Step one - from 4 points to 3\n  let ic0 = t * c1;\n  let ic1 = c1 + t * (c2 - c1);\n  const ic2 = c2 + t * (1 - c2);\n\n  // Step two - from 3 points to 2\n  ic0 += t * (ic1 - ic0);\n  ic1 += t * (ic2 - ic1);\n\n  // Final step - last point\n  return ic0 + t * (ic1 - ic0);\n}\n\n/**\n * Project a point onto the Bezier curve, from a given X. Calculates the position t along the curve.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} xVal\n * @param {number} x1\n * @param {number} x2\n * @return {number}\n */\nfunction solvePositionFromXValue_(xVal, x1, x2) {\n  const EPSILON = 1e-6;\n  const MAX_ITERATIONS = 8;\n\n  if (xVal <= 0) {\n    return 0;\n  } else if (xVal >= 1) {\n    return 1;\n  }\n\n  // Initial estimate of t using linear interpolation.\n  let t = xVal;\n\n  // Try gradient descent to solve for t. If it works, it is very fast.\n  let tMin = 0;\n  let tMax = 1;\n  let value = 0;\n  for (let i = 0; i < MAX_ITERATIONS; i++) {\n    value = getBezierCoordinate_(t, x1, x2);\n    const derivative = (getBezierCoordinate_(t + EPSILON, x1, x2) - value) / EPSILON;\n    if (Math.abs(value - xVal) < EPSILON) {\n      return t;\n    } else if (Math.abs(derivative) < EPSILON) {\n      break;\n    } else {\n      if (value < xVal) {\n        tMin = t;\n      } else {\n        tMax = t;\n      }\n      t -= (value - xVal) / derivative;\n    }\n  }\n\n  // If the gradient descent got stuck in a local minimum, e.g. because\n  // the derivative was close to 0, use a Dichotomy refinement instead.\n  // We limit the number of interations to 8.\n  for (let i = 0; Math.abs(value - xVal) > EPSILON && i < MAX_ITERATIONS; i++) {\n    if (value < xVal) {\n      tMin = t;\n      t = (t + tMax) / 2;\n    } else {\n      tMax = t;\n      t = (t + tMin) / 2;\n    }\n    value = getBezierCoordinate_(t, x1, x2);\n  }\n  return t;\n}\n\nexport {getTransformPropertyName, clamp, bezierProgress};\n","import {BasePlugin} from '../base'\nimport mdcMenu from './mdc-menu.vue'\nimport mdcMenuItem from './mdc-menu-item.vue'\nimport mdcMenuDivider from './mdc-menu-divider.vue'\nimport mdcMenuAnchor from './mdc-menu-anchor.vue'\n\nexport {\n  mdcMenu,\n  mdcMenuItem,\n  mdcMenuDivider,\n  mdcMenuAnchor\n}\n\nexport default BasePlugin({\n  mdcMenu,\n  mdcMenuItem,\n  mdcMenuDivider,\n  mdcMenuAnchor\n})\n","<template>\n  <div ref=\"root\" class=\"mdc-menu mdc-simple-menu\"\n    :class=\"classes\" :style=\"styles\" \n    tabindex=\"-1\">\n    <ul ref=\"items\" class=\"mdc-simple-menu__items mdc-list\" \n      role=\"menu\" aria-hidden=\"true\">\n      <slot></slot>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { MDCMenuFoundation } from '@material/menu/foundation';\nimport { getTransformPropertyName } from '@material/menu/util';\nimport { emitCustomEvent } from '../base';\n\nexport default {\n  name: 'mdc-menu',\n  props: {\n    'open-from-top-left': Boolean,\n    'open-from-top-right': Boolean,\n    'open-from-bottom-left': Boolean,\n    'open-from-bottom-right': Boolean,\n    'quick-open': Boolean,\n    'anchor-corner': [String, Number],\n    'anchor-margin': Object,\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-simple-menu--open-from-top-left': this.openFromTopLeft,\n        'mdc-simple-menu--open-from-top-right': this.openFromTopRight,\n        'mdc-simple-menu--open-from-bottom-left': this.openFromBottomLeft,\n        'mdc-simple-menu--open-from-bottom-right': this.openFromBottomRight,\n      },\n      styles: {},\n      items: [],\n    };\n  },\n  methods: {\n    show(options) {\n      this.foundation.open(options);\n    },\n    hide() {\n      this.foundation.close();\n    },\n    isOpen() {\n      return this.foundation ? this.foundation.isOpen() : false;\n    },\n  },\n  mounted() {\n    const refreshItems = () => {\n      this.items = [].slice.call(\n        this.$refs.items.querySelectorAll('.mdc-list-item[role]'),\n      );\n      this.$emit('update');\n    };\n    this.slotObserver = new MutationObserver(() => refreshItems());\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true });\n\n    this._previousFocus = undefined;\n\n    this.foundation = new MDCMenuFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$refs.root.classList.contains(className),\n      hasNecessaryDom: () => Boolean(this.$refs.items),\n      getAttributeForEventTarget: (target, attributeName) =>\n        target.getAttribute(attributeName),\n      getInnerDimensions: () => ({\n        width: this.$refs.items.offsetWidth,\n        height: this.$refs.items.offsetHeight,\n      }),\n      hasAnchor: () =>\n        this.$refs.root.parentElement &&\n        this.$refs.root.parentElement.classList.contains('mdc-menu-anchor'),\n      getAnchorDimensions: () =>\n        this.$refs.root.parentElement.getBoundingClientRect(),\n      getWindowDimensions: () => ({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      }),\n      getNumberOfItems: () => this.items.length,\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.root.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.root.removeEventListener(type, handler),\n      registerBodyClickHandler: handler =>\n        document.body.addEventListener('click', handler),\n      deregisterBodyClickHandler: handler =>\n        document.body.removeEventListener('click', handler),\n      getIndexForEventTarget: target => this.items.indexOf(target),\n      notifySelected: evtData => {\n        const evt = {\n          index: evtData.index,\n          item: this.items[evtData.index],\n        };\n        this.$emit('select', evt);\n        emitCustomEvent(\n          this.$el,\n          MDCMenuFoundation.strings.SELECTED_EVENT,\n          evt,\n        );\n      },\n      notifyCancel: () => {\n        this.$emit('cancel');\n        emitCustomEvent(this.$el, MDCMenuFoundation.strings.CANCEL_EVENT, {});\n      },\n      saveFocus: () => {\n        this._previousFocus = document.activeElement;\n      },\n      restoreFocus: () => {\n        if (this._previousFocus) {\n          this._previousFocus.focus();\n        }\n      },\n      isFocused: () => document.activeElement === this.$refs.root,\n      focus: () => this.$refs.root.focus(),\n      getFocusedItemIndex: () => this.items.indexOf(document.activeElement),\n      focusItemAtIndex: index => this.items[index].focus(),\n      isRtl: () =>\n        getComputedStyle(this.$refs.root).getPropertyValue('direction') ===\n        'rtl',\n      setTransformOrigin: origin => {\n        this.$set(\n          this.styles,\n          `${getTransformPropertyName(window)}-origin`,\n          origin,\n        );\n      },\n      setPosition: position => {\n        this.$set(this.styles, 'left', position.left);\n        this.$set(this.styles, 'right', position.right);\n        this.$set(this.styles, 'top', position.top);\n        this.$set(this.styles, 'bottom', position.bottom);\n      },\n      setMaxHeight: height => {\n        this.$set(this.styles, 'max-height', height);\n      },\n      setAttrForOptionAtIndex: (index, attr, value) => {\n        this.items[index].setAttribute(attr, value);\n      },\n      rmAttrForOptionAtIndex: (index, attr) => {\n        this.items[index].removeAttribute(attr);\n      },\n      addClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.add(className);\n      },\n      rmClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.remove(className);\n      },\n    });\n\n    refreshItems();\n    this.foundation.init();\n    if (this.anchorCorner !== void 0) {\n      this.foundation.setAnchorCorner(Number(this.anchorCorner));\n    }\n    if (this.anchorMargin !== void 0) {\n      this.foundation.setAnchorMargin(this.anchorMargin);\n    }\n  },\n  watch: {\n    quickOpen(nv) {\n      this.foundation.setQuickOpen(nv);\n    },\n    anchorCorner(nv) {\n      this.foundation.setAnchorCorner(Number(nv));\n    },\n    anchorMargin(nv) {\n      this.foundation.setAnchorMargin(nv);\n    },\n  },\n  beforeDestroy() {\n    this._previousFocus = null;\n    this.slotObserver.disconnect();\n    this.foundation.destroy();\n  },\n};\n</script>\n","<template>\n  <li class=\"mdc-menu-item mdc-list-item\" role=\"menuitem\" \n    :tabindex=\"disabled?'-1':'0'\"\n    :aria-disabled=\"disabled\"\n    >\n    <slot></slot>\n  </li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-item',\n  props: {\n    disabled: Boolean\n  }\n}\n</script>\n","<template>\n  <li role=\"separator\" class=\"mdc-menu-divider mdc-list-divider\"></li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-divider',\n}\n</script>\n","<template>\n<div class=\"mdc-menu-anchor\">\n  <slot>\n  </slot>\n</div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-anchor',\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-radio',\n  DISABLED: 'mdc-radio--disabled',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Radio. Provides an interface for managing\n * - classes\n * - dom\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRadioAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n}\n\nexport default MDCRadioAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCRadioAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCRadioAdapter>}\n */\nclass MDCRadioFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCRadioAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCRadioAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n    });\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    const {DISABLED} = MDCRadioFoundation.cssClasses;\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\nexport default MDCRadioFoundation;\n","import {BasePlugin} from '../base'\nimport mdcRadio from './mdc-radio.vue'\n\nexport {\n  mdcRadio\n}\n\nexport default BasePlugin({\n  mdcRadio\n})\n","<template>\n<div :class=\"formFieldClasses\" class=\"mdc-radio-wrapper\">\n  <div ref=\"root\" class=\"mdc-radio\" :class=\"classes\" :style=\"styles\">\n    <input type=\"radio\" ref=\"control\" :id=\"vma_uid_\" :name=\"name\" \n      class=\"mdc-radio__native-control\" @change=\"sync\">\n  \n    <div ref=\"label\" class=\"mdc-radio__background\">\n      <div class=\"mdc-radio__outer-circle\"></div>\n      <div class=\"mdc-radio__inner-circle\"></div>\n    </div>\n  </div>\n  <label ref=\"label\" :for=\"vma_uid_\"><slot>{{label}}</slot></label>\n</div>\n</template>\n\n<script>\nimport MDCRadioFoundation from '@material/radio/foundation'\nimport MDCFormFieldFoundation from '@material/form-field/foundation'\nimport {DispatchFocusMixin} from '../base'\nimport {RippleBase} from '../ripple'\n\n\nexport default {\n  name: 'mdc-radio',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'picked',\n    event: 'change'\n  },\n  props: {\n    'name': {type: String, required: true},\n    'value': String,\n    'picked': String,\n    'checked': Boolean,\n    'label': String,\n    'align-end': Boolean,\n    'disabled': Boolean,\n  },\n  data () {\n    return {\n      classes: {},\n      styles: {},\n      formFieldClasses: {\n        'mdc-form-field': this.label,\n        'mdc-form-field--align-end': this.label && this.alignEnd\n      }\n    }\n  },\n  mounted () {\n    // add foundation\n    this.foundation = new MDCRadioFoundation({\n      addClass: (className) => this.$set(this.classes, className, true),\n      removeClass: (className) => this.$delete(this.classes, className),\n      getNativeControl: () => this.$refs.control\n    })\n\n    // add ripple\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => false,\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.removeEventListener(evt, handler)\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect()\n      }\n    })\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler)\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate()\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate()\n      },\n    });\n\n    this.foundation.init()\n    this.ripple.init()\n    this.formField.init()\n\n    this.foundation.setValue(this.value ? this.value : this.label)\n    this.foundation.setDisabled(this.disabled)\n    this.foundation.setChecked(this.checked || this.picked == this.foundation.getValue())\n\n    // refresh model\n    this.checked && this.sync()\n  },\n  beforeDestroy () {\n    this.formField.destroy()\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  watch: {\n    disabled (value) {\n      this.foundation.setDisabled(value)\n    }\n  },\n  methods: {\n    isChecked () {\n      return this.foundation.isChecked()\n    },\n    sync () {\n      this.$emit('change', this.foundation.getValue())\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  IS_CHANGING: 'mdc-select--is-changing',\n};\n\nexport const numbers = {\n  FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS: 125,\n};\n\nexport const strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  BOTTOM_LINE_SELECTOR: '.mdc-select__bottom-line',\n  LABEL_SELECTOR: '.mdc-select__label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, numbers, strings} from './constants';\n\nexport default class MDCSelectFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      floatLabel: (/* value: boolean */) => {},\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getSelectedIndex: () => /* number */ -1,\n      setSelectedIndex: (/* index: number */) => {},\n      setDisabled: (/* disabled: boolean */) => {},\n      getValue: () => /* string */ '',\n      setValue: (/* value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    this.focusHandler_ = (evt) => this.handleFocus_(evt);\n    this.blurHandler_ = (evt) => this.handleBlur_(evt);\n    this.selectionHandler_ = (evt) => this.handleSelect_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerInteractionHandler('change', this.selectionHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterInteractionHandler('change', this.selectionHandler_);\n  }\n\n  setSelectedIndex(index) {\n    const {IS_CHANGING} = MDCSelectFoundation.cssClasses;\n    const {FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS} = MDCSelectFoundation.numbers;\n\n    this.adapter_.setSelectedIndex(index);\n    this.adapter_.addClass(IS_CHANGING);\n    const optionHasValue = this.adapter_.getValue().length > 0;\n\n    this.adapter_.floatLabel(optionHasValue);\n\n    setTimeout(() => {\n      this.adapter_.removeClass(IS_CHANGING);\n    }, FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS);\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  setDisabled(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    this.adapter_.setDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  handleFocus_() {\n    this.adapter_.activateBottomLine();\n  }\n\n  handleBlur_() {\n    this.adapter_.deactivateBottomLine();\n  }\n\n  handleSelect_() {\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  BOTTOM_LINE_ACTIVE: 'mdc-select__bottom-line--active',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Bottom Line.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectBottomLineAdapter {\n  /**\n   * Adds a class to the bottom line element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the bottom line element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n}\n\nexport default MDCSelectBottomLineAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectBottomLineAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectBottomLineAdapter>}\n * @final\n */\nclass MDCSelectBottomLineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCSelectBottomLineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectBottomLineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectBottomLineAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n    });\n  }\n\n  /**\n   * Adds the active class to bottom line\n   */\n  activate() {\n    this.adapter_.addClass(cssClasses.BOTTOM_LINE_ACTIVE);\n  }\n\n  /**\n   * Removes the active class from the bottom line\n   */\n  deactivate() {\n    this.adapter_.removeClass(cssClasses.BOTTOM_LINE_ACTIVE);\n  }\n\n  /**\n   * @param {!MDCSelectBottomLineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectBottomLineFoundation.defaultAdapter, adapter));\n  }\n}\n\nexport default MDCSelectBottomLineFoundation;\n","export const cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-select__label--float-above',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n}\n\nexport default MDCSelectLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSelectLabelAdapter>}\n * @final\n */\nclass MDCSelectLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCSelectLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectLabelFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Styles the label to float or defloat as necessary.\n   * @param {string} value The value of the input.\n   */\n  styleFloat(value) {\n    const {LABEL_FLOAT_ABOVE} = MDCSelectLabelFoundation.cssClasses;\n    if (!!value) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n    }\n  }\n}\n\nexport default MDCSelectLabelFoundation;\n","import { BasePlugin } from '../base';\nimport mdcSelect from './mdc-select.vue';\n\nexport { mdcSelect };\n\nexport default BasePlugin({\n  mdcSelect,\n});\n","<template>\n<div class=\"mdc-select\" :class=\"rootClasses\" :style=\"styles\">\r\n  <select ref=\"native_control\" class=\"mdc-select__native-control\" v-on=\"listeners\" v-bind=\"$attrs\">\r\n    <option class=\"mdc-option\" value=\"\" disabled selected v-if=\"!!label\"></option>\r\n    <slot></slot>\r\n  </select>\r\n  <div ref=\"label\" class=\"mdc-select__label\" :class=\"labelClasses\">{{label}}</div>\r\n  <div ref=\"bottomLine\" class=\"mdc-select__bottom-line\" :class=\"bottomLineClasses\" v-if=\"bottomLine\"></div>\r\n</div>\n</template>\r\n\r\n<script>\nimport MDCSelectFoundation from '@material/select/foundation';\nimport MDCSelectBottomLineFoundation from '@material/select/bottom-line/foundation';\nimport MDCSelectLabelFoundation from '@material/select/label/foundation';\nimport { RippleBase } from '../ripple';\n\nexport default {\n  name: 'mdc-select',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: {\n    value: String,\n    disabled: Boolean,\n    label: String,\n    box: Boolean,\n    bottomLine: { type: Boolean, default: true },\n  },\n  inheritAttrs: false,\n  data() {\n    return {\n      styles: {},\n      labelClasses: {},\n      bottomLineClasses: {},\n      classes: {},\n    };\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.setDisabled(value);\n    },\n    value: 'refreshIndex',\n  },\n  methods: {\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')];\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value;\n      });\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.foundation.setSelectedIndex(idx);\n      }\n    },\n  },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select--box': this.box,\n        ...this.classes,\n      };\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.$emit('change', event.target.value),\n      };\n    },\n  },\n  mounted() {\n    if (this.label) {\n      this.labelFoundation = new MDCSelectLabelFoundation({\n        addClass: className => this.$set(this.labelClasses, className, true),\n        removeClass: className => this.$delete(this.labelClasses, className),\n      });\n      this.labelFoundation.init();\n    }\n\n    if (this.bottomLine) {\n      this.bottomLineFoundation = new MDCSelectBottomLineFoundation({\n        addClass: className => {\n          this.$set(this.bottomLineClasses, className, true);\n        },\n        removeClass: className => {\n          this.$delete(this.bottomLineClasses, className);\n        },\n      });\n      this.bottomLineFoundation.init();\n    }\n\n    this.foundation = new MDCSelectFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      floatLabel: value => {\n        this.labelFoundation.styleFloat(value);\n      },\n      activateBottomLine: () => {\n        this.bottomLineFoundation.activate();\n      },\n      deactivateBottomLine: () => {\n        this.bottomLineFoundation.deactivate();\n      },\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.native_control.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.native_control.removeEventListener(type, handler),\n      getSelectedIndex: () => this.$refs.native_control.selectedIndex,\n      setSelectedIndex: index =>\n        (this.$refs.native_control.selectedIndex = index),\n      setDisabled: disabled => (this.$refs.native_control.disabled = disabled),\n      getValue: () => this.$refs.native_control.value,\n      setValue: value => (this.$refs.native_control.value = value),\n    });\n\n    this.foundation.init();\n\n    this.foundation.setDisabled(this.disabled);\n\n    // initial sync with DOM\n    this.refreshIndex();\n    this.slotObserver = new MutationObserver(() => this.refreshIndex());\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true,\n    });\n\n    if (this.box) {\n      this.ripple = new RippleBase(this);\n      this.ripple.init();\n    }\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect();\n    let foundation = this.foundation;\n    this.foundation = null;\n    foundation.destroy();\n\n    let labelFoundation = this.labelFoundation;\n    this.labelFoundation = null;\n    labelFoundation.destroy();\n\n    let bottomLineFoundation = this.bottomLineFoundation;\n    this.bottomLineFoundation = null;\n    bottomLineFoundation.destroy();\n\n    this.ripple && this.ripple.destroy();\n  },\n};\n</script>\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-slider--active',\n  DISABLED: 'mdc-slider--disabled',\n  DISCRETE: 'mdc-slider--discrete',\n  FOCUS: 'mdc-slider--focus',\n  IN_TRANSIT: 'mdc-slider--in-transit',\n  IS_DISCRETE: 'mdc-slider--discrete',\n  HAS_TRACK_MARKER: 'mdc-slider--display-markers',\n};\n\n/** @enum {string} */\nconst strings = {\n  TRACK_SELECTOR: '.mdc-slider__track',\n  TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',\n  LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',\n  THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',\n  PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',\n  ARIA_VALUEMIN: 'aria-valuemin',\n  ARIA_VALUEMAX: 'aria-valuemax',\n  ARIA_VALUENOW: 'aria-valuenow',\n  ARIA_DISABLED: 'aria-disabled',\n  STEP_DATA_ATTR: 'data-step',\n  CHANGE_EVENT: 'MDCSlider:change',\n  INPUT_EVENT: 'MDCSlider:input',\n};\n\n/** @enum {number} */\nconst numbers = {\n  PAGE_FACTOR: 4,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n *you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssClasses, strings, numbers} from './constants';\nimport MDCSliderAdapter from './adapter';\n\nimport {getCorrectEventName, getCorrectPropertyName} from '@material/animation/index';\nimport MDCFoundation from '@material/base/foundation';\n\n/** @enum {string} */\nconst KEY_IDS = {\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  HOME: 'Home',\n  END: 'End',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n};\n\n/** @enum {string} */\nconst MOVE_EVENT_MAP = {\n  'mousedown': 'mousemove',\n  'touchstart': 'touchmove',\n  'pointerdown': 'pointermove',\n};\n\nconst DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];\nconst UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];\n\n/**\n * @extends {MDCFoundation<!MDCSliderAdapter>}\n */\nclass MDCSliderFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCSliderAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSliderAdapter} */ ({\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getAttribute: (/* name: string */) => /* string|null */ null,\n      setAttribute: (/* name: string, value: string */) => {},\n      removeAttribute: (/* name: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ ({\n        top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0,\n      }),\n      getTabIndex: () => /* number */ 0,\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      notifyInput: () => {},\n      notifyChange: () => {},\n      setThumbContainerStyleProperty: (/* propertyName: string, value: string */) => {},\n      setTrackStyleProperty: (/* propertyName: string, value: string */) => {},\n      setMarkerValue: (/* value: number */) => {},\n      appendTrackMarkers: (/* numMarkers: number */) => {},\n      removeTrackMarkers: () => {},\n      setLastTrackMarkersStyleProperty: (/* propertyName: string, value: string */) => {},\n      isRTL: () => /* boolean */ false,\n    });\n  }\n\n  /**\n   * Creates a new instance of MDCSliderFoundation\n   * @param {?MDCSliderAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSliderFoundation.defaultAdapter, adapter));\n    /** @private {?ClientRect} */\n    this.rect_ = null;\n    // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'\n    // because those could be valid tabindices set by the client code.\n    this.savedTabIndex_ = NaN;\n    this.active_ = false;\n    this.inTransit_ = false;\n    this.isDiscrete_ = false;\n    this.hasTrackMarker_ = false;\n    this.handlingThumbTargetEvt_ = false;\n    this.min_ = 0;\n    this.max_ = 100;\n    this.step_ = 0;\n    this.value_ = 0;\n    this.disabled_ = false;\n    this.preventFocusState_ = false;\n    this.updateUIFrame_ = 0;\n    this.thumbContainerPointerHandler_ = () => {\n      this.handlingThumbTargetEvt_ = true;\n    };\n    this.interactionStartHandler_ = (evt) => this.handleDown_(evt);\n    this.keydownHandler_ = (evt) => this.handleKeydown_(evt);\n    this.focusHandler_ = () => this.handleFocus_();\n    this.blurHandler_ = () => this.handleBlur_();\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.isDiscrete_ = this.adapter_.hasClass(cssClasses.IS_DISCRETE);\n    this.hasTrackMarker_ = this.adapter_.hasClass(cssClasses.HAS_TRACK_MARKER);\n    DOWN_EVENTS.forEach((evtName) => this.adapter_.registerInteractionHandler(evtName, this.interactionStartHandler_));\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.registerThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.layout();\n    // At last step, provide a reasonable default value to discrete slider\n    if (this.isDiscrete_ && this.getStep() == 0) {\n      this.step_ = 1;\n    }\n  }\n\n  destroy() {\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterInteractionHandler(evtName, this.interactionStartHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  setupTrackMarker() {\n    if (this.isDiscrete_ && this.hasTrackMarker_&& this.getStep() != 0) {\n      const min = this.getMin();\n      const max = this.getMax();\n      const step = this.getStep();\n      let numMarkers = (max - min) / step;\n\n      // In case distance between max & min is indivisible to step,\n      // we place the secondary to last marker proportionally at where thumb\n      // could reach and place the last marker at max value\n      const indivisible = Math.ceil(numMarkers) !== numMarkers;\n      if (indivisible) {\n        numMarkers = Math.ceil(numMarkers);\n      }\n\n      this.adapter_.removeTrackMarkers();\n      this.adapter_.appendTrackMarkers(numMarkers);\n\n      if (indivisible) {\n        const lastStepRatio = (max - numMarkers * step) / step + 1;\n        const flex = getCorrectPropertyName(window, 'flex');\n        this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));\n      }\n    }\n  }\n\n  layout() {\n    this.rect_ = this.adapter_.computeBoundingRect();\n    this.updateUIForCurrentValue_();\n  }\n\n  /** @return {number} */\n  getValue() {\n    return this.value_;\n  }\n\n  /** @param {number} value */\n  setValue(value) {\n    this.setValue_(value, false);\n  }\n\n  /** @return {number} */\n  getMax() {\n    return this.max_;\n  }\n\n  /** @param {number} max */\n  setMax(max) {\n    if (max < this.min_) {\n      throw new Error('Cannot set max to be less than the slider\\'s minimum value');\n    }\n    this.max_ = max;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMAX, String(this.max_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getMin() {\n    return this.min_;\n  }\n\n  /** @param {number} min */\n  setMin(min) {\n    if (min > this.max_) {\n      throw new Error('Cannot set min to be greater than the slider\\'s maximum value');\n    }\n    this.min_ = min;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMIN, String(this.min_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getStep() {\n    return this.step_;\n  }\n\n  /** @param {number} step */\n  setStep(step) {\n    if (step < 0) {\n      throw new Error('Step cannot be set to a negative number');\n    }\n    if (this.isDiscrete_ && (typeof(step) !== 'number' || step < 1)) {\n      step = 1;\n    }\n    this.step_ = step;\n    this.setValue_(this.value_, false, true);\n    this.setupTrackMarker();\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.disabled_ = disabled;\n    this.toggleClass_(cssClasses.DISABLED, this.disabled_);\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setAttribute(strings.ARIA_DISABLED, 'true');\n      this.adapter_.removeAttribute('tabindex');\n    } else {\n      this.adapter_.removeAttribute(strings.ARIA_DISABLED);\n      if (!isNaN(this.savedTabIndex_)) {\n        this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));\n      }\n    }\n  }\n\n  /**\n   * Called when the user starts interacting with the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleDown_(evt) {\n    if (this.disabled_) {\n      return;\n    }\n\n    this.preventFocusState_ = true;\n    this.setInTransit_(!this.handlingThumbTargetEvt_);\n    this.handlingThumbTargetEvt_ = false;\n    this.setActive_(true);\n\n    const moveHandler = (evt) => {\n      this.handleMove_(evt);\n    };\n\n    // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers\n    // do not always fire these consistently in pairs.\n    // (See https://github.com/material-components/material-components-web/issues/1192)\n    const upHandler = () => {\n      this.handleUp_();\n      this.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n      UP_EVENTS.forEach((evtName) => this.adapter_.deregisterBodyInteractionHandler(evtName, upHandler));\n    };\n\n    this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n    UP_EVENTS.forEach((evtName) => this.adapter_.registerBodyInteractionHandler(evtName, upHandler));\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user moves the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleMove_(evt) {\n    evt.preventDefault();\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user's interaction with the slider ends\n   * @private\n   */\n  handleUp_() {\n    this.setActive_(false);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the pageX of the event\n   * @param {!Event} evt\n   * @return {number}\n   * @private\n   */\n  getPageX_(evt) {\n    if (evt.targetTouches && evt.targetTouches.length > 0) {\n      return evt.targetTouches[0].pageX;\n    }\n    return evt.pageX;\n  }\n\n  /**\n   * Sets the slider value from an event\n   * @param {!Event} evt\n   * @private\n   */\n  setValueFromEvt_(evt) {\n    const pageX = this.getPageX_(evt);\n    const value = this.computeValueFromPageX_(pageX);\n    this.setValue_(value, true);\n  }\n\n  /**\n   * Computes the new value from the pageX position\n   * @param {number} pageX\n   * @return {number}\n   */\n  computeValueFromPageX_(pageX) {\n    const {max_: max, min_: min} = this;\n    const xPos = pageX - this.rect_.left;\n    let pctComplete = xPos / this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      pctComplete = 1 - pctComplete;\n    }\n    // Fit the percentage complete between the range [min,max]\n    // by remapping from [0, 1] to [min, min+(max-min)].\n    return min + pctComplete * (max - min);\n  }\n\n  /**\n   * Handles keydown events\n   * @param {!Event} evt\n   */\n  handleKeydown_(evt) {\n    const keyId = this.getKeyId_(evt);\n    const value = this.getValueForKeyId_(keyId);\n    if (isNaN(value)) {\n      return;\n    }\n\n    // Prevent page from scrolling due to key presses that would normally scroll the page\n    evt.preventDefault();\n    this.adapter_.addClass(cssClasses.FOCUS);\n    this.setValue_(value, true);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the computed name of the event\n   * @param {!Event} kbdEvt\n   * @return {string}\n   */\n  getKeyId_(kbdEvt) {\n    if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {\n      return KEY_IDS.ARROW_LEFT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {\n      return KEY_IDS.ARROW_RIGHT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {\n      return KEY_IDS.ARROW_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {\n      return KEY_IDS.ARROW_DOWN;\n    }\n    if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {\n      return KEY_IDS.HOME;\n    }\n    if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {\n      return KEY_IDS.END;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {\n      return KEY_IDS.PAGE_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {\n      return KEY_IDS.PAGE_DOWN;\n    }\n\n    return '';\n  }\n\n  /**\n   * Computes the value given a keyboard key ID\n   * @param {string} keyId\n   * @return {number}\n   */\n  getValueForKeyId_(keyId) {\n    const {max_: max, min_: min, step_: step} = this;\n    let delta = step || (max - min) / 100;\n    const valueNeedsToBeFlipped = this.adapter_.isRTL() && (\n      keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT\n    );\n    if (valueNeedsToBeFlipped) {\n      delta = -delta;\n    }\n\n    switch (keyId) {\n    case KEY_IDS.ARROW_LEFT:\n    case KEY_IDS.ARROW_DOWN:\n      return this.value_ - delta;\n    case KEY_IDS.ARROW_RIGHT:\n    case KEY_IDS.ARROW_UP:\n      return this.value_ + delta;\n    case KEY_IDS.HOME:\n      return this.min_;\n    case KEY_IDS.END:\n      return this.max_;\n    case KEY_IDS.PAGE_UP:\n      return this.value_ + delta * numbers.PAGE_FACTOR;\n    case KEY_IDS.PAGE_DOWN:\n      return this.value_ - delta * numbers.PAGE_FACTOR;\n    default:\n      return NaN;\n    }\n  }\n\n  handleFocus_() {\n    if (this.preventFocusState_) {\n      return;\n    }\n    this.adapter_.addClass(cssClasses.FOCUS);\n  }\n\n  handleBlur_() {\n    this.preventFocusState_ = false;\n    this.adapter_.removeClass(cssClasses.FOCUS);\n  }\n\n  /**\n   * Sets the value of the slider\n   * @param {number} value\n   * @param {boolean} shouldFireInput\n   * @param {boolean=} force\n   */\n  setValue_(value, shouldFireInput, force = false) {\n    if (value === this.value_ && !force) {\n      return;\n    }\n\n    const {min_: min, max_: max} = this;\n    const valueSetToBoundary = value === min || value === max;\n    if (this.step_ && !valueSetToBoundary) {\n      value = this.quantize_(value);\n    }\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    this.value_ = value;\n    this.adapter_.setAttribute(strings.ARIA_VALUENOW, String(this.value_));\n    this.updateUIForCurrentValue_();\n\n    if (shouldFireInput) {\n      this.adapter_.notifyInput();\n      if (this.isDiscrete_) {\n        this.adapter_.setMarkerValue(value);\n      }\n    }\n  }\n\n  /**\n   * Calculates the quantized value\n   * @param {number} value\n   * @return {number}\n   */\n  quantize_(value) {\n    const numSteps = Math.round(value / this.step_);\n    const quantizedVal = numSteps * this.step_;\n    return quantizedVal;\n  }\n\n  updateUIForCurrentValue_() {\n    const {max_: max, min_: min, value_: value} = this;\n    const pctComplete = (value - min) / (max - min);\n    let translatePx = pctComplete * this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      translatePx = this.rect_.width - translatePx;\n    }\n\n    const transformProp = getCorrectPropertyName(window, 'transform');\n    const transitionendEvtName = getCorrectEventName(window, 'transitionend');\n\n    if (this.inTransit_) {\n      const onTransitionEnd = () => {\n        this.setInTransit_(false);\n        this.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n      };\n      this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n    }\n\n    this.updateUIFrame_ = requestAnimationFrame(() => {\n      // NOTE(traviskaufman): It would be nice to use calc() here,\n      // but IE cannot handle calcs in transforms correctly.\n      // See: https://goo.gl/NC2itk\n      // Also note that the -50% offset is used to center the slider thumb.\n      this.adapter_.setThumbContainerStyleProperty(transformProp, `translateX(${translatePx}px) translateX(-50%)`);\n      this.adapter_.setTrackStyleProperty(transformProp, `scaleX(${pctComplete})`);\n    });\n  }\n\n  /**\n   * Toggles the active state of the slider\n   * @param {boolean} active\n   */\n  setActive_(active) {\n    this.active_ = active;\n    this.toggleClass_(cssClasses.ACTIVE, this.active_);\n  }\n\n  /**\n   * Toggles the inTransit state of the slider\n   * @param {boolean} inTransit\n   */\n  setInTransit_(inTransit) {\n    this.inTransit_ = inTransit;\n    this.toggleClass_(cssClasses.IN_TRANSIT, this.inTransit_);\n  }\n\n  /**\n   * Conditionally adds or removes a class based on shouldBePresent\n   * @param {string} className\n   * @param {boolean} shouldBePresent\n   */\n  toggleClass_(className, shouldBePresent) {\n    if (shouldBePresent) {\n      this.adapter_.addClass(className);\n    } else {\n      this.adapter_.removeClass(className);\n    }\n  }\n}\n\nexport default MDCSliderFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Adapter for MDC Slider.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Slider into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSliderAdapter {\n  /**\n   * Returns true if className exists for the slider Element\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the slider Element\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the slider Element\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns a string if attribute name exists on the slider Element,\n   * otherwise returns null\n   * @param {string} name\n   * @return {?string}\n   */\n  getAttribute(name) {}\n\n  /**\n   * Sets attribute name on slider Element to value\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttribute(name, value) {}\n\n  /**\n   * Removes attribute name from slider Element\n   * @param {string} name\n   */\n  removeAttribute(name) {}\n\n  /**\n   * Returns the bounding client rect for the slider Element\n   * @return {?ClientRect}\n   */\n  computeBoundingRect() {}\n\n  /**\n   * Returns the tab index of the slider Element\n   * @return {number}\n   */\n  getTabIndex() {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * Deregisters an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * Emits a custom event MDCSlider:input from the root\n   */\n  notifyInput() {}\n\n  /**\n   * Emits a custom event MDCSlider:change from the root\n   */\n  notifyChange() {}\n\n  /**\n   * Sets a style property of the thumb container element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setThumbContainerStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets a style property of the track element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setTrackStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets the inner text of the pin marker to the passed value\n   * @param {number} value\n   */\n  setMarkerValue(value) {}\n\n  /**\n   * Appends the passed number of track markers to the track mark container element\n   * @param {number} numMarkers\n   */\n  appendTrackMarkers(numMarkers) {}\n\n  /**\n   * Removes all track markers fromt he track mark container element\n   */\n  removeTrackMarkers() {}\n\n  /**\n   * Sets a style property of the last track marker to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setLastTrackMarkersStyleProperty(propertyName, value) {}\n\n  /**\n   * Returns true if the root element is RTL, otherwise false\n   * @return {boolean}\n   */\n  isRTL() {}\n}\n\nexport default MDCSliderAdapter;\n","import {BasePlugin} from '../base'\nimport mdcSlider from './mdc-slider.vue'\n\nexport {\n  mdcSlider\n}\n\nexport default BasePlugin({\n  mdcSlider\n})\n","<template>\n  <div class=\"mdc-slider\" :class=\"classes\" tabindex=\"0\" role=\"slider\">\n    <div class=\"mdc-slider__track-container\">\n      <div class=\"mdc-slider__track\" :style=\"trackStyles\"></div>\n      <div class=\"mdc-slider__track-marker-container\" v-if=\"hasMarkers\">\n        <div class=\"mdc-slider__track-marker\"\n          v-for=\"markerNum in numMarkers\"\n          :key=\"markerNum\"\n          :style=\"(markerNum == numMarkers) ? lastTrackMarkersStyles : {}\"\n          ></div>\n      </div>\n    </div>\n    <div ref=\"thumbContainer\" :style=\"thumbStyles\" class=\"mdc-slider__thumb-container\">\n      <div class=\"mdc-slider__pin\" v-if=\"isDiscrete\">\n        <span class=\"mdc-slider__pin-value-marker\">{{markerValue}}</span>\n      </div>\n      <svg class=\"mdc-slider__thumb\" width=\"21\" height=\"21\">\n        <circle cx=\"10.5\" cy=\"10.5\" r=\"7.875\"></circle>\n      </svg>\n      <div class=\"mdc-slider__focus-ring\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSliderFoundation from '@material/slider/foundation';\nimport { DispatchFocusMixin } from '../base';\nimport { eventBus } from '../common';\n\nexport default {\n  name: 'mdc-slider',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: {\n    value: [Number, String],\n    min: { type: [Number, String], default: 0 },\n    max: { type: [Number, String], default: 100 },\n    step: { type: [Number, String], default: 0 },\n    displayMarkers: Boolean,\n    disabled: Boolean,\n    layoutOn: String,\n    layoutOnSource: { type: Object, required: false },\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-slider--discrete': !!this.step,\n        'mdc-slider--display-markers': this.displayMarkers,\n      },\n      trackStyles: {},\n      lastTrackMarkersStyles: {},\n      thumbStyles: {},\n      markerValue: '',\n      numMarkers: 0,\n    };\n  },\n  computed: {\n    isDiscrete() {\n      return !!this.step;\n    },\n    hasMarkers() {\n      return !!this.step && this.displayMarkers && this.numMarkers;\n    },\n  },\n  watch: {\n    value() {\n      if (this.foundation.getValue() !== Number(this.value)) {\n        this.foundation.setValue(this.value);\n      }\n    },\n    min() {\n      this.foundation.setMin(Number(this.min));\n    },\n    max() {\n      this.foundation.setMax(Number(this.max));\n    },\n    step() {\n      this.foundation.setStep(Number(this.step));\n    },\n    disabled() {\n      this.foundation.setDisabled(this.disabled);\n    },\n  },\n  methods: {\n    layout() {\n      this.$nextTick(() => {\n        this.foundation && this.foundation.layout();\n      });\n    },\n  },\n  mounted() {\n    this.foundation = new MDCSliderFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      addClass: className => {\n        this.$set(this.classes, className, true);\n      },\n      removeClass: className => {\n        this.$delete(this.classes, className, true);\n      },\n      getAttribute: name => this.$el.getAttribute(name),\n      setAttribute: (name, value) => this.$el.setAttribute(name, value),\n      removeAttribute: name => this.$el.removeAttribute(name),\n      computeBoundingRect: () => this.$el.getBoundingClientRect(),\n      getTabIndex: () => this.$el.tabIndex,\n      registerInteractionHandler: (type, handler) => {\n        this.$el.addEventListener(type, handler);\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$el.removeEventListener(type, handler);\n      },\n      registerThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.addEventListener(type, handler);\n      },\n      deregisterThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.removeEventListener(type, handler);\n      },\n      registerBodyInteractionHandler: (type, handler) => {\n        document.body.addEventListener(type, handler);\n      },\n      deregisterBodyInteractionHandler: (type, handler) => {\n        document.body.removeEventListener(type, handler);\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler);\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler);\n      },\n      notifyInput: () => {\n        this.$emit('input', this.foundation.getValue());\n      },\n      notifyChange: () => {\n        this.$emit('change', this.foundation.getValue());\n      },\n      setThumbContainerStyleProperty: (propertyName, value) => {\n        this.$set(this.thumbStyles, propertyName, value);\n      },\n      setTrackStyleProperty: (propertyName, value) => {\n        this.$set(this.trackStyles, propertyName, value);\n      },\n      setMarkerValue: value => {\n        this.markerValue = value;\n      },\n      appendTrackMarkers: numMarkers => {\n        this.numMarkers = numMarkers;\n      },\n      removeTrackMarkers: () => {\n        this.numMarkers = 0;\n      },\n      setLastTrackMarkersStyleProperty: (propertyName, value) => {\n        this.$set(this.lastTrackMarkersStyles, propertyName, value);\n      },\n      isRTL: () => false,\n    });\n\n    this.foundation.init();\n    this.foundation.setDisabled(this.disabled);\n    if (Number(this.min) <= this.foundation.getMax()) {\n      this.foundation.setMin(Number(this.min));\n      this.foundation.setMax(Number(this.max));\n    } else {\n      this.foundation.setMax(Number(this.max));\n      this.foundation.setMin(Number(this.min));\n    }\n    this.foundation.setStep(Number(this.step));\n    this.foundation.setValue(Number(this.value));\n    if (this.hasMarkers) {\n      this.foundation.setupTrackMarker();\n    }\n\n    eventBus.$on('mdc:layout', this.layout);\n\n    if (this.layoutOn) {\n      this.layoutOnEventSource = this.layoutOnSource || this.$root;\n      this.layoutOnEventSource.$on(this.layoutOn, this.layout);\n    }\n  },\n  beforeDestroy() {\n    eventBus.$off('mdc:layout', this.layout);\n    if (this.layoutOnEventSource) {\n      this.layoutOnEventSource.$off(this.layoutOn, this.layout);\n    }\n    this.foundation.destroy();\n  },\n};\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  ROOT: 'mdc-snackbar',\n  TEXT: 'mdc-snackbar__text',\n  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',\n  ACTION_BUTTON: 'mdc-snackbar__action-button',\n  ACTIVE: 'mdc-snackbar--active',\n  MULTILINE: 'mdc-snackbar--multiline',\n  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom',\n};\n\nexport const strings = {\n  TEXT_SELECTOR: '.mdc-snackbar__text',\n  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',\n  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',\n  SHOW_EVENT: 'MDCSnackbar:show',\n  HIDE_EVENT: 'MDCSnackbar:hide',\n};\n\nexport const numbers = {\n  MESSAGE_TIMEOUT: 2750,\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setAriaHidden: () => {},\n      unsetAriaHidden: () => {},\n      setActionAriaHidden: () => {},\n      unsetActionAriaHidden: () => {},\n      setActionText: (/* actionText: string */) => {},\n      setMessageText: (/* message: string */) => {},\n      setFocus: () => {},\n      visibilityIsHidden: () => /* boolean */ false,\n      registerCapturedBlurHandler: (/* handler: EventListener */) => {},\n      deregisterCapturedBlurHandler: (/* handler: EventListener */) => {},\n      registerVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      deregisterVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      registerCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerActionClickHandler: (/* handler: EventListener */) => {},\n      deregisterActionClickHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyShow: () => {},\n      notifyHide: () => {},\n    };\n  }\n\n  get active() {\n    return this.active_;\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    this.active_ = false;\n    this.actionWasClicked_ = false;\n    this.dismissOnAction_ = true;\n    this.firstFocus_ = true;\n    this.pointerDownRecognized_ = false;\n    this.snackbarHasFocus_ = false;\n    this.snackbarData_ = null;\n    this.queue_ = [];\n    this.actionClickHandler_ = () => {\n      this.actionWasClicked_ = true;\n      this.invokeAction_();\n    };\n    this.visibilitychangeHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = true;\n\n      if (!this.adapter_.visibilityIsHidden()) {\n        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n      }\n    };\n    this.interactionHandler_ = (evt) => {\n      if (evt.type == 'touchstart' || evt.type == 'mousedown') {\n        this.pointerDownRecognized_ = true;\n      }\n      this.handlePossibleTabKeyboardFocus_(evt);\n\n      if (evt.type == 'focus') {\n        this.pointerDownRecognized_ = false;\n      }\n    };\n    this.blurHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = false;\n      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n    };\n  }\n\n  init() {\n    this.adapter_.registerActionClickHandler(this.actionClickHandler_);\n    this.adapter_.setAriaHidden();\n    this.adapter_.setActionAriaHidden();\n  }\n\n  destroy() {\n    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);\n    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);\n    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  dismissesOnAction() {\n    return this.dismissOnAction_;\n  }\n\n  setDismissOnAction(dismissOnAction) {\n    this.dismissOnAction_ = !!dismissOnAction;\n  }\n\n  show(data) {\n    if (!data) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (!data.message) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data.actionHandler && !data.actionText) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queue_.push(data);\n      return;\n    }\n    clearTimeout(this.timeoutId_);\n    this.snackbarData_ = data;\n    this.firstFocus_ = true;\n    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);\n    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n\n    const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n    this.adapter_.setMessageText(this.snackbarData_.message);\n\n    if (this.snackbarData_.multiline) {\n      this.adapter_.addClass(MULTILINE);\n      if (this.snackbarData_.actionOnBottom) {\n        this.adapter_.addClass(ACTION_ON_BOTTOM);\n      }\n    }\n\n    if (this.snackbarData_.actionHandler) {\n      this.adapter_.setActionText(this.snackbarData_.actionText);\n      this.actionHandler_ = this.snackbarData_.actionHandler;\n      this.setActionHidden_(false);\n    } else {\n      this.setActionHidden_(true);\n      this.actionHandler_ = null;\n      this.adapter_.setActionText(null);\n    }\n\n    this.active_ = true;\n    this.adapter_.addClass(ACTIVE);\n    this.adapter_.unsetAriaHidden();\n    this.adapter_.notifyShow();\n\n    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n  }\n\n  handlePossibleTabKeyboardFocus_() {\n    const hijackFocus =\n      this.firstFocus_ && !this.pointerDownRecognized_;\n\n    if (hijackFocus) {\n      this.setFocusOnAction_();\n    }\n\n    this.firstFocus_ = false;\n  }\n\n  setFocusOnAction_() {\n    this.adapter_.setFocus();\n    this.snackbarHasFocus_ = true;\n    this.firstFocus_ = false;\n  }\n\n  invokeAction_() {\n    try {\n      if (!this.actionHandler_) {\n        return;\n      }\n\n      this.actionHandler_();\n    } finally {\n      if (this.dismissOnAction_) {\n        this.cleanup_();\n      }\n    }\n  }\n\n  cleanup_() {\n    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;\n\n    if (allowDismissal) {\n      const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n      this.adapter_.removeClass(ACTIVE);\n\n      const handler = () => {\n        clearTimeout(this.timeoutId_);\n        this.adapter_.deregisterTransitionEndHandler(handler);\n        this.adapter_.removeClass(MULTILINE);\n        this.adapter_.removeClass(ACTION_ON_BOTTOM);\n        this.setActionHidden_(true);\n        this.adapter_.setAriaHidden();\n        this.active_ = false;\n        this.snackbarHasFocus_ = false;\n        this.adapter_.notifyHide();\n        this.showNext_();\n      };\n\n      this.adapter_.registerTransitionEndHandler(handler);\n    }\n  }\n\n  showNext_() {\n    if (!this.queue_.length) {\n      return;\n    }\n    this.show(this.queue_.shift());\n  }\n\n  setActionHidden_(isHidden) {\n    if (isHidden) {\n      this.adapter_.setActionAriaHidden();\n    } else {\n      this.adapter_.unsetActionAriaHidden();\n    }\n  }\n}\n","import {BasePlugin} from '../base'\nimport mdcSnackbar from './mdc-snackbar.vue'\n\nexport {\n  mdcSnackbar\n}\n\nexport default BasePlugin({\n  mdcSnackbar\n})\n","<template>\n<div ref=\"root\" class=\"mdc-snackbar\" :class=\"classes\"\n    aria-live=\"assertive\" aria-atomic=\"true\" :aria-hidden=\"hidden\">\n  <div class=\"mdc-snackbar__text\">{{message}}</div>\n  <div class=\"mdc-snackbar__action-wrapper\">\n    <button ref=\"button\" type=\"button\"\n        class=\"mdc-snackbar__action-button\"\n        :aria-hidden=\"actionHidden\">{{actionText}}</button>\n  </div>\n</div>\n</template>\n\n<script>\nimport MDCSnackbarFoundation from '@material/snackbar/foundation';\nimport { getCorrectEventName } from '@material/animation';\n\nexport default {\n  name: 'mdc-snackbar',\n  props: {\n    'align-start': Boolean,\n    event: {\n      type: String,\n      required: false,\n      default() {\n        return 'show-snackbar';\n      },\n    },\n    'event-source': {\n      type: Object,\n      required: false,\n      default() {\n        return this.$root;\n      },\n    },\n    'dismisses-on-action': { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-snackbar--align-start': this.alignStart,\n      },\n      message: '',\n      actionText: '',\n      hidden: false,\n      actionHidden: false,\n    };\n  },\n  methods: {\n    show(data) {\n      this.foundation.show(data);\n    },\n  },\n  mounted() {\n    this.foundation = new MDCSnackbarFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setAriaHidden: () => (this.hidden = true),\n      unsetAriaHidden: () => (this.hidden = false),\n      setActionAriaHidden: () => (this.actionHidden = true),\n      unsetActionAriaHidden: () => (this.actionHidden = false),\n      setActionText: text => {\n        this.actionText = text;\n      },\n      setMessageText: text => {\n        this.message = text;\n      },\n      setFocus: () => this.$refs.button.focus(),\n      visibilityIsHidden: () => document.hidden,\n      registerCapturedBlurHandler: handler =>\n        this.$refs.button.addEventListener('blur', handler, true),\n      deregisterCapturedBlurHandler: handler =>\n        this.$refs.button.removeEventListener('blur', handler, true),\n      registerVisibilityChangeHandler: handler =>\n        document.addEventListener('visibilitychange', handler),\n      deregisterVisibilityChangeHandler: handler =>\n        document.removeEventListener('visibilitychange', handler),\n      registerCapturedInteractionHandler: (evt, handler) =>\n        document.body.addEventListener(evt, handler, true),\n      deregisterCapturedInteractionHandler: (evt, handler) =>\n        document.body.removeEventListener(evt, handler, true),\n      registerActionClickHandler: handler =>\n        this.$refs.button.addEventListener('click', handler),\n      deregisterActionClickHandler: handler =>\n        this.$refs.button.removeEventListener('click', handler),\n      registerTransitionEndHandler: handler => {\n        this.$refs.root.addEventListener(\n          getCorrectEventName(window, 'transitionend'),\n          handler,\n        );\n      },\n      deregisterTransitionEndHandler: handler => {\n        this.$refs.root.removeEventListener(\n          getCorrectEventName(window, 'transitionend'),\n          handler,\n        );\n      },\n      notifyShow: () => this.$emit('show'),\n      notifyHide: () => this.$emit('hide'),\n    });\n    this.foundation.init();\n    if (this.event) {\n      this.eventSource.$on(this.event, this.show);\n    }\n    this.foundation.setDismissOnAction(this.dismissesOnAction);\n  },\n  beforeDestroy() {\n    if (this.eventSource) {\n      this.eventSource.$off(this.event, this.show);\n    }\n    this.foundation.destroy();\n  },\n};\n</script>\n","import {BasePlugin} from '../base'\nimport mdcSwitch from './mdc-switch.vue'\n\nexport {\n  mdcSwitch\n}\n\nexport default BasePlugin({\n  mdcSwitch\n})\n","<template>\n  <div class=\"mdc-switch-wrapper\" \n    :class=\"{\n        'mdc-form-field': this.hasLabel,\n        'mdc-form-field--align-end': this.hasLabel && this.alignEnd\n      }\" >\n\n    <div class=\"mdc-switch\" \n      :class=\"{'mdc-switch--disabled': disabled }\">\n      <input ref=\"control\" type=\"checkbox\" \n        :name=\"name\" :id=\"vma_uid_\" \n        class=\"mdc-switch__native-control\" \n        :checked=\"checked\" \n        :disabled=\"disabled\"\n        @change=\"onChanged\" />\n\n      <div class=\"mdc-switch__background\">\n        <div class=\"mdc-switch__knob\"></div>\n      </div>\n\n    </div>\n\n    <label :for=\"vma_uid_\" v-if=\"hasLabel\"\n      class=\"mdc-switch-label\">\n      <slot>{{label}}</slot>\n    </label>\n\n  </div>\n</template>\n\n<script>\nimport {DispatchFocusMixin} from '../base'\n\nexport default {\n  name: 'mdc-switch',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    'checked': Boolean,\n    'label': String,\n    'alignEnd': Boolean,\n    'disabled': Boolean,\n    'value': { type: String, default () { return 'on' } },\n    'name': String\n  },\n  computed: {\n    hasLabel () {\n      return this.label || this.$slots.default\n    }\n  },\n  methods: {\n    onChanged (event) {\n      this.$emit('change', event.target.checked)\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\nexport const strings = {\n  SELECTED_EVENT: 'MDCTab:selected',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      getOffsetLeft: () => /* number */ 0,\n      notifySelected: () => {},\n    };\n  }\n\n  constructor(adapter = {}) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.isActive_ = false;\n    this.preventDefaultOnClick_ = false;\n\n    this.clickHandler_ = (evt) => {\n      if (this.preventDefaultOnClick_) {\n        evt.preventDefault();\n      }\n      this.adapter_.notifySelected();\n    };\n\n    this.keydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Enter' || evt.keyCode === 13) {\n        this.adapter_.notifySelected();\n      }\n    };\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  getComputedWidth() {\n    return this.computedWidth_;\n  }\n\n  getComputedLeft() {\n    return this.computedLeft_;\n  }\n\n  isActive() {\n    return this.isActive_;\n  }\n\n  setActive(isActive) {\n    this.isActive_ = isActive;\n    if (this.isActive_) {\n      this.adapter_.addClass(cssClasses.ACTIVE);\n    } else {\n      this.adapter_.removeClass(cssClasses.ACTIVE);\n    }\n  }\n\n  preventsDefaultOnClick() {\n    return this.preventDefaultOnClick_;\n  }\n\n  setPreventDefaultOnClick(preventDefaultOnClick) {\n    this.preventDefaultOnClick_ = preventDefaultOnClick;\n  }\n\n  measureSelf() {\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.computedLeft_ = this.adapter_.getOffsetLeft();\n  }\n}\n","<template>\r\n  <custom-link class=\"mdc-tab\"\r\n    :class=\"classes\" :style=\"styles\"\r\n    :link=\"link\"\r\n    v-on=\"listeners\">\r\n\r\n    <i ref=\"icon\" v-if=\"!!hasIcon\"\r\n      tabindex=\"0\"\r\n      class=\"mdc-tab__icon\"\r\n      :class=\"hasIcon.classes\">\r\n      <slot name=\"icon\">{{ hasIcon.content }}</slot>\r\n    </i>\r\n\r\n    <span :class=\"{'mdc-tab__icon-text': !!hasIcon}\" v-if=\"hasText\">\r\n      <slot></slot>\r\n    </span>\r\n\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport MDCTabFoundation from '@material/tabs/tab/foundation';\r\nimport {\r\n  CustomLinkMixin,\r\n  DispatchEventMixin,\r\n  emitCustomEvent,\r\n  extractIconProp,\r\n} from '../base';\r\nimport { RippleBase } from '../ripple';\r\n\r\nexport default {\r\n  name: 'mdc-tab',\r\n  mixins: [CustomLinkMixin, DispatchEventMixin],\r\n  props: {\r\n    active: Boolean,\r\n    icon: [String, Array, Object],\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {},\r\n    };\r\n  },\r\n  computed: {\r\n    hasIcon() {\r\n      if (this.icon || this.$slots.icon) {\r\n        return this.icon ? extractIconProp(this.icon) : {};\r\n      }\r\n      return false;\r\n    },\r\n    hasText() {\r\n      return !!this.$slots.default;\r\n    },\r\n  },\r\n  methods: {\r\n    getComputedWidth() {\r\n      return this.foundation.getComputedWidth();\r\n    },\r\n    getComputedLeft() {\r\n      return this.foundation.getComputedLeft();\r\n    },\r\n    isActive() {\r\n      return this.foundation.isActive();\r\n    },\r\n    setActive(isActive) {\r\n      this.foundation.setActive(isActive);\r\n    },\r\n    isDefaultPreventedOnClick() {\r\n      return this.foundation.preventsDefaultOnClick();\r\n    },\r\n    setPreventDefaultOnClick(preventDefaultOnClick) {\r\n      this.foundation.setPreventDefaultOnClick(preventDefaultOnClick);\r\n    },\r\n    measureSelf() {\r\n      this.foundation.measureSelf();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCTabFoundation({\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      registerInteractionHandler: (type, handler) =>\r\n        this.$el.addEventListener(type, handler),\r\n      deregisterInteractionHandler: (type, handler) =>\r\n        this.$el.removeEventListener(type, handler),\r\n      getOffsetWidth: () => {\r\n        return this.$el.offsetWidth;\r\n      },\r\n      getOffsetLeft: () => this.$el.offsetLeft,\r\n      notifySelected: () => {\r\n        emitCustomEvent(\r\n          this.$el,\r\n          MDCTabFoundation.strings.SELECTED_EVENT,\r\n          { tab: this },\r\n          true,\r\n        );\r\n      },\r\n    });\r\n    this.foundation.init();\r\n    this.setActive(this.active);\r\n    this.ripple = new RippleBase(this);\r\n    this.ripple.init();\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation.destroy();\r\n    this.ripple.destroy();\r\n  },\r\n};\r\n</script>\r\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  UPGRADED: 'mdc-tab-bar-upgraded',\n};\n\nexport const strings = {\n  TAB_SELECTOR: '.mdc-tab',\n  INDICATOR_SELECTOR: '.mdc-tab-bar__indicator',\n  CHANGE_EVENT: 'MDCTabBar:change',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {getCorrectPropertyName} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabBarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      bindOnMDCTabSelectedEvent: () => {},\n      unbindOnMDCTabSelectedEvent: () => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      setStyleForIndicator: (/* propertyName: string, value: string */) => {},\n      getOffsetWidthForIndicator: () => /* number */ 0,\n      notifyChange: (/* evtData: {activeTabIndex: number} */) => {},\n      getNumberOfTabs: () => /* number */ 0,\n      isTabActiveAtIndex: (/* index: number */) => /* boolean */ false,\n      setTabActiveAtIndex: (/* index: number, isActive: true */) => {},\n      isDefaultPreventedOnClickForTabAtIndex: (/* index: number */) => /* boolean */ false,\n      setPreventDefaultOnClickForTabAtIndex: (/* index: number, preventDefaultOnClick: boolean */) => {},\n      measureTabAtIndex: (/* index: number */) => {},\n      getComputedWidthForTabAtIndex: (/* index: number */) => /* number */ 0,\n      getComputedLeftForTabAtIndex: (/* index: number */) => /* number */ 0,\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    this.isIndicatorShown_ = false;\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.activeTabIndex_ = 0;\n    this.layoutFrame_ = 0;\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.bindOnMDCTabSelectedEvent();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    const activeTabIndex = this.findActiveTabIndex_();\n    if (activeTabIndex >= 0) {\n      this.activeTabIndex_ = activeTabIndex;\n    }\n    this.layout();\n  }\n\n  destroy() {\n    this.adapter_.removeClass(cssClasses.UPGRADED);\n    this.adapter_.unbindOnMDCTabSelectedEvent();\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  layoutInternal_() {\n    this.forEachTabIndex_((index) => this.adapter_.measureTabAtIndex(index));\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.layoutIndicator_();\n  }\n\n  layoutIndicator_() {\n    const isIndicatorFirstRender = !this.isIndicatorShown_;\n\n    // Ensure that indicator appears in the right position immediately for correct first render.\n    if (isIndicatorFirstRender) {\n      this.adapter_.setStyleForIndicator('transition', 'none');\n    }\n\n    const translateAmtForActiveTabLeft = this.adapter_.getComputedLeftForTabAtIndex(this.activeTabIndex_);\n    const scaleAmtForActiveTabWidth =\n      this.adapter_.getComputedWidthForTabAtIndex(this.activeTabIndex_) / this.adapter_.getOffsetWidth();\n\n    const transformValue = `translateX(${translateAmtForActiveTabLeft}px) scale(${scaleAmtForActiveTabWidth}, 1)`;\n    this.adapter_.setStyleForIndicator(getCorrectPropertyName(window, 'transform'), transformValue);\n\n    if (isIndicatorFirstRender) {\n      // Force layout so that transform styles to take effect.\n      this.adapter_.getOffsetWidthForIndicator();\n      this.adapter_.setStyleForIndicator('transition', '');\n      this.adapter_.setStyleForIndicator('visibility', 'visible');\n      this.isIndicatorShown_ = true;\n    }\n  }\n\n  findActiveTabIndex_() {\n    let activeTabIndex = -1;\n    this.forEachTabIndex_((index) => {\n      if (this.adapter_.isTabActiveAtIndex(index)) {\n        activeTabIndex = index;\n        return true;\n      }\n    });\n    return activeTabIndex;\n  }\n\n  forEachTabIndex_(iterator) {\n    const numTabs = this.adapter_.getNumberOfTabs();\n    for (let index = 0; index < numTabs; index++) {\n      const shouldBreak = iterator(index);\n      if (shouldBreak) {\n        break;\n      }\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  switchToTabAtIndex(index, shouldNotify) {\n    if (index === this.activeTabIndex_) {\n      return;\n    }\n\n    if (index < 0 || index >= this.adapter_.getNumberOfTabs()) {\n      throw new Error(`Out of bounds index specified for tab: ${index}`);\n    }\n\n    const prevActiveTabIndex = this.activeTabIndex_;\n    this.activeTabIndex_ = index;\n    requestAnimationFrame(() => {\n      if (prevActiveTabIndex >= 0) {\n        this.adapter_.setTabActiveAtIndex(prevActiveTabIndex, false);\n      }\n      this.adapter_.setTabActiveAtIndex(this.activeTabIndex_, true);\n      this.layoutIndicator_();\n      if (shouldNotify) {\n        this.adapter_.notifyChange({activeTabIndex: this.activeTabIndex_});\n      }\n    });\n  }\n\n  getActiveTabIndex() {\n    return this.findActiveTabIndex_();\n  }\n}\n","import {BasePlugin} from '../base'\nimport mdcTab from './mdc-tab.vue'\nimport mdcTabBar from './mdc-tab-bar.vue'\n\nexport { \n  mdcTab, \n  mdcTabBar \n}\n\nexport default BasePlugin({\n  mdcTab, \n  mdcTabBar \n})\n","<template>\n  <nav class=\"mdc-tab-bar\" :class=\"classes\" v-on=\"$listeners\">\n    <slot></slot>\n    <span ref=\"indicator\" class=\"mdc-tab-bar__indicator\"\n      :style=\"indicatorStyles\"></span>\n  </nav>\n</template>\n\n<script>\nimport MDCTabBarFoundation from '@material/tabs/tab-bar/foundation';\nimport MDCTabFoundation from '@material/tabs/tab/foundation';\n\nexport default {\n  name: 'mdc-tab-bar',\n  props: {\n    'indicator-primary': Boolean,\n    'indicator-accent': Boolean,\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-tab-bar--indicator-primary': this.indicatorPrimary,\n        'mdc-tab-bar--indicator-accent': this.indicatorAccent,\n      },\n      indicatorStyles: {},\n      tabs: [],\n    };\n  },\n  methods: {\n    onSelect({ detail }) {\n      const { tab } = detail;\n      const index = this.tabs.indexOf(tab);\n      if (index < 0) {\n        throw new Error('mdc-tab-bar internal error: index not found');\n      }\n      this.foundation.switchToTabAtIndex(index, true);\n    },\n  },\n  mounted() {\n    this.foundation = new MDCTabBarFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      bindOnMDCTabSelectedEvent: () => {\n        this.$el.addEventListener(\n          MDCTabFoundation.strings.SELECTED_EVENT,\n          this.onSelect,\n        );\n      },\n      unbindOnMDCTabSelectedEvent: () =>\n        this.$el.removeEventListener(\n          MDCTabFoundation.strings.SELECTED_EVENT,\n          this.onSelect,\n        ),\n      registerResizeHandler: handler =>\n        window.addEventListener('resize', handler),\n      deregisterResizeHandler: handler =>\n        window.removeEventListener('resize', handler),\n      getOffsetWidth: () => this.$el.offsetWidth,\n      setStyleForIndicator: (propertyName, value) =>\n        this.$set(this.indicatorStyles, propertyName, value),\n      getOffsetWidthForIndicator: () => this.$refs.indicator.offsetWidth,\n      notifyChange: evtData => {\n        this.$emit('change', evtData.activeTabIndex);\n      },\n      getNumberOfTabs: () => this.tabs.length,\n      isTabActiveAtIndex: index => this.tabs[index].isActive(),\n      setTabActiveAtIndex: (index, isActive) => {\n        // pgbr: 2018-04-07\n        // since it is possible to change the number of tabs programatically\n        // we need to detect the foundation deactivating a tab\n        // that no longer exists but was previously active.\n        if (!isActive && index >= this.tabs.length) {\n          return;\n        }\n        this.tabs[index].setActive(isActive);\n      },\n      isDefaultPreventedOnClickForTabAtIndex: index =>\n        this.tabs[index].isDefaultPreventedOnClick(),\n      setPreventDefaultOnClickForTabAtIndex: (index, preventDefaultOnClick) => {\n        this.tabs[index].setPreventDefaultOnClick(preventDefaultOnClick);\n      },\n      measureTabAtIndex: index => this.tabs[index].measureSelf(),\n      getComputedWidthForTabAtIndex: index =>\n        this.tabs[index].getComputedWidth(),\n      getComputedLeftForTabAtIndex: index => this.tabs[index].getComputedLeft(),\n    });\n\n    const resetTabs = () => {\n      const tabElements = [].slice.call(\n        this.$el.querySelectorAll(MDCTabBarFoundation.strings.TAB_SELECTOR),\n      );\n      this.tabs = tabElements.map(el => el.__vue__);\n\n      let hasText, hasIcon;\n      const tabs = this.tabs;\n      for (let tab of tabs) {\n        if (tab.hasText) {\n          hasText = true;\n          break;\n        }\n      }\n      for (let tab of tabs) {\n        if (tab.hasIcon) {\n          hasIcon = true;\n          break;\n        }\n      }\n\n      if (hasText && hasIcon) {\n        this.$set(this.classes, 'mdc-tab-bar--icons-with-text', true);\n      } else if (hasIcon) {\n        this.$set(this.classes, 'mdc-tab-bar--icon-tab-bar', true);\n      }\n\n      if (this.foundation) {\n        const activeTabIndex = this.foundation.getActiveTabIndex();\n        if (activeTabIndex >= 0) {\n          this.foundation.switchToTabAtIndex(activeTabIndex, true);\n        } else {\n          this.foundation.switchToTabAtIndex(0, true);\n        }\n        this.foundation.layout();\n      }\n    };\n\n    resetTabs();\n\n    this.slotObserver = new MutationObserver(() => resetTabs());\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true });\n\n    this.foundation.init();\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect();\n    this.foundation.destroy();\n  },\n};\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      setAttr: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {boolean} disabled\n   */\n  setDisabled(disabled) {\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n    } else {\n      this.adapter_.setAttr('tabindex', '0');\n    }\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Registers a validation attribute change listener on the input element.\n   * @param {function(!Array): undefined} handler\n   * @return {!MutationObserver}\n   */\n  registerValidationAttributeChangeHandler(handler) {}\n\n  /**\n   * Disconnects a validation attribute observer on the input element.\n   * @param {!MutationObserver} observer\n   */\n  deregisterValidationAttributeChangeHandler(observer) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n\n  /**\n   * Only implement if label exists.\n   * Shakes label if shouldShake is true.\n   * @param {boolean} shouldShake\n   */\n  shakeLabel(shouldShake) {}\n\n  /**\n   * Only implement if label exists.\n   * Floats the label above the input element if shouldFloat is true.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Only implement if label exists.\n   * Returns width of label in pixels.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * Updates SVG Path and outline element based on the\n   * label element width and RTL context.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  notchOutline(labelWidth, isRtl) {}\n\n  /**\n   * Only implement if outline element exists.\n   * Closes notch in outline element.\n   */\n  closeOutline() {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {!number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  BOTTOM_LINE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\n/* eslint-disable no-unused-vars */\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation';\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return !this.isBadInput_() && (!!this.getValue() || this.isFocused_);\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (mutations) => this.handleValidationAttributeMutation_(mutations);\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.adapter_.hasLabel() && this.getValue()) {\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(\n      this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {Array<MutationRecord>} mutationsList\n   * @private\n   */\n  handleValidationAttributeMutation_(mutationsList) {\n    mutationsList.some((mutation) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(mutation.attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    this.notchOutline(this.shouldFloat);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","import {BasePlugin} from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport {mdcTextField}\n\nexport default BasePlugin({\n  mdcTextField\n})\n","<template>\r\n  <div class=\"mdc-textfield-wrapper\" :style=\"{width:fullwidth?'100%':undefined}\">\r\n\r\n    <div ref=\"root\" :class=\"rootClasses\">\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasLeadingIcon\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-text-field__icon\"\r\n        :class=\"hasLeadingIcon.classes\">\r\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <textarea ref=\"input\" v-if=\"multiline\"\r\n        v-on=\"$listeners\"\r\n        v-bind=\"$attrs\"\r\n        :id=\"vma_uid_\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        :rows=\"rows\" :cols=\"cols\"\r\n        ></textarea>\r\n\r\n      <input ref=\"input\" v-else\r\n        v-on=\"$listeners\"\r\n        v-bind=\"$attrs\"\r\n        :id=\"vma_uid_\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :type=\"type\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        />\r\n\r\n      <label ref=\"label\" :class=\"labelClassesUpgraded\" :for=\"vma_uid_\"  v-if=\"hasLabel\">\r\n        {{ label }}\r\n      </label>\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasTrailingIcon\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-text-field__icon\"\r\n        :class=\"hasTrailingIcon.classes\">\r\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <div ref=\"outline\" class=\"mdc-notched-outline\" :class=\"outlineClasses\" v-if=\"hasOutline\">\r\n        <svg>\r\n          <path class=\"mdc-notched-outline__path\" :d=\"outlinePathAttr\" />\r\n        </svg>\r\n      </div>\r\n      <div ref=\"outlineIdle\" class=\"mdc-notched-outline__idle\" v-if=\"hasOutline\"></div>\r\n      <div ref=\"bottom\" :class=\"bottomClasses\" :style=\"bottomStyles\" v-if=\"hasBottomLine\"></div>\r\n\r\n    </div>\r\n\r\n    <p ref=\"help\" :id=\"'help-'+vma_uid_\" :class=\"helpClasses\"\r\n      aria-hidden=\"true\" v-if=\"helptext\">\r\n      {{ helptext  }}\r\n    </p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCTextfieldFoundation from '@material/textfield/foundation';\r\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\r\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation';\r\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation';\r\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation';\r\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation';\r\n\r\nimport {\r\n  extractIconProp,\r\n  DispatchFocusMixin,\r\n  CustomElementMixin,\r\n} from '../base';\r\nimport { RippleBase } from '../ripple';\r\n\r\nexport default {\r\n  name: 'mdc-textfield',\r\n  mixins: [CustomElementMixin, DispatchFocusMixin],\r\n  model: {\r\n    prop: 'value',\r\n    event: 'model',\r\n  },\r\n  inheritAttrs: false,\r\n  props: {\r\n    value: String,\r\n    type: {\r\n      type: String,\r\n      default: 'text',\r\n      validator: function(value) {\r\n        return (\r\n          [\r\n            'text',\r\n            'email',\r\n            'search',\r\n            'password',\r\n            'tel',\r\n            'url',\r\n            'number',\r\n          ].indexOf(value) !== -1\r\n        );\r\n      },\r\n    },\r\n    dense: Boolean,\r\n    label: String,\r\n    helptext: String,\r\n    helptextPersistent: Boolean,\r\n    helptextValidation: Boolean,\r\n    box: Boolean,\r\n    outline: Boolean,\r\n    disabled: Boolean,\r\n    required: Boolean,\r\n    valid: { type: Boolean, default: undefined },\r\n    fullwidth: Boolean,\r\n    multiline: Boolean,\r\n    leadingIcon: [String, Array, Object],\r\n    trailingIcon: [String, Array, Object],\r\n    size: { type: [Number, String], default: 20 },\r\n    minlength: { type: [Number, String], default: undefined },\r\n    maxlength: { type: [Number, String], default: undefined },\r\n    rows: { type: [Number, String], default: 8 },\r\n    cols: { type: [Number, String], default: 40 },\r\n  },\r\n  data: function() {\r\n    return {\r\n      text: this.value,\r\n      rootClasses: {\r\n        'mdc-textfield': true,\r\n        'mdc-text-field': true,\r\n        'mdc-text-field--upgraded': true,\r\n        'mdc-text-field--disabled': this.disabled,\r\n        'mdc-text-field--dense': this.dense,\r\n        'mdc-text-field--fullwidth': this.fullwidth,\r\n        'mdc-text-field--textarea': this.multiline,\r\n        'mdc-text-field--box': !this.fullwidth && this.box,\r\n        'mdc-text-field--outlined': !this.fullwidth && this.outline,\r\n      },\r\n      inputClasses: {\r\n        'mdc-text-field__input': true,\r\n      },\r\n      labelClasses: {\r\n        'mdc-floating-label': true,\r\n      },\r\n      bottomClasses: {\r\n        'mdc-line-ripple': true,\r\n      },\r\n      bottomStyles: {},\r\n      helpClasses: {\r\n        'mdc-text-field-helper-text': true,\r\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\r\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation,\r\n      },\r\n      outlineClasses: {},\r\n      outlinePathAttr: undefined,\r\n    };\r\n  },\r\n  watch: {\r\n    disabled() {\r\n      this.foundation && this.foundation.setDisabled(this.disabled);\r\n    },\r\n    required() {\r\n      this.$refs.input && (this.$refs.input.required = this.required);\r\n    },\r\n    valid() {\r\n      if (typeof this.valid !== 'undefined') {\r\n        this.foundation && this.foundation.setValid(this.valid);\r\n      }\r\n    },\r\n    dense() {\r\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense);\r\n    },\r\n    helptextPersistent() {\r\n      this.helperTextFoundation &&\r\n        this.helperTextFoundation.setPersistent(this.helptextPersistent);\r\n    },\r\n    helptextValidation() {\r\n      this.helperTextFoundation &&\r\n        this.helperTextFoundation.setValidation(this.helptextValidation);\r\n    },\r\n    value(value) {\r\n      if (this.foundation) {\r\n        if (value !== this.foundation.getValue()) {\r\n          this.foundation.setValue(value);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    updateValue(value) {\r\n      this.$emit('model', value);\r\n    },\r\n    focus() {\r\n      this.$refs.input && this.$refs.input.focus();\r\n    },\r\n    blur() {\r\n      this.$refs.input && this.$refs.input.blur();\r\n    },\r\n  },\r\n  computed: {\r\n    inputPlaceHolder() {\r\n      return this.fullwidth ? this.label : undefined;\r\n    },\r\n    inputAriaControls() {\r\n      return this.help ? 'help-' + this.vma_uid_ : undefined;\r\n    },\r\n    hasLabel() {\r\n      return !this.fullwidth && this.label;\r\n    },\r\n    hasOutline() {\r\n      return !this.fullwidth && this.outline;\r\n    },\r\n    hasBottomLine() {\r\n      return !this.hasOutline && !this.multiline;\r\n    },\r\n    hasLeadingIcon() {\r\n      if (\r\n        (this.leadingIcon || this.$slots['leading-icon']) &&\r\n        !(this.trailingIcon || this.$slots['trailing-icon'])\r\n      ) {\r\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {};\r\n      }\r\n      return false;\r\n    },\r\n    hasTrailingIcon() {\r\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\r\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {};\r\n      }\r\n      return false;\r\n    },\r\n    labelClassesUpgraded() {\r\n      return Object.assign(this.labelClasses, {\r\n        'mdc-floating-label--float-above': this.value,\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.$refs.bottom) {\r\n      this.bottomLineFoundation = new MDCLineRippleFoundation({\r\n        addClass: className => {\r\n          this.$set(this.bottomClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.bottomClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          this.$refs.bottom.classList.contains(className);\r\n        },\r\n        setStyle: (name, value) => {\r\n          this.$set(this.styles, name, value);\r\n        },\r\n        registerEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.addEventListener(evtType, handler);\r\n        },\r\n        deregisterEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.removeEventListener(evtType, handler);\r\n        },\r\n      });\r\n      this.bottomLineFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.help) {\r\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\r\n        addClass: className => {\r\n          this.$set(this.helpClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.helpClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          return this.$refs.help.classList.contains(className);\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.help.setAttribute(name, value);\r\n        },\r\n        removeAttr: name => {\r\n          this.$refs.help.removeAttribute(name);\r\n        },\r\n        setContent: (/*content*/) => {\r\n          // help text get's updated from {{helptext}}\r\n          // this.$refs.help.textContent = content;\r\n        },\r\n      });\r\n      this.helperTextFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.icon) {\r\n      if (this.hasLeadingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true);\r\n      } else if (this.hasTrailingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true);\r\n      }\r\n\r\n      this.iconFoundation = new MDCTextFieldIconFoundation({\r\n        setAttr: (attr, value) => this.$refs.icon.setAttribute(attr, value),\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.removeEventListener(evtType, handler);\r\n        },\r\n        notifyIconAction: () => this.$emit('icon-action'),\r\n      });\r\n      this.iconFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.label) {\r\n      this.labelFoundation = new MDCFloatingLabelFoundation({\r\n        addClass: className => {\r\n          this.$set(this.labelClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.labelClasses, className);\r\n        },\r\n        getWidth: () => this.$refs.label.offsetWidth,\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.label.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.label.removeEventListener(evtType, handler);\r\n        },\r\n      });\r\n      this.labelFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.outline) {\r\n      this.outlineFoundation = new MDCNotchedOutlineFoundation({\r\n        getWidth: () => this.$refs.outline.offsetWidth,\r\n        getHeight: () => this.$refs.outline.offsetHeight,\r\n        addClass: className => {\r\n          this.$set(this.outlineClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.outlineClasses, className);\r\n        },\r\n        setOutlinePathAttr: value => {\r\n          this.outlinePathAttr = value;\r\n        },\r\n        getIdleOutlineStyleValue: propertyName => {\r\n          const idleOutlineElement = this.$refs.outlineIdle;\r\n          if (idleOutlineElement) {\r\n            return window\r\n              .getComputedStyle(idleOutlineElement)\r\n              .getPropertyValue(propertyName);\r\n          }\r\n        },\r\n      });\r\n      this.outlineFoundation.init();\r\n    }\r\n\r\n    this.foundation = new MDCTextfieldFoundation(\r\n      {\r\n        addClass: className => {\r\n          this.$set(this.rootClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.rootClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          this.$refs.root.classList.contains(className);\r\n        },\r\n        registerTextFieldInteractionHandler: (evtType, handler) => {\r\n          this.$refs.root.addEventListener(evtType, handler);\r\n        },\r\n        deregisterTextFieldInteractionHandler: (evtType, handler) => {\r\n          this.$refs.root.removeEventListener(evtType, handler);\r\n        },\r\n        isFocused: () => {\r\n          return document.activeElement === this.$refs.input;\r\n        },\r\n        isRtl: () =>\r\n          window\r\n            .getComputedStyle(this.$refs.root)\r\n            .getPropertyValue('direction') === 'rtl',\r\n        deactivateLineRipple: () => {\r\n          if (this.bottom) {\r\n            this.bottom.deactivate();\r\n          }\r\n        },\r\n        activateLineRipple: () => {\r\n          if (this.bottom) {\r\n            this.bottom.activate();\r\n          }\r\n        },\r\n        setLineRippleTransformOrigin: normalizedX => {\r\n          if (this.bottom) {\r\n            this.bottom.setRippleCenter(normalizedX);\r\n          }\r\n        },\r\n        registerInputInteractionHandler: (evtType, handler) => {\r\n          this.$refs.input.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInputInteractionHandler: (evtType, handler) => {\r\n          this.$refs.input.removeEventListener(evtType, handler);\r\n        },\r\n        registerValidationAttributeChangeHandler: handler => {\r\n          const observer = new MutationObserver(handler);\r\n          const targetNode = this.$refs.input;\r\n          const config = { attributes: true };\r\n          observer.observe(targetNode, config);\r\n          return observer;\r\n        },\r\n        deregisterValidationAttributeChangeHandler: observer => {\r\n          observer.disconnect();\r\n        },\r\n        shakeLabel: shouldShake => {\r\n          this.labelFoundation.shake(shouldShake);\r\n        },\r\n        floatLabel: shouldFloat => {\r\n          this.labelFoundation.float(shouldFloat);\r\n        },\r\n        hasLabel: () => {\r\n          return !!this.$refs.label;\r\n        },\r\n        getLabelWidth: () => {\r\n          return this.labelFoundation.getWidth();\r\n        },\r\n        getNativeInput: () => {\r\n          return this.$refs.input;\r\n        },\r\n        hasOutline: () => !!this.hasOutline,\r\n        notchOutline: (notchWidth, isRtl) =>\r\n          this.outlineFoundation.notch(notchWidth, isRtl),\r\n        closeOutline: () => this.outlineFoundation.closeNotch(),\r\n      },\r\n      {\r\n        bottomLine: this.bottomLineFoundation,\r\n        helperText: this.helperTextFoundation,\r\n        icon: this.iconFoundation,\r\n        label: this.labelFoundation,\r\n        outline: this.outlineFoundation,\r\n      },\r\n    );\r\n\r\n    this.foundation.init();\r\n    this.foundation.setValue(this.value);\r\n    this.foundation.setDisabled(this.disabled);\r\n    this.$refs.input && (this.$refs.input.required = this.required);\r\n    if (typeof this.valid !== 'undefined') {\r\n      this.foundation.setValid(this.valid);\r\n    }\r\n\r\n    if (this.textbox) {\r\n      this.ripple = new RippleBase(this);\r\n      this.ripple.init();\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation && this.foundation.destroy();\r\n    this.bottomLineFoundation && this.bottomLineFoundation.destroy();\r\n    this.helperTextFoundation && this.helperTextFoundation.destroy();\r\n    this.iconFoundation && this.iconFoundation.destroy();\r\n    this.labelFoundation && this.labelFoundation.destroy();\r\n    this.outlineFoundation && this.outlineFoundation.destroy();\r\n    this.ripple && this.ripple.destroy();\r\n  },\r\n};\r\n</script>\r\n","<template>\n  <custom-element :tag=\"tag\" \n    class=\"mdc-theme\"\n    :class=\"classes\">\n    <slot />\n  </custom-element>\n</template>\n\n\n<script>\nimport { CustomElement } from '../base'\n\n\nconst THEME_COLORS = [\n  'primary',\n  'secondary',\n  'background',\n  'primary-light',\n  'secondary-light',\n  'secondary-dark',\n  'primary-dark'\n]\n\nconst THEME_STYLES = [\n  'text-primary',\n  'text-secondary',\n  'text-hint',\n  'text-icon',\n  'text-disabled'\n]\n\nexport default {\n  name: 'mdc-theme',\n  components: {\n    CustomElement\n  },\n  props: {\n    tag: {type: String, default: 'div' },\n    color: String,\n    background: String\n  },\n  computed: {\n    classes () {\n      let classes = {}\n\n      if (this.color && THEME_COLORS.indexOf(this.color) !== -1) {\n          classes[`mdc-theme--${this.color}`] = true\n      }\n\n      if (this.background && THEME_COLORS.indexOf(this.background) !== -1) {\n        classes[`mdc-theme--${this.background}-bg`] = true\n\n        if (this.color && THEME_STYLES.indexOf(this.color) !== -1) {\n          classes[`mdc-theme--${this.color}-on-${this.background}`] = true\n        }\n      }\n      return classes\n    }\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcTheme from './mdc-theme.vue'\n\nexport {\n  mdcTheme\n}\n\nexport default BasePlugin({\n  mdcTheme\n})\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  FIXED: 'mdc-toolbar--fixed',\n  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',\n  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',\n  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',\n  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',\n  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',\n  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized',\n};\n\nexport const strings = {\n  TITLE_SELECTOR: '.mdc-toolbar__title',\n  ICON_SELECTOR: '.mdc-toolbar__icon',\n  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',\n  CHANGE_EVENT: 'MDCToolbar:change',\n};\n\nexport const numbers = {\n  MAX_TITLE_SIZE: 2.125,\n  MIN_TITLE_SIZE: 1.25,\n  TOOLBAR_ROW_HEIGHT: 64,\n  TOOLBAR_ROW_MOBILE_HEIGHT: 56,\n  TOOLBAR_MOBILE_BREAKPOINT: 600,\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCToolbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportWidth: () => /* number */ 0,\n      getViewportScrollY: () => /* number */ 0,\n      getOffsetHeight: () => /* number */ 0,\n      getFirstRowElementOffsetHeight: () => /* number */ 0,\n      notifyChange: (/* evtData: {flexibleExpansionRatio: number} */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      setStyleForTitleElement: (/* property: string, value: string */) => {},\n      setStyleForFlexibleRowElement: (/* property: string, value: string */) => {},\n      setStyleForFixedAdjustElement: (/* property: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.checkRowHeight_();\n    this.scrollHandler_ = () => this.updateToolbarStyles_();\n    this.checkRowHeightFrame_ = 0;\n    this.scrollFrame_ = 0;\n    this.executedLastChange_ = false;\n\n    this.calculations_ = {\n      toolbarRowHeight: 0,\n      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.\n      toolbarRatio: 0, // The ratio of toolbar height to row height\n      flexibleExpansionRatio: 0, // The ratio of flexible space height to row height\n      maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height\n      scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height\n      // Derived Heights based on the above key ratios.\n      toolbarHeight: 0,\n      flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)\n      maxTranslateYDistance: 0, // When toolbar only fix last row (derived)\n      scrollThreshold: 0,\n    };\n    // Toolbar fixed behavior\n    // If toolbar is fixed\n    this.fixed_ = false;\n    // If fixed is targeted only at the last row\n    this.fixedLastrow_ = false;\n    // Toolbar flexible behavior\n    // If the first row is flexible\n    this.hasFlexibleRow_ = false;\n    // If use the default behavior\n    this.useFlexDefaultBehavior_ = false;\n  }\n\n  init() {\n    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);\n    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;\n    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);\n    if (this.hasFlexibleRow_) {\n      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);\n    }\n    this.initKeyRatio_();\n    this.setKeyHeights_();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  updateAdjustElementStyles() {\n    if (this.fixed_) {\n      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);\n    }\n  }\n\n  getFlexibleExpansionRatio_(scrollTop) {\n    // To prevent division by zero when there is no flexibleExpansionHeight\n    const delta = 0.0001;\n    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));\n  }\n\n  checkRowHeight_() {\n    cancelAnimationFrame(this.checkRowHeightFrame_);\n    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());\n  }\n\n  setKeyHeights_() {\n    const newToolbarRowHeight = this.getRowHeight_();\n    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {\n      this.calculations_.toolbarRowHeight = newToolbarRowHeight;\n      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.flexibleExpansionHeight =\n        this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.maxTranslateYDistance =\n        this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.scrollThreshold =\n        this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;\n      this.updateAdjustElementStyles();\n      this.updateToolbarStyles_();\n    }\n  }\n\n  updateToolbarStyles_() {\n    cancelAnimationFrame(this.scrollFrame_);\n    this.scrollFrame_ = requestAnimationFrame(() => {\n      const scrollTop = this.adapter_.getViewportScrollY();\n      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);\n\n      if (hasScrolledOutOfThreshold && this.executedLastChange_) {\n        return;\n      }\n\n      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);\n\n      this.updateToolbarFlexibleState_(flexibleExpansionRatio);\n      if (this.fixedLastrow_) {\n        this.updateToolbarFixedState_(scrollTop);\n      }\n      if (this.hasFlexibleRow_) {\n        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);\n      }\n      this.executedLastChange_ = hasScrolledOutOfThreshold;\n      this.adapter_.notifyChange({flexibleExpansionRatio: flexibleExpansionRatio});\n    });\n  }\n\n  scrolledOutOfThreshold_(scrollTop) {\n    return scrollTop > this.calculations_.scrollThreshold;\n  }\n\n  initKeyRatio_() {\n    const toolbarRowHeight = this.getRowHeight_();\n    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;\n    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;\n    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;\n    this.calculations_.maxTranslateYRatio =\n      this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;\n    this.calculations_.scrollThresholdRatio =\n      (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;\n  }\n\n  getRowHeight_() {\n    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;\n    return this.adapter_.getViewportWidth() < breakpoint ?\n      MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;\n  }\n\n  updateToolbarFlexibleState_(flexibleExpansionRatio) {\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    if (flexibleExpansionRatio === 1) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    } else if (flexibleExpansionRatio === 0) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    }\n  }\n\n  updateToolbarFixedState_(scrollTop) {\n    const translateDistance = Math.max(0, Math.min(\n      scrollTop - this.calculations_.flexibleExpansionHeight,\n      this.calculations_.maxTranslateYDistance));\n    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);\n\n    if (translateDistance === this.calculations_.maxTranslateYDistance) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    } else {\n      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    }\n  }\n\n  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {\n    if (this.fixed_) {\n      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;\n      this.adapter_.setStyleForFlexibleRowElement('height',\n        `${height + this.calculations_.toolbarRowHeight}px`);\n    }\n    if (this.useFlexDefaultBehavior_) {\n      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);\n    }\n  }\n\n  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {\n    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;\n    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;\n    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;\n\n    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);\n  }\n}\n","import {BasePlugin} from '../base'\nimport mdcToolbar from './mdc-toolbar.vue'\nimport mdcToolbarRow from './mdc-toolbar-row.vue'\nimport mdcToolbarSection from './mdc-toolbar-section.vue'\nimport mdcToolbarMenuIcon from './mdc-toolbar-menu-icon.vue'\nimport mdcToolbarTitle from './mdc-toolbar-title.vue'\nimport mdcToolbarIcon from './mdc-toolbar-icon.vue'\n\nexport {\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n}\n\nexport default BasePlugin({\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n})\n\n","<template>\n  <header class=\"mdc-toolbar-wrapper\">\n    <!--Toolbar-->\n    <div ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n        <slot></slot>\n    </div>\n    <!-- Fixed Adjust Element-->\n    <div ref=\"fixed-adjust\" class=\"mdc-toolbar-fixed-adjust\" \n      :style=\"adjustStyles\"\n      v-if=\"fixed || waterfall || fixedLastrow\"></div>\n  </header>\n</template>\n\n<script>\nimport MDCToolbarFoundation from '@material/toolbar/foundation';\n\nexport default {\n  name: 'mdc-toolbar',\n  props: {\n    fixed: Boolean,\n    waterfall: Boolean,\n    'fixed-lastrow': Boolean,\n    flexible: Boolean,\n    'flexible-default': { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      rootClasses: {\n        'mdc-toolbar': true,\n        'mdc-toolbar--fixed': this.fixed || this.waterfall || this.fixedLastrow,\n        'mdc-toolbar--waterfall': this.waterfall,\n        'mdc-toolbar--fixed-lastrow-only': this.fixedLastrow,\n        'mdc-toolbar--flexible': this.flexible,\n        'mdc-toolbar--flexible-default-behavior':\n          this.flexible && this.flexibleDefault,\n      },\n      rootStyles: {},\n      adjustStyles: {\n        // to avoid top margin collapse with :after el\n        // 0.1 px should be rounded to 0px\n        // TODO: find a better trick\n        // height: '0.1px'\n      },\n      foundation: null,\n    };\n  },\n  mounted() {\n    this.foundation = new MDCToolbarFoundation({\n      addClass: className => {\n        this.$set(this.rootClasses, className, true);\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className);\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className);\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler);\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler);\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler);\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler);\n      },\n      getViewportWidth: () => {\n        return window.innerWidth;\n      },\n      getViewportScrollY: () => {\n        return window.pageYOffset;\n      },\n      getOffsetHeight: () => {\n        return this.$refs.root.offsetHeight;\n      },\n      getFirstRowElementOffsetHeight: () => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR,\n        );\n        return el ? el.offsetHeight : undefined;\n      },\n      notifyChange: evtData => {\n        this.$emit('change', evtData);\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value);\n      },\n      setStyleForTitleElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.TITLE_SELECTOR,\n        );\n        if (el) el.style.setProperty(property, value);\n      },\n      setStyleForFlexibleRowElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR,\n        );\n        if (el) el.style.setProperty(property, value);\n      },\n      setStyleForFixedAdjustElement: (property, value) => {\n        this.$set(this.adjustStyles, property, value);\n      },\n    });\n    this.foundation.init();\n  },\n  beforeDestroy() {\n    this.foundation.destroy();\n  },\n};\n</script>\n","<template>\n  <div class=\"mdc-toolbar-row mdc-toolbar__row\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-row'\n}\n</script>\n","<template>\n  <section class=\"mdc-toolbar-section mdc-toolbar__section\" :class=\"classes\">\n    <slot></slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-section',\n  props: {\n    'align-start': Boolean,\n    'align-end': Boolean,\n    'shrink-to-fit': Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-toolbar__section--align-start': this.alignStart,\n        'mdc-toolbar__section--align-end': this.alignEnd,\n        'mdc-toolbar__section--shrink-to-fit': this.shrinkToFit\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <a class=\"mdc-toolbar-menu-icon mdc-toolbar__menu-icon\"\n    :class=\"{'material-icons':!!icon}\"\n    v-on=\"listeners\">\n    <slot>{{icon}}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base';\n\nexport default {\n  name: 'mdc-toolbar-menu-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: { type: String, default: 'menu' },\n  },\n};\n</script>\n","<template>\n    <a class=\"mdc-toolbar-title mdc-toolbar__title\" v-on=\"listeners\">\n        <slot></slot>\n    </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base';\n\nexport default {\n  name: 'mdc-toolbar-title',\n  mixins: [DispatchEventMixin],\n};\n</script>\n","<template>\n  <a class=\"mdc-toolbar-icon mdc-toolbar__icon\" \n    :class=\"{'material-icons':!!icon}\"\n    v-on=\"listeners\">\n    <slot>{{icon}}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base';\n\nexport default {\n  name: 'mdc-toolbar-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: String,\n  },\n};\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {strings, cssClasses} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTopAppBarFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n}\n\nexport default MDCTopAppBarFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Top App Bar\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Top App Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTopAppBarAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Emits an event when the navigation icon is clicked.\n   */\n  notifyNavigationIconClicked() {}\n\n  /** @param {function(!Event)} handler */\n  registerScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterScrollHandler(handler) {}\n\n  /** @return {number} */\n  getViewportScrollY() {}\n\n  /** @return {number} */\n  getTotalActionItems() {}\n}\n\nexport default MDCTopAppBarAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssClasses} from '../constants';\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarFoundation from '../foundation';\n\n/**\n * @extends {MDCTopAppBarFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","import { BasePlugin } from '../base';\nimport mdcTopAppBar from './mdc-top-app-bar.vue';\nimport mdcTopAppBarAction from './mdc-top-app-bar--action.vue';\n\nexport { mdcTopAppBar, mdcTopAppBarAction };\n\nexport default BasePlugin({\n  mdcTopAppBar,\n  mdcTopAppBarAction,\n});\n","<template>\n<header ref=\"root\" :class=\"rootClasses\" v-on=\"$listeners\">\n  <div class=\"mdc-top-app-bar__row\">\n    <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\">\n      <a ref=\"navigationIcon\" href=\"#\" :class=\"naviconClasses\" v-if=\"haveNavigationIcon\" v-on=\"listeners\">{{icon}}</a>\n      <span class=\"mdc-top-app-bar__title\" v-if=\"!!title\">{{title}}</span>\n    </section>\n    <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\" v-if=\"$slots.default\">\n      <slot></slot>\n    </section>\n  </div>\n</header>\n</template>\n\n<script>\nimport MDCTopAppBarFoundation from '@material/top-app-bar/foundation';\nimport MDCShortTopAppBarFoundation from '@material/top-app-bar/short/foundation';\nimport { DispatchEventMixin, emitCustomEvent } from '../base';\n\nexport default {\n  name: 'mdc-top-app-bar',\n  props: {\n    short: Boolean,\n    shortCollapsed: Boolean,\n    title: String,\n    icon: {\n      type: String,\n      default: 'menu',\n    },\n    iconClasses: Object,\n    dense: Boolean,\n  },\n  data() {\n    return {\n      rootClasses: {\n        'mdc-top-app-bar': true,\n        'mdc-top-app-bar--dense': this.dense,\n        'mdc-top-app-bar--short': this.short,\n        'mdc-top-app-bar--short-collapsed': this.shortCollapsed,\n      },\n      foundation: null,\n    };\n  },\n  mixins: [DispatchEventMixin],\n  mounted() {\n    const adapter = {\n      addClass: className => {\n        this.$set(this.rootClasses, className, true);\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className);\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className);\n      },\n      registerNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.addEventListener(type, handler);\n        }\n      },\n      deregisterNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.removeEventListener(type, handler);\n        }\n      },\n      notifyNavigationIconClicked: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCTopAppBarFoundation.strings.NAVIGATION_EVENT,\n          {},\n          true,\n        );\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler);\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler);\n      },\n\n      getViewportScrollY: () => {\n        return window.pageYOffset;\n      },\n      getTotalActionItems: () =>\n        this.$refs.root.querySelectorAll(\n          MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR,\n        ).length,\n    };\n\n    this.foundation = this.short\n      ? new MDCShortTopAppBarFoundation(adapter)\n      : new MDCTopAppBarFoundation(adapter);\n\n    this.foundation.init();\n  },\n  computed: {\n    haveNavigationIcon() {\n      return !!this.icon || this.iconClasses;\n    },\n    naviconClasses() {\n      return {\n        'mdc-top-app-bar__navigation-icon': true,\n        'material-icons': !!this.icon,\n        ...this.iconClasses,\n      };\n    },\n  },\n  beforeDestroy() {\n    this.foundation.destroy();\n  },\n};\n</script>\n","<template>\n<a href=\"#\" class=\"mdc-top-app-bar--action mdc-top-app-bar__action-item\" :class=\"actioniconClasses\" v-on=\"listeners\">\n  <slot>{{icon}}</slot>\n</a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base';\nimport { RippleMixin } from '../ripple';\n\nexport default {\n  name: 'mdc-top-app-bar--action',\n  mixins: [DispatchEventMixin, RippleMixin],\n  props: {\n    icon: String,\n    iconClasses: Object,\n  },\n  computed: {\n    actioniconClasses() {\n      return {\n        'material-icons': !!this.icon,\n        ...this.iconClasses,\n      };\n    },\n  },\n};\n</script>\n","const typos = [\n  'display4', \n  'display3', \n  'display2', \n  'display1', \n  'headline',\n  'title',\n  'subheading1',\n  'subheading2',\n  'body1',\n  'body2',\n  'caption',\n  'button'\n]\n\nexport const mdcTypoMixin = (name) => {\n  return {\n    render (createElement) {\n      return createElement(this.tag, {\n        'class': {\n          'mdc-typo': true,\n          [name]: true,\n          [`mdc-typography--${this.typo}`]: true,\n          'mdc-typography--adjust-margin': this.adjustMargin\n        },\n        'attrs': this.$attrs,\n        'on': this.$listeners\n      },\n      this.$slots.default )\n    }\n  }\n}\n\nexport function mdcTypoPropMixin(defaultTag, defaultTypo, validTypos) {\n  return  {\n    props: {\n      'tag': { \n        type: String, \n        default: defaultTag \n      },\n      'typo': {\n        type: String,\n        default: defaultTypo,\n        validator:  (value) => validTypos.indexOf(value) !== -1\n      },\n      'adjust-margin': { \n        type: Boolean,\n        default: false\n      }\n    }\n  }\n}\n\nexport const mdcTextSection = {\n  name: 'mdc-text-section',\n  props: {\n    'tag': {\n      type: String, \n      default: 'section' \n    },\n  },\n  render (createElement) {\n    return createElement(this.tag, {\n      'class': {\n        'mdc-typography': true,\n        'mdc-text-section': true,\n      },\n      'attrs': this.$attrs,\n      'on': this.$listeners\n    }, this.$slots.default )\n  }\n}\n\nexport const mdcText = {\n  name: 'mdc-text',\n  mixins: [\n    mdcTypoMixin('mdc-text'), \n    mdcTypoPropMixin('p', 'body1', typos)\n  ],\n}\n\nexport const mdcDisplay = {\n  name: 'mdc-display',\n  mixins: [ \n    mdcTypoMixin('mdc-display'), \n    mdcTypoPropMixin('h1', 'display1', ['display4', 'display3', 'display2', 'display1'])],\n}\n\nexport const mdcHeadline = {\n  name: 'mdc-headline',\n  mixins: [ \n    mdcTypoMixin('mdc-headline'), \n    mdcTypoPropMixin('h2', 'headline', ['headline'])],\n}\n\nexport const mdcTitle = {\n  name: 'mdc-title',\n  mixins: [ \n    mdcTypoMixin('mdc-title'), \n    mdcTypoPropMixin('h3', 'title', ['title'])],\n}\n\nexport const mdcSubHeading = {\n  name: 'mdc-subheading',\n  mixins: [ \n    mdcTypoMixin('mdc-subheading'), \n    mdcTypoPropMixin('h4', 'subheading2', ['subheading1', 'subheading2'])],\n}\n\nexport const  mdcBody = {\n  name: 'mdc-body',\n  mixins: [\n    mdcTypoMixin('mdc-body'), \n    mdcTypoPropMixin('p', 'body1', ['body1', 'body2'])],\n}\n\nexport const mdcCaption = {\n  name: 'mdc-caption',\n  mixins: [\n    mdcTypoMixin('mdc-caption'), \n    mdcTypoPropMixin('span', 'caption', ['caption'])],\n}\n","import {BasePlugin} from '../base'\nimport {  \n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n} from './mdc-typography.js'\n\nexport {\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n}\n\nexport default BasePlugin({\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n})\n","//\n// vue PlugIn\n//\nimport VueMDCCommon from './common';\nimport VueMDCButton from './button';\nimport VueMDCCard from './card';\nimport VueMDCCheckbox from './checkbox';\nimport VueMDCChipSet from './chips';\nimport VueMDCDialog from './dialog';\nimport VueMDCDrawer from './drawer';\nimport VueMDCElevation from './elevation';\nimport VueMDCFab from './fab';\nimport VueMDCGridList from './grid-list';\nimport VueMDCIcon from './icon';\nimport VueMDCIconToggle from './icon-toggle';\nimport VueMDCLayoutApp from './layout-app';\nimport VueMDCLayoutGrid from './layout-grid';\nimport VueMDCLinearProgress from './linear-progress';\nimport VueMDCList from './list';\nimport VueMDCMenu from './menu';\nimport VueMDCRadio from './radio';\nimport VueMDCRipple from './ripple';\nimport VueMDCSelect from './select';\nimport VueMDCSlider from './slider';\nimport VueMDCSnackbar from './snackbar';\nimport VueMDCSwitch from './switch';\nimport VueMDCTabs from './tabs';\nimport VueMDCTextfield from './textfield';\nimport VueMDCTheme from './theme';\nimport VueMDCToolbar from './toolbar';\nimport VueMDCTopAppBar from './top-app-bar';\nimport VueMDCTypography from './typography';\n\nexport default {\n  version: '__VERSION__',\n  install(vm) {\n    vm.use(VueMDCCommon);\n    vm.use(VueMDCButton);\n    vm.use(VueMDCCard);\n    vm.use(VueMDCCheckbox);\n    vm.use(VueMDCChipSet);\n    vm.use(VueMDCDialog);\n    vm.use(VueMDCDrawer);\n    vm.use(VueMDCElevation);\n    vm.use(VueMDCFab);\n    vm.use(VueMDCGridList);\n    vm.use(VueMDCIcon);\n    vm.use(VueMDCIconToggle);\n    vm.use(VueMDCLayoutApp);\n    vm.use(VueMDCLayoutGrid);\n    vm.use(VueMDCLinearProgress);\n    vm.use(VueMDCList);\n    vm.use(VueMDCMenu);\n    vm.use(VueMDCRadio);\n    vm.use(VueMDCRipple);\n    vm.use(VueMDCSelect);\n    vm.use(VueMDCSlider);\n    vm.use(VueMDCSnackbar);\n    vm.use(VueMDCSwitch);\n    vm.use(VueMDCTabs);\n    vm.use(VueMDCTextfield);\n    vm.use(VueMDCTheme);\n    vm.use(VueMDCToolbar);\n    vm.use(VueMDCTopAppBar);\n    vm.use(VueMDCTypography);\n  },\n};\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from './base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["BasePlugin","components","vm","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","CustomElementMixin","CustomLink","type","String","default","Object","h","element","babelHelpers.extends","link","parent","$router","$root","$options","on","click","nativeOn","CustomLinkMixin","Boolean","this","to","exact","append","replace","activeClass","exactActiveClass","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","CustomButton","attrs","role","href","CustomButtonMixin","extractIconProp","iconProp","material-icons","Array","reduce","result","value","className","split","textContent","DispatchEventMixin","$emit","event","target","eventTarget","args","eventArgs","$listeners","_this","e","DispatchFocusMixin","hasFocus","_active","dispatchFocusEvent","setTimeout","_this2","$el","activeElement","contains","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","uid_","uidMixin","vma_uid_","VMAUniqueId","Vue","mixin","bus_","eventBus","vue","callback","$on","$off","VueMDCCommon","MDCFoundation","adapter","adapter_","cssClasses","handler","varName","strings","numbers","supportsCssVariables_","supportsPassive_","supportsCssVariables","windowObj","forceRefresh","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","applyPassive","globalObj","window","undefined","isSupported","passive","getMatchesProperty","HTMLElementPrototype","filter","p","pop","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","defaultAdapter","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","requestAnimationFrame","addClass","BG_FOCUSED","blurHandler_","removeClass","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","registerInteractionHandler","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","isSurfaceActive","animateActivation_","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","Math","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","options","MATCHES","disabled","$set","classes","$delete","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElement","prototype","RippleMixin","ripple","init","destroy","render","mdcButtonBase","raised","unelevated","stroked","dense","accent","src","square","fullBleed","compact","icon","MDCComponent","root","foundation","root_","initialize","foundation_","getDefaultFoundation","initialSyncWithDOM","Error","MDCRipple","unbounded_","setUnbounded","activate","deactivate","createAdapter","dataset","setUnbounded_","instance","util","classList","add","style","setProperty","attr","CB_PROTO_PROPS","MDCCheckboxFoundation","currentCheckState_","TRANSITION_STATE_INIT","currentAnimationClass_","animEndLatchTimer_","animEndHandler_","handleAnimationEnd","changeHandler_","handleChange","determineCheckState_","getNativeControl_","UPGRADED","registerChangeHandler","installPropertyChangeHooks_","deregisterChangeHandler","uninstallPropertyChangeHooks_","checked","indeterminate","DISABLED","deregisterAnimationEndHandler","ANIM_END_LATCH_MS","transitionCheckState_","nativeCb","cbProto","getPrototypeOf","controlState","desc","getOwnPropertyDescriptor","validDescriptor","nativeCbDesc","get","set","call","configurable","enumerable","defineProperty","getNativeControl","oldState","newState","isIndeterminate","setNativeControlAttr","ARIA_CHECKED_ATTR","ARIA_CHECKED_INDETERMINATE_VALUE","removeNativeControlAttr","forceLayout","getTransitionAnimationClass_","isAttachedToDOM","registerAnimationEndHandler","TRANSITION_STATE_INDETERMINATE","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","inputPropDesc","MDCFormFieldFoundation","clickHandler_","handleClick_","activateInputRipple","deactivateInputRipple","eventTypeMap","cssPropertyMap","getAnimationName","eventType","hasProperShape","eventFoundInMaps","map","styleProperty","noPrefix","webkitPrefix","getJavaScriptEventName","transformStyleProperties","getCorrectEventName","getCorrectPropertyName","Number","label","$slots","hasLabel","alignEnd","setDisabled","setIndeterminate","$refs","control","setAttribute","removeAttribute","offsetWidth","parentNode","formField","setChecked","isArray","isChecked","idx","concat","slice","MDCChipFoundation","interactionHandler_","handleInteraction_","transitionEndHandler_","handleTransitionEnd_","trailingIconInteractionHandler_","handleTrailingIconInteraction_","registerEventHandler","registerTrailingIconInteractionHandler","deregisterEventHandler","_this3","deregisterTrailingIconInteractionHandler","hasClass","SELECTED","keyCode","notifyInteraction","propertyName","eventTargetHasClass","LEADING_ICON","addClassToLeadingIcon","HIDDEN_LEADING_ICON","CHECKMARK","removeClassFromLeadingIcon","stopPropagation","notifyTrailingIconInteraction","toggleSelected","haveleadingIcon","leadingIcon","INTERACTION_EVENT","TRAILING_ICON_INTERACTION_EVENT","trailingIcon","mdcChipSet","leadingIconClasses","trailingIconClasses","leadingIcon_","querySelector","LEADING_ICON_SELECTOR","ripple_","trailingIconEl","TRAILING_ICON_SELECTOR","emit","chip","MDCChip","MDCChipSetFoundation","selectedChips_","chipInteractionHandler_","handleChipInteraction_","detail","CHOICE","FILTER","index","splice","choice","MDCDialogFoundation","isOpen_","componentClickHandler_","BACKDROP","cancel","dialogClickHandler_","handleDialogClick_","documentKeydownHandler_","deregisterSurfaceInteractionHandler","deregisterDocumentKeydownHandler","untrapFocusOnSurface","deregisterTransitionEndHandler","ANIMATING","OPEN","enableScroll_","disableScroll_","registerDocumentKeydownHandler","registerSurfaceInteractionHandler","registerTransitionEndHandler","shouldNotify","notifyAccept","close","notifyCancel","ACCEPT_BTN","accept","CANCEL_BTN","isDialog","trapFocusOnSurface","layoutFooterRipples","addBodyClass","SCROLL_LOCK","removeBodyClass","candidate","candidateIndex","elementDocument","ownerDocument","basicTabbables","orderedTabbables","isUnavailable","isOffCache","defaultView","isOff","nodeComputedStyle","i","display","visibility","createIsUnavailable","candidateSelectors","candidates","querySelectorAll","join","includeContainer","matches","Element","msMatchesSelector","webkitMatchesSelector","candidateSelector","apply","unshift","l","parseInt","getAttribute","tabIndex","tagName","tabbableNodes","sort","a","b","listeningFocusTrap","tryFocus","focus","toLowerCase","select","module","userOptions","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","active","paused","tabEvent","container","config","returnFocusOnDeactivate","escapeDeactivates","trap","activateOptions","defaultedActivateOptions","onActivate","deactivateOptions","defaultedDeactivateOptions","returnFocus","onDeactivate","addListeners","pause","getNodeForOption","firstFocusNode","checkFocus","checkClick","checkPointerDown","checkKey","removeListeners","optionName","optionValue","clickOutsideDeactivates","preventDefault","stopImmediatePropagation","blur","shiftKey","hasAttribute","currentFocusIndex","isEscapeEvent","updateTabbableNodes","tabbable","required","mdcButton","dark","scrollable","focusTrap","surfaceEl","acceptButtonEl","createFocusTrap","createFocusTrapInstance","surface","notify","open","FOCUSABLE_ELEMENTS","MDCSlidableDrawerFoundation","rootCssClass","animatingCssClass","openCssClass","rootCssClass_","animatingCssClass_","openCssClass_","inert_","componentTouchStartHandler_","handleTouchStart_","componentTouchMoveHandler_","handleTouchMove_","componentTouchEndHandler_","handleTouchEnd_","hasNecessaryDom","detabinate_","registerDrawerInteractionHandler","deregisterDrawerInteractionHandler","retabinate_","notifyOpen","notifyClose","elements","getFocusableElements","saveElementTabState","makeElementUntabbable","restoreElementTabState","pointerType","direction_","isRtl","drawerWidth_","getDrawerWidth","startX_","touches","currentX_","updateRaf_","updateDrawer_","bind","prepareForTouchEnd_","abs","newPosition_","setTranslateX","isRootTransitioningEventTarget_","min","MDCPersistentDrawerFoundation","isDrawer","TAB_DATA","TAB_DATA_HANDLED","storedTransformPropertyName_","remapEvent","eventName","getTransformPropertyName","transformPropertyName","_refresh","drawer","getPropertyValue","MDCTemporaryDrawerFoundation","newOpacity","OPACITY_VAR_NAME","media","_small","matchMedia","_large","val","mdcDrawer","mdcPermanentDrawer","mdcPersistentDrawer","mdcTemporaryDrawer","permanent","persistent","temporary","drawerType","small","open_","isPermanent","isOpen","large","isResponsive","toggleOn","toggleOnEventSource","toggleOnSource","toggle","openOn","openOnEventSource","openOnSource","closeOn","closeOnEventSource","closeOnSource","addListener","refreshMedia","$nextTick","removeListener","isTemporary","isPersistent","temporaryClose","activated","startIcon","mini","absolute","fixed","MDCGridListFoundation","alignCenter","resizeFrame_","alignCenter_","getNumberOfTiles","gridWidth","getOffsetWidth","itemWidth","getOffsetWidthForTileAtIndex","tilesWidth","floor","setStyleForTilesElement","mdcGrid","narrowGutter","headerCaption","ratio","iconAlignStart","iconAlignEnd","withSupportText","interactive","TILE_SELECTOR","property","TILES_SELECTOR","selected","endIcon","addRipple","removeRipple","isInteractive","text","MDCIconToggleFoundation","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","isSpace","keyupHandler_","refreshToggleData","getTabIndex","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","parseJsonDataAttr_","isOn","notifyChange","ARIA_LABEL","ARIA_PRESSED","setAttr","classToRemove","cssClass","content","setText","dataAttr","getAttr","JSON","parse","isDisabled","ARIA_DISABLED","setTabIndex","rmAttr","keyboardKey","stringify","toggleOff","iconClasses","isKeyboardActivated","fixedColumnWidth","alignLeft","alignRight","spanOptions","num","isFinite","span","order","phone","tablet","desktop","align","MDCLinearProgressFoundation","determinate_","INDETERMINATE_CLASS","reverse_","REVERSED_CLASS","progress_","isDeterminate","setScale_","getPrimaryBar","getBuffer","isReversed","CLOSED_CLASS","scaleValue","transformStyleProperty","setStyle","ProgressPropType","mdc-linear-progress--accent","setProgress","progress","setBuffer","buffer","setDeterminate","setReverse","reverse","primary","mdcList","avatarList","twoLine","bordered","inset","padded","attributeName","origin","position","CornerBit","Corner","MDCMenuFoundation","handlePossibleSelected_","handleKeyboardDown_","handleKeyboardUp_","documentClickHandler_","handleDocumentClick_","openAnimationEndTimerId_","closeAnimationEndTimerId_","selectedTriggerTimerId_","animationRequestId_","dimensions_","itemHeight_","anchorCorner_","TOP_START","anchorMargin_","right","bottom","measures_","selectedIndex_","rememberSelection_","quickOpen_","keyDownWithinMenu_","deregisterBodyClickHandler","corner","margin","rememberSelection","setSelectedIndex","quickOpen","focusIndex","focusItemAtIndex","isFocused","getIndexForEventTarget","altKey","ctrlKey","metaKey","isTab","isArrowUp","isArrowDown","isEnter","focusedItemIndex","getFocusedItemIndex","lastItemIndex","getNumberOfItems","isEscape","getAttributeForEventTarget","ARIA_DISABLED_ATTR","targetIndex","notifySelected","SELECTED_TRIGGER_DELAY","anchorRect","getAnchorDimensions","viewport","getWindowDimensions","TOP_LEFT","viewportDistance","anchorHeight","anchorWidth","menuHeight","menuWidth","isBottomAligned","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","MARGIN_TO_EDGE","avoidVerticalOverlap","canOverlapVertically","maxHeight","hasAnchor","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuHeight","getMenuMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","ANCHOR_TO_MENU_WIDTH_RATIO","OFFSET_TO_MENU_HEIGHT_RATIO","verticalOffsetPercent","originPercent","setTransformOrigin","setPosition","setMaxHeight","saveFocus","ANIMATING_OPEN","getInnerDimensions","autoPosition_","focusOnOpen_","registerBodyClickHandler","TRANSITION_OPEN_DURATION","ANIMATING_CLOSED","TRANSITION_CLOSE_DURATION","restoreFocus","prevSelectedIndex","rmAttrForOptionAtIndex","rmClassForOptionAtIndex","SELECTED_LIST_ITEM","setAttrForOptionAtIndex","addClassForOptionAtIndex","openFromTopLeft","openFromTopRight","openFromBottomLeft","openFromBottomRight","refreshItems","items","slotObserver","MutationObserver","observe","childList","subtree","_previousFocus","offsetHeight","parentElement","innerWidth","innerHeight","SELECTED_EVENT","CANCEL_EVENT","anchorCorner","setAnchorCorner","anchorMargin","setAnchorMargin","nv","setQuickOpen","disconnect","MDCRadioFoundation","setValue","picked","getValue","sync","MDCSelectFoundation","handleFocus_","handleBlur_","selectionHandler_","handleSelect_","IS_CHANGING","FLOAT_NATIVE_CONTROL_TRANSITION_TIME_MS","optionHasValue","floatLabel","getSelectedIndex","activateBottomLine","deactivateBottomLine","MDCSelectBottomLineFoundation","BOTTOM_LINE_ACTIVE","MDCSelectLabelFoundation","LABEL_FLOAT_ABOVE","native_control","findIndex","selectedIndex","box","labelFoundation","labelClasses","bottomLine","bottomLineFoundation","bottomLineClasses","styleFloat","refreshIndex","KEY_IDS","numMarkers","MOVE_EVENT_MAP","DOWN_EVENTS","UP_EVENTS","MDCSliderFoundation","rect_","NaN","active_","inTransit_","isDiscrete_","hasTrackMarker_","handlingThumbTargetEvt_","min_","max_","step_","value_","preventFocusState_","updateUIFrame_","thumbContainerPointerHandler_","interactionStartHandler_","handleDown_","handleKeydown_","IS_DISCRETE","HAS_TRACK_MARKER","evtName","registerThumbContainerInteractionHandler","getStep","deregisterThumbContainerInteractionHandler","getMin","getMax","step","indivisible","ceil","removeTrackMarkers","appendTrackMarkers","lastStepRatio","flex","setLastTrackMarkersStyleProperty","updateUIForCurrentValue_","setValue_","ARIA_VALUEMAX","setupTrackMarker","ARIA_VALUEMIN","toggleClass_","isNaN","setInTransit_","setActive_","moveHandler","handleMove_","upHandler","handleUp_","deregisterBodyInteractionHandler","registerBodyInteractionHandler","setValueFromEvt_","targetTouches","getPageX_","computeValueFromPageX_","pctComplete","isRTL","keyId","getKeyId_","getValueForKeyId_","FOCUS","kbdEvt","delta","PAGE_FACTOR","shouldFireInput","force","valueSetToBoundary","quantize_","ARIA_VALUENOW","notifyInput","setMarkerValue","translatePx","transformProp","transitionendEvtName","onTransitionEnd","setThumbContainerStyleProperty","setTrackStyleProperty","ACTIVE","inTransit","IN_TRANSIT","shouldBePresent","displayMarkers","setMin","setMax","setStep","thumbContainer","thumbStyles","trackStyles","markerValue","lastTrackMarkersStyles","hasMarkers","layoutOn","layoutOnEventSource","layoutOnSource","MDCSnackbarFoundation","actionWasClicked_","dismissOnAction_","firstFocus_","pointerDownRecognized_","snackbarHasFocus_","snackbarData_","queue_","actionClickHandler_","invokeAction_","visibilitychangeHandler_","timeoutId_","visibilityIsHidden","cleanup_","timeout","MESSAGE_TIMEOUT","handlePossibleTabKeyboardFocus_","registerActionClickHandler","setAriaHidden","setActionAriaHidden","deregisterActionClickHandler","deregisterCapturedBlurHandler","deregisterVisibilityChangeHandler","deregisterCapturedInteractionHandler","dismissOnAction","message","actionHandler","actionText","registerVisibilityChangeHandler","registerCapturedBlurHandler","registerCapturedInteractionHandler","MULTILINE","ACTION_ON_BOTTOM","setMessageText","multiline","actionOnBottom","setActionText","actionHandler_","setActionHidden_","unsetAriaHidden","notifyShow","setFocusOnAction_","setFocus","notifyHide","showNext_","show","shift","isHidden","unsetActionAriaHidden","alignStart","hidden","actionHidden","button","eventSource","setDismissOnAction","dismissesOnAction","MDCTabFoundation","computedWidth_","computedLeft_","isActive_","preventDefaultOnClick_","isActive","preventDefaultOnClick","getOffsetLeft","getComputedWidth","getComputedLeft","setActive","preventsDefaultOnClick","setPreventDefaultOnClick","measureSelf","offsetLeft","tab","MDCTabBarFoundation","isIndicatorShown_","activeTabIndex_","bindOnMDCTabSelectedEvent","activeTabIndex","findActiveTabIndex_","unbindOnMDCTabSelectedEvent","forEachTabIndex_","measureTabAtIndex","layoutIndicator_","isIndicatorFirstRender","setStyleForIndicator","transformValue","getComputedLeftForTabAtIndex","getComputedWidthForTabAtIndex","getOffsetWidthForIndicator","isTabActiveAtIndex","iterator","numTabs","getNumberOfTabs","prevActiveTabIndex","setTabActiveAtIndex","indicatorPrimary","indicatorAccent","tabs","switchToTabAtIndex","onSelect","indicatorStyles","indicator","isDefaultPreventedOnClick","resetTabs","tabElements","TAB_SELECTOR","__vue__","hasText","hasIcon","getActiveTabIndex","MDCTextFieldHelperTextFoundation","setContent","HELPER_TEXT_PERSISTENT","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","validationMsgNeedsDisplay","ROLE","hide_","MDCTextFieldIconFoundation","handleInteraction","notifyIconAction","observer","shouldShake","shouldFloat","labelWidth","MDCLineRippleFoundation","handleTransitionEnd","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","isDeactivating","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","LABEL_SHAKE","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","getHeight","cornerWidth","leadingStrokeLength","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","VALIDATION_ATTR_WHITELIST","MDCTextFieldFoundation","foundationMap","helperText_","helperText","icon_","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","mutations","handleValidationAttributeMutation_","validationObserver_","isValid","isBadInput_","notchOutline","registerInputInteractionHandler","registerTextFieldInteractionHandler","registerValidationAttributeChangeHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","deregisterValidationAttributeChangeHandler","getNativeInput","mutationsList","mutation","styleValidity_","openNotch","hasOutline","labelScale","DENSE","DENSE_LABEL_SCALE","LABEL_SCALE","getLabelWidth","closeOutline","styleFocused_","activateLineRipple","shakeLabel","showToScreenReader","targetClientRect","evtCoords","clientX","clientY","setLineRippleTransformOrigin","deactivateLineRipple","shouldRemoveLabelFloat","getNativeInput_","isNativeInputValid_","styleDisabled_","validity","badInput","valid","INVALID","setValidity","FOCUSED","fullwidth","outline","helptextPersistent","helptextValidation","input","setValid","rootClasses","helperTextFoundation","setPersistent","setValidation","help","bottomClasses","helpClasses","hasLeadingIcon","hasTrailingIcon","iconFoundation","outlineFoundation","outlineClasses","outlinePathAttr","idleOutlineElement","outlineIdle","MDCTextfieldFoundation","setRippleCenter","targetNode","attributes","shake","float","notch","closeNotch","textbox","THEME_COLORS","THEME_STYLES","color","background","MDCToolbarFoundation","checkRowHeight_","scrollHandler_","updateToolbarStyles_","checkRowHeightFrame_","scrollFrame_","executedLastChange_","calculations_","fixed_","fixedLastrow_","hasFlexibleRow_","useFlexDefaultBehavior_","FIXED","FIXED_LASTROW","TOOLBAR_ROW_FLEXIBLE","FLEXIBLE_DEFAULT_BEHAVIOR","initKeyRatio_","setKeyHeights_","registerScrollHandler","deregisterScrollHandler","setStyleForFixedAdjustElement","toolbarHeight","scrollTop","flexibleExpansionHeight","newToolbarRowHeight","getRowHeight_","toolbarRowHeight","toolbarRatio","flexibleExpansionRatio","maxTranslateYDistance","maxTranslateYRatio","scrollThreshold","scrollThresholdRatio","updateAdjustElementStyles","getViewportScrollY","hasScrolledOutOfThreshold","scrolledOutOfThreshold_","getFlexibleExpansionRatio_","updateToolbarFlexibleState_","updateToolbarFixedState_","updateFlexibleRowElementStyles_","firstRowMaxRatio","getFirstRowElementOffsetHeight","getOffsetHeight","breakpoint","TOOLBAR_MOBILE_BREAKPOINT","getViewportWidth","TOOLBAR_ROW_MOBILE_HEIGHT","TOOLBAR_ROW_HEIGHT","FLEXIBLE_MAX","FLEXIBLE_MIN","translateDistance","FIXED_AT_LAST_ROW","setStyleForFlexibleRowElement","updateElementStylesDefaultBehavior_","maxTitleSize","MAX_TITLE_SIZE","minTitleSize","MIN_TITLE_SIZE","currentTitleSize","setStyleForTitleElement","waterfall","fixedLastrow","flexible","flexibleDefault","FIRST_ROW_SELECTOR","rootStyles","TITLE_SELECTOR","adjustStyles","shrinkToFit","MDCTopAppBarFoundation","navClickHandler_","notifyNavigationIconClicked","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","MDCShortTopAppBarFoundation","isCollapsed","shortAppBarScrollHandler_","isAlwaysCollapsed","SHORT_COLLAPSED_CLASS","getTotalActionItems","SHORT_HAS_ACTION_ITEM_CLASS","short","shortCollapsed","navigationIcon","NAVIGATION_EVENT","ACTION_ITEM_SELECTOR","mdcTypoMixin","typo","adjustMargin","$attrs","mdcTypoPropMixin","defaultTag","defaultTypo","validTypos","mdcTextSection","mdcText","mdcDisplay","mdcHeadline","mdcTitle","mdcSubHeading","use","VueMDCButton","VueMDCCard","VueMDCCheckbox","VueMDCChipSet","VueMDCDialog","VueMDCDrawer","VueMDCElevation","VueMDCFab","VueMDCGridList","VueMDCIcon","VueMDCIconToggle","VueMDCLayoutApp","VueMDCLayoutGrid","VueMDCLinearProgress","VueMDCList","VueMDCMenu","VueMDCRadio","VueMDCRipple","VueMDCSelect","VueMDCSlider","VueMDCSnackbar","VueMDCSwitch","VueMDCTabs","VueMDCTextfield","VueMDCTheme","VueMDCToolbar","VueMDCTopAppBar","VueMDCTypography","plugin","_Vue","global"],"mappings":"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"}