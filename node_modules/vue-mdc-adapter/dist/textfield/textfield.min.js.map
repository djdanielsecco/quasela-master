{"version":3,"file":"textfield.min.js","sources":["../../components/base/custom-element.js","../../components/base/custom-icon.js","../../components/base/dispatch-focus-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/textfield/helper-text/constants.js","../../node_modules/@material/textfield/helper-text/adapter.js","../../node_modules/@material/textfield/helper-text/foundation.js","../../node_modules/@material/textfield/icon/constants.js","../../node_modules/@material/textfield/icon/adapter.js","../../node_modules/@material/textfield/icon/foundation.js","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/textfield/adapter.js","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/foundation.js","../../node_modules/@material/floating-label/constants.js","../../node_modules/@material/floating-label/adapter.js","../../node_modules/@material/floating-label/foundation.js","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/adapter.js","../../node_modules/@material/notched-outline/foundation.js","../../node_modules/@material/textfield/constants.js","../../node_modules/@material/textfield/foundation.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../components/textfield/mdc-textfield.vue","../../components/base/auto-init.js","../../components/textfield/entry.js"],"sourcesContent":["export const CustomElement = {\n  functional: true,\n  render (createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div', \n      context.data,\n      context.children)\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","export function extractIconProp (iconProp) {\n    if (typeof iconProp === 'string') {\n      return {\n        classes: { 'material-icons' : true},\n        content: iconProp \n      }\n    }\n    else if (iconProp instanceof Array){\n      return { \n        classes: iconProp.reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        }\n    }\n    else if (typeof iconProp === 'object'){\n      return { \n        classes: iconProp.className.split(' ').reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        content: iconProp.textContent \n      }\n    }\n  }\n","export const DispatchFocusMixin = {\n  data () {\n    return  {hasFocus: false}\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp () {\n      this._active = false\n    },\n    onFocusEvent () {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    onBlurEvent () {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted () {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy () {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      setAttr: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {boolean} disabled\n   */\n  setDisabled(disabled) {\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n    } else {\n      this.adapter_.setAttr('tabindex', '0');\n    }\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Registers a validation attribute change listener on the input element.\n   * @param {function(!Array): undefined} handler\n   * @return {!MutationObserver}\n   */\n  registerValidationAttributeChangeHandler(handler) {}\n\n  /**\n   * Disconnects a validation attribute observer on the input element.\n   * @param {!MutationObserver} observer\n   */\n  deregisterValidationAttributeChangeHandler(observer) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n\n  /**\n   * Only implement if label exists.\n   * Shakes label if shouldShake is true.\n   * @param {boolean} shouldShake\n   */\n  shakeLabel(shouldShake) {}\n\n  /**\n   * Only implement if label exists.\n   * Floats the label above the input element if shouldFloat is true.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Only implement if label exists.\n   * Returns width of label in pixels.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * Updates SVG Path and outline element based on the\n   * label element width and RTL context.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  notchOutline(labelWidth, isRtl) {}\n\n  /**\n   * Only implement if outline element exists.\n   * Closes notch in outline element.\n   */\n  closeOutline() {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {!number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  BOTTOM_LINE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\n/* eslint-disable no-unused-vars */\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation';\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return !this.isBadInput_() && (!!this.getValue() || this.isFocused_);\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (mutations) => this.handleValidationAttributeMutation_(mutations);\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.adapter_.hasLabel() && this.getValue()) {\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(\n      this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {Array<MutationRecord>} mutationsList\n   * @private\n   */\n  handleValidationAttributeMutation_(mutationsList) {\n    mutationsList.some((mutation) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(mutation.attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    this.notchOutline(this.shouldFloat);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {!{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {!{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {!{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {!{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {!{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {!{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {!{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n      }\n      this.layoutInternal_();\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    requestAnimationFrame(() => {\n      // This needs to be wrapped in an rAF call b/c web browsers\n      // report active states inconsistently when they're called within\n      // event handling code:\n      // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n      // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n      activationState.wasElementMadeActive = (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      } else {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n    });\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {supportsCssVariables, getMatchesProperty, applyPassive} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n\n  static get MATCHES () {\n    /* global HTMLElement */\n    return RippleBase._matches ||\n      ( RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n  }\n\n  static isSurfaceActive (ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor (vm, options) {\n    super(Object.assign({\n      browserSupportsCssVars: () => {\n        return supportsCssVariables(window)\n      },\n      isUnbounded: () => {\n        return false\n      },\n      isSurfaceActive: () => {\n        return vm.$el[RippleBase.MATCHES](':active')\n      },\n      isSurfaceDisabled: () => {\n        return vm.disabled\n      },\n      addClass (className) {\n        vm.$set(vm.classes, className, true)\n      },\n      removeClass (className) {\n        vm.$delete(vm.classes, className)\n      },\n      containsEventTarget: (target) => vm.$el.contains(target),\n      registerInteractionHandler: (evt, handler) => {\n        vm.$el.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        vm.$el.removeEventListener(evt, handler)\n      },\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) => {\n        return window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        return window.removeEventListener('resize', handler)\n      },\n      updateCssVariable: (varName, value) => {\n        vm.$set(vm.styles, varName, value)\n      },\n      computeBoundingRect: () => {\n        return vm.$el.getBoundingClientRect()\n      },\n      getWindowPageOffset: () => {\n        return ({x: window.pageXOffset, y: window.pageYOffset})\n      },\n    }, options))\n  }\n}\n\nexport const RippleMixin = {\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted () {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.ripple.destroy()\n  }\n}  ","<template>\r\n  <div class=\"mdc-textfield-wrapper\" :style=\"{width:fullwidth?'100%':undefined}\">\r\n\r\n    <div ref=\"root\" :class=\"rootClasses\">\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasLeadingIcon\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-text-field__icon\"\r\n        :class=\"hasLeadingIcon.classes\">\r\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <textarea ref=\"input\" v-if=\"multiline\"\r\n        v-on=\"$listeners\"\r\n        v-bind=\"$attrs\"\r\n        :id=\"vma_uid_\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        :rows=\"rows\" :cols=\"cols\"\r\n        ></textarea>\r\n\r\n      <input ref=\"input\" v-else\r\n        v-on=\"$listeners\"\r\n        v-bind=\"$attrs\"\r\n        :id=\"vma_uid_\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :type=\"type\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        />\r\n\r\n      <label ref=\"label\" :class=\"labelClassesUpgraded\" :for=\"vma_uid_\"  v-if=\"hasLabel\">\r\n        {{ label }}\r\n      </label>\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasTrailingIcon\"\r\n        tabindex=\"0\"\r\n        class=\"mdc-text-field__icon\"\r\n        :class=\"hasTrailingIcon.classes\">\r\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <div ref=\"outline\" class=\"mdc-notched-outline\" :class=\"outlineClasses\" v-if=\"hasOutline\">\r\n        <svg>\r\n          <path class=\"mdc-notched-outline__path\" :d=\"outlinePathAttr\" />\r\n        </svg>\r\n      </div>\r\n      <div ref=\"outlineIdle\" class=\"mdc-notched-outline__idle\" v-if=\"hasOutline\"></div>\r\n      <div ref=\"bottom\" :class=\"bottomClasses\" :style=\"bottomStyles\" v-if=\"hasBottomLine\"></div>\r\n\r\n    </div>\r\n\r\n    <p ref=\"help\" :id=\"'help-'+vma_uid_\" :class=\"helpClasses\"\r\n      aria-hidden=\"true\" v-if=\"helptext\">\r\n      {{ helptext  }}\r\n    </p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCTextfieldFoundation from '@material/textfield/foundation';\r\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\r\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation';\r\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation';\r\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation';\r\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation';\r\n\r\nimport {\r\n  extractIconProp,\r\n  DispatchFocusMixin,\r\n  CustomElementMixin,\r\n} from '../base';\r\nimport { RippleBase } from '../ripple';\r\n\r\nexport default {\r\n  name: 'mdc-textfield',\r\n  mixins: [CustomElementMixin, DispatchFocusMixin],\r\n  model: {\r\n    prop: 'value',\r\n    event: 'model',\r\n  },\r\n  inheritAttrs: false,\r\n  props: {\r\n    value: String,\r\n    type: {\r\n      type: String,\r\n      default: 'text',\r\n      validator: function(value) {\r\n        return (\r\n          [\r\n            'text',\r\n            'email',\r\n            'search',\r\n            'password',\r\n            'tel',\r\n            'url',\r\n            'number',\r\n          ].indexOf(value) !== -1\r\n        );\r\n      },\r\n    },\r\n    dense: Boolean,\r\n    label: String,\r\n    helptext: String,\r\n    helptextPersistent: Boolean,\r\n    helptextValidation: Boolean,\r\n    box: Boolean,\r\n    outline: Boolean,\r\n    disabled: Boolean,\r\n    required: Boolean,\r\n    valid: { type: Boolean, default: undefined },\r\n    fullwidth: Boolean,\r\n    multiline: Boolean,\r\n    leadingIcon: [String, Array, Object],\r\n    trailingIcon: [String, Array, Object],\r\n    size: { type: [Number, String], default: 20 },\r\n    minlength: { type: [Number, String], default: undefined },\r\n    maxlength: { type: [Number, String], default: undefined },\r\n    rows: { type: [Number, String], default: 8 },\r\n    cols: { type: [Number, String], default: 40 },\r\n  },\r\n  data: function() {\r\n    return {\r\n      text: this.value,\r\n      rootClasses: {\r\n        'mdc-textfield': true,\r\n        'mdc-text-field': true,\r\n        'mdc-text-field--upgraded': true,\r\n        'mdc-text-field--disabled': this.disabled,\r\n        'mdc-text-field--dense': this.dense,\r\n        'mdc-text-field--fullwidth': this.fullwidth,\r\n        'mdc-text-field--textarea': this.multiline,\r\n        'mdc-text-field--box': !this.fullwidth && this.box,\r\n        'mdc-text-field--outlined': !this.fullwidth && this.outline,\r\n      },\r\n      inputClasses: {\r\n        'mdc-text-field__input': true,\r\n      },\r\n      labelClasses: {\r\n        'mdc-floating-label': true,\r\n      },\r\n      bottomClasses: {\r\n        'mdc-line-ripple': true,\r\n      },\r\n      bottomStyles: {},\r\n      helpClasses: {\r\n        'mdc-text-field-helper-text': true,\r\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\r\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation,\r\n      },\r\n      outlineClasses: {},\r\n      outlinePathAttr: undefined,\r\n    };\r\n  },\r\n  watch: {\r\n    disabled() {\r\n      this.foundation && this.foundation.setDisabled(this.disabled);\r\n    },\r\n    required() {\r\n      this.$refs.input && (this.$refs.input.required = this.required);\r\n    },\r\n    valid() {\r\n      if (typeof this.valid !== 'undefined') {\r\n        this.foundation && this.foundation.setValid(this.valid);\r\n      }\r\n    },\r\n    dense() {\r\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense);\r\n    },\r\n    helptextPersistent() {\r\n      this.helperTextFoundation &&\r\n        this.helperTextFoundation.setPersistent(this.helptextPersistent);\r\n    },\r\n    helptextValidation() {\r\n      this.helperTextFoundation &&\r\n        this.helperTextFoundation.setValidation(this.helptextValidation);\r\n    },\r\n    value(value) {\r\n      if (this.foundation) {\r\n        if (value !== this.foundation.getValue()) {\r\n          this.foundation.setValue(value);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    updateValue(value) {\r\n      this.$emit('model', value);\r\n    },\r\n    focus() {\r\n      this.$refs.input && this.$refs.input.focus();\r\n    },\r\n    blur() {\r\n      this.$refs.input && this.$refs.input.blur();\r\n    },\r\n  },\r\n  computed: {\r\n    inputPlaceHolder() {\r\n      return this.fullwidth ? this.label : undefined;\r\n    },\r\n    inputAriaControls() {\r\n      return this.help ? 'help-' + this.vma_uid_ : undefined;\r\n    },\r\n    hasLabel() {\r\n      return !this.fullwidth && this.label;\r\n    },\r\n    hasOutline() {\r\n      return !this.fullwidth && this.outline;\r\n    },\r\n    hasBottomLine() {\r\n      return !this.hasOutline && !this.multiline;\r\n    },\r\n    hasLeadingIcon() {\r\n      if (\r\n        (this.leadingIcon || this.$slots['leading-icon']) &&\r\n        !(this.trailingIcon || this.$slots['trailing-icon'])\r\n      ) {\r\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {};\r\n      }\r\n      return false;\r\n    },\r\n    hasTrailingIcon() {\r\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\r\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {};\r\n      }\r\n      return false;\r\n    },\r\n    labelClassesUpgraded() {\r\n      return Object.assign(this.labelClasses, {\r\n        'mdc-floating-label--float-above': this.value,\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.$refs.bottom) {\r\n      this.bottomLineFoundation = new MDCLineRippleFoundation({\r\n        addClass: className => {\r\n          this.$set(this.bottomClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.bottomClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          this.$refs.bottom.classList.contains(className);\r\n        },\r\n        setStyle: (name, value) => {\r\n          this.$set(this.styles, name, value);\r\n        },\r\n        registerEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.addEventListener(evtType, handler);\r\n        },\r\n        deregisterEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.removeEventListener(evtType, handler);\r\n        },\r\n      });\r\n      this.bottomLineFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.help) {\r\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\r\n        addClass: className => {\r\n          this.$set(this.helpClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.helpClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          return this.$refs.help.classList.contains(className);\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.help.setAttribute(name, value);\r\n        },\r\n        removeAttr: name => {\r\n          this.$refs.help.removeAttribute(name);\r\n        },\r\n        setContent: (/*content*/) => {\r\n          // help text get's updated from {{helptext}}\r\n          // this.$refs.help.textContent = content;\r\n        },\r\n      });\r\n      this.helperTextFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.icon) {\r\n      if (this.hasLeadingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true);\r\n      } else if (this.hasTrailingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true);\r\n      }\r\n\r\n      this.iconFoundation = new MDCTextFieldIconFoundation({\r\n        setAttr: (attr, value) => this.$refs.icon.setAttribute(attr, value),\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.removeEventListener(evtType, handler);\r\n        },\r\n        notifyIconAction: () => this.$emit('icon-action'),\r\n      });\r\n      this.iconFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.label) {\r\n      this.labelFoundation = new MDCFloatingLabelFoundation({\r\n        addClass: className => {\r\n          this.$set(this.labelClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.labelClasses, className);\r\n        },\r\n        getWidth: () => this.$refs.label.offsetWidth,\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.label.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.label.removeEventListener(evtType, handler);\r\n        },\r\n      });\r\n      this.labelFoundation.init();\r\n    }\r\n\r\n    if (this.$refs.outline) {\r\n      this.outlineFoundation = new MDCNotchedOutlineFoundation({\r\n        getWidth: () => this.$refs.outline.offsetWidth,\r\n        getHeight: () => this.$refs.outline.offsetHeight,\r\n        addClass: className => {\r\n          this.$set(this.outlineClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.outlineClasses, className);\r\n        },\r\n        setOutlinePathAttr: value => {\r\n          this.outlinePathAttr = value;\r\n        },\r\n        getIdleOutlineStyleValue: propertyName => {\r\n          const idleOutlineElement = this.$refs.outlineIdle;\r\n          if (idleOutlineElement) {\r\n            return window\r\n              .getComputedStyle(idleOutlineElement)\r\n              .getPropertyValue(propertyName);\r\n          }\r\n        },\r\n      });\r\n      this.outlineFoundation.init();\r\n    }\r\n\r\n    this.foundation = new MDCTextfieldFoundation(\r\n      {\r\n        addClass: className => {\r\n          this.$set(this.rootClasses, className, true);\r\n        },\r\n        removeClass: className => {\r\n          this.$delete(this.rootClasses, className);\r\n        },\r\n        hasClass: className => {\r\n          this.$refs.root.classList.contains(className);\r\n        },\r\n        registerTextFieldInteractionHandler: (evtType, handler) => {\r\n          this.$refs.root.addEventListener(evtType, handler);\r\n        },\r\n        deregisterTextFieldInteractionHandler: (evtType, handler) => {\r\n          this.$refs.root.removeEventListener(evtType, handler);\r\n        },\r\n        isFocused: () => {\r\n          return document.activeElement === this.$refs.input;\r\n        },\r\n        isRtl: () =>\r\n          window\r\n            .getComputedStyle(this.$refs.root)\r\n            .getPropertyValue('direction') === 'rtl',\r\n        deactivateLineRipple: () => {\r\n          if (this.bottom) {\r\n            this.bottom.deactivate();\r\n          }\r\n        },\r\n        activateLineRipple: () => {\r\n          if (this.bottom) {\r\n            this.bottom.activate();\r\n          }\r\n        },\r\n        setLineRippleTransformOrigin: normalizedX => {\r\n          if (this.bottom) {\r\n            this.bottom.setRippleCenter(normalizedX);\r\n          }\r\n        },\r\n        registerInputInteractionHandler: (evtType, handler) => {\r\n          this.$refs.input.addEventListener(evtType, handler);\r\n        },\r\n        deregisterInputInteractionHandler: (evtType, handler) => {\r\n          this.$refs.input.removeEventListener(evtType, handler);\r\n        },\r\n        registerValidationAttributeChangeHandler: handler => {\r\n          const observer = new MutationObserver(handler);\r\n          const targetNode = this.$refs.input;\r\n          const config = { attributes: true };\r\n          observer.observe(targetNode, config);\r\n          return observer;\r\n        },\r\n        deregisterValidationAttributeChangeHandler: observer => {\r\n          observer.disconnect();\r\n        },\r\n        shakeLabel: shouldShake => {\r\n          this.labelFoundation.shake(shouldShake);\r\n        },\r\n        floatLabel: shouldFloat => {\r\n          this.labelFoundation.float(shouldFloat);\r\n        },\r\n        hasLabel: () => {\r\n          return !!this.$refs.label;\r\n        },\r\n        getLabelWidth: () => {\r\n          return this.labelFoundation.getWidth();\r\n        },\r\n        getNativeInput: () => {\r\n          return this.$refs.input;\r\n        },\r\n        hasOutline: () => !!this.hasOutline,\r\n        notchOutline: (notchWidth, isRtl) =>\r\n          this.outlineFoundation.notch(notchWidth, isRtl),\r\n        closeOutline: () => this.outlineFoundation.closeNotch(),\r\n      },\r\n      {\r\n        bottomLine: this.bottomLineFoundation,\r\n        helperText: this.helperTextFoundation,\r\n        icon: this.iconFoundation,\r\n        label: this.labelFoundation,\r\n        outline: this.outlineFoundation,\r\n      },\r\n    );\r\n\r\n    this.foundation.init();\r\n    this.foundation.setValue(this.value);\r\n    this.foundation.setDisabled(this.disabled);\r\n    this.$refs.input && (this.$refs.input.required = this.required);\r\n    if (typeof this.valid !== 'undefined') {\r\n      this.foundation.setValid(this.valid);\r\n    }\r\n\r\n    if (this.textbox) {\r\n      this.ripple = new RippleBase(this);\r\n      this.ripple.init();\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation && this.foundation.destroy();\r\n    this.bottomLineFoundation && this.bottomLineFoundation.destroy();\r\n    this.helperTextFoundation && this.helperTextFoundation.destroy();\r\n    this.iconFoundation && this.iconFoundation.destroy();\r\n    this.labelFoundation && this.labelFoundation.destroy();\r\n    this.outlineFoundation && this.outlineFoundation.destroy();\r\n    this.ripple && this.ripple.destroy();\r\n  },\r\n};\r\n</script>\r\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["CustomElementMixin","createElement","context","props","is","tag","data","children","extractIconProp","iconProp","material-icons","Array","reduce","result","value","babelHelpers.extends","className","split","textContent","DispatchFocusMixin","hasFocus","_active","_this","dispatchFocusEvent","setTimeout","_this2","this","$el","document","activeElement","contains","$emit","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","MDCFoundation","adapter","adapter_","strings","attr","content","cssClasses","MDCTextFieldHelperTextFoundation","defaultAdapter","setContent","isPersistent","addClass","HELPER_TEXT_PERSISTENT","removeClass","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","hasClass","validationMsgNeedsDisplay","setAttr","ROLE","hide_","evtType","handler","MDCTextFieldIconFoundation","interactionHandler_","evt","handleInteraction","forEach","registerInteractionHandler","deregisterInteractionHandler","_this3","disabled","type","key","keyCode","notifyIconAction","observer","normalizedX","shouldShake","shouldFloat","labelWidth","isRtl","propertyName","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","setStyle","isDeactivating","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","LABEL_SHAKE","LABEL_FLOAT_ABOVE","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","width","height","getHeight","cornerWidth","leadingStrokeLength","Math","abs","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","numbers","VALIDATION_ATTR_WHITELIST","MDCTextFieldFoundation","foundationMap","helperText_","helperText","icon_","icon","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","mutations","handleValidationAttributeMutation_","validationObserver_","isValid","isBadInput_","getValue","UPGRADED","hasLabel","floatLabel","notchOutline","isFocused","registerInputInteractionHandler","registerTextFieldInteractionHandler","registerValidationAttributeChangeHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","deregisterValidationAttributeChangeHandler","getNativeInput","mutationsList","some","mutation","indexOf","attributeName","styleValidity_","openNotch","hasOutline","labelScale","DENSE","DENSE_LABEL_SCALE","LABEL_SCALE","getLabelWidth","closeOutline","styleFocused_","activateLineRipple","shakeLabel","showToScreenReader","targetClientRect","target","getBoundingClientRect","evtCoords","clientX","clientY","left","setLineRippleTransformOrigin","deactivateLineRipple","shouldRemoveLabelFloat","getNativeInput_","isNativeInputValid_","styleDisabled_","validity","badInput","valid","INVALID","setValidity","FOCUSED","isDisabled","DISABLED","setDisabled","varName","supportsCssVariables_","supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","passive","e","components","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","requestAnimationFrame","BG_FOCUSED","blurHandler_","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","isSurfaceActive","animateActivation_","event","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedY","getWindowPageOffset","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","vm","options","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","MATCHES","$set","classes","$delete","documentElement","styles","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","render","String","Boolean","default","Object","Number","dense","fullwidth","multiline","box","outline","helptextPersistent","helptextValidation","foundation","$refs","input","required","setValid","rootClasses","helperTextFoundation","setPersistent","setValidation","setValue","focus","blur","label","help","vma_uid_","leadingIcon","$slots","trailingIcon","labelClasses","bottom","bottomLineFoundation","bottomClasses","classList","name","init","helpClasses","setAttribute","removeAttribute","hasLeadingIcon","hasTrailingIcon","iconFoundation","labelFoundation","offsetWidth","outlineFoundation","offsetHeight","outlineClasses","outlinePathAttr","idleOutlineElement","outlineIdle","getPropertyValue","MDCTextfieldFoundation","root","deactivate","activate","setRippleCenter","MutationObserver","targetNode","observe","attributes","disconnect","shake","float","notch","closeNotch","textbox","ripple","destroy","component","plugin","_Vue","Vue","global","use"],"mappings":"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"}