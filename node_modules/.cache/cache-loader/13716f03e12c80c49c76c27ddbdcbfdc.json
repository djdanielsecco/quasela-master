{"remainingRequest":"/Users/danielsecco/Downloads/quasela-master/node_modules/thread-loader/dist/cjs.js!/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js!/Users/danielsecco/Downloads/quasela-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danielsecco/Downloads/quasela-master/src/components/VueQrReader.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/danielsecco/Downloads/quasela-master/src/components/VueQrReader.vue","mtime":1528734600000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/cache-loader/dist/cjs.js","mtime":1528752079000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/thread-loader/dist/cjs.js","mtime":1528752084000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/vue-loader/lib/index.js","mtime":1525995699000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport jsQR from \"jsqr\";\nimport { eventHub } from '@/main.js';\nexport default {\n  name: \"vue-qr-reader\",\n  props: {\n    useBackCamera: {\n      type: Boolean,\n      default: true\n    },\n    stopOnScanned: {\n      type: Boolean,\n      default: true\n    },\n    drawOnFound: {\n      type: Boolean,\n      default: true\n    },\n    lineColor: {\n      type: String,\n      default: \"#FF3B58\"\n    },\n    lineWidth: {\n      type: Number,\n      default: 2\n    },\n    videoWidth: {\n      type: Number,\n      default: 320\n    },\n    videoHeight: {\n      type: Number,\n      default: 240\n    },\n    responsive: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      showVideo: false,\n      showPlay: false,\n      containerWidth: null,\n      active: false\n    };\n  },\n\n  computed: {\n    videoWH() {\n      if (this.containerWidth) {\n        const width = this.containerWidth;\n        const height = width * 0.75;\n        return {\n          width,\n          height\n        };\n      } //return { width: 100%, height: 100% };\n\n\n      return {\n        width: this.videoWidth,\n        height: this.videoHeight\n      };\n    }\n\n  },\n  events: {\n    eve1: function (data) {\n      console.log(data);\n    }\n  },\n  methods: {\n    test2() {\n      this.showVideo = !this.showVideo;\n      this.setup();\n      this.run();\n    },\n\n    drawLine(begin, end) {\n      this.canvas.beginPath();\n      this.canvas.moveTo(begin.x, begin.y);\n      this.canvas.lineTo(end.x, end.y);\n      this.canvas.lineWidth = this.lineWidth;\n      this.canvas.strokeStyle = this.lineColor;\n      this.canvas.stroke();\n    },\n\n    drawBox(l) {\n      if (this.drawOnFound) {\n        this.drawLine(l.topLeftCorner, l.topRightCorner);\n        this.drawLine(l.topRightCorner, l.bottomRightCorner);\n        this.drawLine(l.bottomRightCorner, l.bottomLeftCorner);\n        this.drawLine(l.bottomLeftCorner, l.topLeftCorner);\n      }\n    },\n\n    tick() {\n      if (this.$refs.video && this.$refs.video.readyState === this.$refs.video.HAVE_ENOUGH_DATA) {\n        this.$refs.canvas.height = this.videoWH.height;\n        this.$refs.canvas.width = this.videoWH.width;\n        this.canvas.drawImage(this.$refs.video, 0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n        const imageData = this.canvas.getImageData(0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n        let code = false;\n\n        try {\n          code = jsQR(imageData.data, imageData.width, imageData.height);\n        } catch (e) {\n          // sometimes JSQR may fail, but we can carry on.\n          console.error(e);\n        }\n\n        if (code) {\n          this.drawBox(code.location);\n          this.found(code.data);\n        }\n      }\n\n      this.run();\n    },\n\n    setup() {\n      if (this.responsive) {\n        this.$nextTick(() => {\n          this.containerWidth = this.$refs.container.clientWidth;\n        });\n      }\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        this.previousCode = null;\n        this.parity = 0;\n        this.active = true;\n        this.canvas = this.$refs.canvas.getContext(\"2d\");\n        const facingMode = this.useBackCamera ? {\n          exact: \"environment\"\n        } : \"user\";\n\n        const handleSuccess = stream => {\n          this.$refs.video.srcObject = stream;\n          const playPromise = this.$refs.video.play();\n          playPromise.catch(() => this.showPlay = true);\n          playPromise.then(this.run);\n        };\n\n        navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode\n          }\n        }).then(handleSuccess).catch(() => {\n          navigator.mediaDevices.getUserMedia({\n            video: true\n          }).then(handleSuccess);\n        });\n      }\n    },\n\n    run() {\n      if (this.active) {\n        // const playPromise = this.$refs.video.play();\n        // playPromise.catch(() => (this.showPlay = true));\n        window.requestAnimationFrame(this.tick);\n        var playPromise = this.$refs.video.play();\n\n        if (playPromise !== undefined) {\n          playPromise.then(_ => {// Automatic playback started!\n            // Show playing UI.\n          }).catch(error => {// Auto-play was prevented\n            // Show paused UI.\n          });\n        } //this.showPlay = true;\n\n      }\n    },\n\n    found(code) {\n      if (this.previousCode !== code) {\n        this.previousCode = code;\n      } else if (this.previousCode === code) {\n        this.parity += 1;\n      }\n\n      if (this.parity > 2) {\n        this.active = this.stopOnScanned ? false : true;\n        this.parity = 0;\n        this.$emit(\"code-scanned\", code); //this.$emit('imgOpen');\n        // this.$refs.video.stop();\n        // this.fullStop();\n        // this.showPlay = false;\n        //this.$refs.canvas.style.display = 'none';\n        //this.$refs.video.style.display = 'none';\n      }\n    },\n\n    fullStop() {\n      if (this.$refs.video && this.$refs.video.srcObject) {\n        this.$refs.video.srcObject.getTracks().forEach(t => t.stop());\n      }\n    }\n\n  },\n\n  created() {\n    var ooo = this.showPlay;\n    this.$watch('containerWidth', function (val) {\n      console.log(\">>>>>>>>>>>>>>>>>   ->\", val);\n    });\n    eventHub.$on('runn', function () {\n      console.log(\">>>\", ooo);\n      console.log('rummmmmmm');\n    });\n  },\n\n  mounted() {\n    var oooo = this.showPlay; //this.setup();\n\n    eventHub.$on('eve', function () {\n      console.log(oooo, '<><><><>');\n    });\n    /*setTimeout(function(){\n         this.run();\n    },2000);*/\n  },\n\n  beforeDestroy() {\n    this.fullStop();\n  },\n\n  watch: {\n    active: {\n      immediate: true,\n\n      handler(active) {\n        if (!active) {\n          this.fullStop();\n        }\n      }\n\n    }\n  }\n};",{"version":3,"sources":["VueQrReader.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA;AACA;AACA;QAEA;;;YAGA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA,AACA;AAJA;AA7BA;;SAkCA;;iBAEA;gBACA;sBACA;cACA,AACA;AALA;AAMA;;;;+BAKA;2BACA;+BACA;;;AACA;;AACA,OALA,CAMA;;;;;qBACA;;AACA,AACA;;AAVA;;0BAaA;kBACA;AAEA,AAEA;AAPA;;YASA;6BACA;WACA;WAEA;AACA;;yBACA;kBACA;wCACA;oCACA;mCACA;qCACA;kBACA;AACA;;eACA;4BACA;yCACA;0CACA;6CACA;4CACA;AACA;AACA;;WACA;AACA,qBACA,0DACA,kBACA;gDACA;+CACA;oBACA,qBACA,OACA,GACA,qBACA,yBACA,AACA;sCACA,aACA,GACA,qBACA,yBACA,AACA;mBACA;;YACA;iEACA;oBACA;AACA;wBACA;AACA;;kBACA;4BACA;0BACA;AACA;AACA;;WACA;AACA;;YACA;2BACA;6BACA;qDACA;AACA;AACA;;yEACA;4BACA;sBACA;sBACA;mDACA;gCACA;iBACA;YACA;;wCACA;uCACA;+CACA;kDACA;gCACA;AACA;;kBACA;;AACA;;gBACA,2BACA;oBACA;mBACA;kBACA;AACA;AACA;AACA;;UACA;;AAGA;AACA;0CAEA;2CAEA;;uCACA;gCACA,CACA;AACA;AACA,4BACA,CACA;AACA;AACA;AACA,SAhBA,CAiBA;;AACA;AACA;;gBACA;sCACA;4BACA;6CACA;uBACA;AACA;;2BACA;mDACA;sBACA;mCACA,OACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;0DACA;8DACA;AACA;AACA,AACA;;AApIA;;YAsIA;mBACA;iDACA;4CAEA;AACA;qCACA;yBACA;kBAEA;AAEA;AACA;;YACA;oBACA,UACA;;oCACA;wBAGA;AAGA;AACA,AACA,AACA;;;AACA;;kBACA;SACA;AACA;;;;iBAGA;;sBACA;qBACA;eACA;AACA;AACA,AACA,AACA;;AARA;AADA;AArOA","file":"VueQrReader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\" ref=\"container\">\n\n    <video v-show=\"showVideo\" class=\"source\" ref=\"video\" :width=\"videoWH.width\" :height=\"videoWH.height\" muted preload=\"none\" >\n    </video>\n         <canvas v-show=\"showPlay\" ref=\"canvas\"></canvas>\n    <button class=\"btavancar\" @click=\"test2\">Toggle Video</button>\n  <!--  <button @click=\"$emit('delete-row')\">tetete</button>-->\n   \n    <!--<button v-show=\"showPlay\" @click=\"run\">Play!</button>-->\n  </div>\n</template>\n\n<script>\nimport jsQR from \"jsqr\";\nimport {eventHub} from '@/main.js'\nexport default {\n  name: \"vue-qr-reader\",\n  props: {\n    useBackCamera: {\n      type: Boolean,\n      default: true\n    },\n    stopOnScanned: {\n      type: Boolean,\n      default: true\n    },\n    drawOnFound: {\n      type: Boolean,\n      default: true\n    },\n    lineColor: {\n      type: String,\n      default: \"#FF3B58\"\n    },\n    lineWidth: {\n      type: Number,\n      default: 2\n    },\n    videoWidth: {\n      type: Number,\n      default: 320\n    },\n    videoHeight: {\n      type: Number,\n      default: 240\n    },\n    responsive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n        showVideo: false,\n      showPlay: false,\n      containerWidth: null,\n      active: false\n    };\n  },\n  computed: {\n      \n      \n    videoWH() {\n      if (this.containerWidth) {\n        const width = this.containerWidth;\n        const height = width * 0.75;\n        return { width, height };\n      }\n     //return { width: 100%, height: 100% };\n     return { width: this.videoWidth, height: this.videoHeight };\n    }\n  },\n    events:{\n        eve1: function(data){\n            \n            console.log(data);\n        }\n        \n    },\n  \n  methods: {\n      test2(){\n          this.showVideo = !this.showVideo;\n       this.setup();\n          this.run();\n          \n      },\n    drawLine(begin, end) {\n      this.canvas.beginPath();\n      this.canvas.moveTo(begin.x, begin.y);\n      this.canvas.lineTo(end.x, end.y);\n      this.canvas.lineWidth = this.lineWidth;\n      this.canvas.strokeStyle = this.lineColor;\n      this.canvas.stroke();\n    },\n    drawBox(l) {\n      if (this.drawOnFound) {\n        this.drawLine(l.topLeftCorner, l.topRightCorner);\n        this.drawLine(l.topRightCorner, l.bottomRightCorner);\n        this.drawLine(l.bottomRightCorner, l.bottomLeftCorner);\n        this.drawLine(l.bottomLeftCorner, l.topLeftCorner);\n      }\n    },\n    tick() {\n      if (\n        this.$refs.video &&\n        this.$refs.video.readyState === this.$refs.video.HAVE_ENOUGH_DATA\n      ) {\n        this.$refs.canvas.height = this.videoWH.height;\n        this.$refs.canvas.width = this.videoWH.width;\n        this.canvas.drawImage(\n          this.$refs.video,\n          0,\n          0, \n          this.$refs.canvas.width,\n          this.$refs.canvas.height\n        );\n        const imageData = this.canvas.getImageData(\n          0,\n          0, \n          this.$refs.canvas.width,\n          this.$refs.canvas.height\n        );\n        let code = false;\n        try {\n          code = jsQR(imageData.data, imageData.width, imageData.height);\n        } catch (e) {\n          // sometimes JSQR may fail, but we can carry on.\n          console.error(e);\n        }\n        if (code) {\n          this.drawBox(code.location);\n          this.found(code.data);\n        }\n      }\n      this.run();\n    },\n    setup() {\n      if (this.responsive) {\n        this.$nextTick(() => {\n          this.containerWidth = this.$refs.container.clientWidth;\n        });\n      }\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        this.previousCode = null;\n        this.parity = 0;\n        this.active = true;\n        this.canvas = this.$refs.canvas.getContext(\"2d\");\n        const facingMode = this.useBackCamera\n          ? { exact: \"environment\" }\n          : \"user\";\n        const handleSuccess = stream => {\n          this.$refs.video.srcObject = stream;\n          const playPromise = this.$refs.video.play();\n          playPromise.catch(() => (this.showPlay = true));\n          playPromise.then(this.run);\n        };\n        navigator.mediaDevices\n          .getUserMedia({ video: { facingMode } })\n          .then(handleSuccess)\n          .catch(() => {\n            navigator.mediaDevices\n              .getUserMedia({ video: true })\n              .then(handleSuccess);\n          });\n      }\n    },\n    run() {\n      if (this.active) {\n          \n           // const playPromise = this.$refs.video.play();\n         // playPromise.catch(() => (this.showPlay = true));\n        window.requestAnimationFrame(this.tick);\n          \n         var playPromise = this.$refs.video.play();\n\n  if (playPromise !== undefined) {\n    playPromise.then(_ => {\n      // Automatic playback started!\n      // Show playing UI.\n    })\n    .catch(error => {\n      // Auto-play was prevented\n      // Show paused UI.\n    });\n  }\n           //this.showPlay = true;\n      }\n    },\n    found(code) {\n      if (this.previousCode !== code) {\n        this.previousCode = code;\n      } else if (this.previousCode === code) {\n        this.parity += 1;\n      }\n      if (this.parity > 2) {\n        this.active = this.stopOnScanned ? false : true;\n        this.parity = 0;\n        this.$emit(\"code-scanned\", code);\n          //this.$emit('imgOpen');\n         // this.$refs.video.stop();\n         // this.fullStop();\n         // this.showPlay = false;\n          //this.$refs.canvas.style.display = 'none';\n          //this.$refs.video.style.display = 'none';\n      }\n    },\n    fullStop() {\n      if (this.$refs.video && this.$refs.video.srcObject) {\n        this.$refs.video.srcObject.getTracks().forEach(t => t.stop())\n      }\n    }\n  },\n      created() {\n          \n        var ooo = this.showPlay;\n        this.$watch('containerWidth', function(val){\n                console.log(\">>>>>>>>>>>>>>>>>   ->\", val);\n                \n            });\n        eventHub.$on('runn', function() {\n         console.log(\">>>\", ooo);\n          console.log('rummmmmmm');\n          \n      })\n        \n    },\n  mounted() {\n     var oooo = this.showPlay;\n    //this.setup();\n        eventHub.$on('eve', function() {\n          console.log(oooo, '<><><><>');\n      \n          \n      });\n      \n      \n   /*setTimeout(function(){\n        this.run();\n   },2000);*/\n  },\n  beforeDestroy () {\n    this.fullStop();\n  },\n  watch: {\n    active: {\n      immediate: true,\n      handler(active) {\n          if (!active) {\n            this.fullStop();\n          }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped=\"true\" lang=\"scss\">\n.container {\n    padding: 1%;\n  width: 100%;\n  height: auto;\n}\n      button.btavancar {\n             \n        color: aliceblue;\n        background-color: #000;\n        font-size: .5em;\n        width: 100px;\n        padding: 1em 2em;\n        margin: 1em;\n        border: none !important;\n        border-radius: 3px;\n        box-shadow: none;\n    }\n</style>\n"]}]}