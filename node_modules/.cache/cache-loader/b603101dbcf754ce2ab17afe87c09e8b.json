{"remainingRequest":"/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js!/Users/danielsecco/Downloads/quasela-master/src/store/modules/datasettings.js","dependencies":[{"path":"/Users/danielsecco/Downloads/quasela-master/src/store/modules/datasettings.js","mtime":1528734600000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/cache-loader/dist/cjs.js","mtime":1528752079000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js","mtime":1519636541000}],"contextDependencies":[],"result":["const state = {\n  Idd: '',\n  TagN: 0,\n  GeoL: {\n    latitude: 0,\n    longitude: 0\n  },\n  CodTree: 0,\n  UsrN: '',\n  TimeStp: '',\n  PicI: '',\n  ativationData: {},\n  floadGeo: 'xx'\n};\nconst getters = {\n  getterID: state => {\n    return state.Idd;\n  },\n  getterTagN: state => {\n    return state.TagN;\n  },\n  getterGeoL: state => {\n    return state.GeoL;\n  },\n  getterCodTree: state => {\n    return state.CodTree;\n  },\n  getterUsrN: state => {\n    return state.UsrN;\n  },\n  getterTimeStp: state => {\n    return state.TimeStp;\n  },\n  getterPicI: state => {\n    return state.PicI;\n  },\n  getterAtivation: state => {\n    return state.ativationData;\n  },\n  getTest: state => {\n    return state.floadGeo;\n  }\n};\nconst mutations = {\n  chgIdd: (state, payload) => {\n    state.Idd = payload;\n  },\n  chgCodTree: (state, payload) => {\n    state.CodTree = payload;\n  },\n  chgTagN: (state, payload) => {\n    state.TagN = payload;\n  },\n  chgGeoL: (state, payload) => {\n    state.GeoL = payload;\n  },\n  chgUsrN: (state, payload) => {\n    state.UsrN = payload;\n  },\n  chgTimeStp: (state, payload) => {\n    state.TimeStp = payload;\n  },\n  chgPicI: (state, payload) => {\n    state.PicI = payload;\n  },\n  chgAtivation: (state, payload) => {\n    state.ativationData = payload;\n  },\n  chgTest: (state, payload) => {\n    state.floadGeo = payload;\n  }\n};\nconst actions = {\n  setIdd: ({\n    commit\n  }, payload) => {\n    commit('chgIdd', payload);\n  },\n  setTagN: ({\n    commit\n  }, payload) => {\n    commit('chgTagN', payload);\n  },\n  setCodTree: ({\n    commit\n  }, payload) => {\n    commit('chgCodTree', payload);\n  },\n  setGeoL: ({\n    commit\n  }, payload) => {\n    commit('chgGeoL', payload);\n  },\n  setUsrN: ({\n    commit\n  }, payload) => {\n    commit('chgUsrN', payload);\n  },\n  setTimeStp: ({\n    commit\n  }, payload) => {\n    commit('chgTimeStp', payload);\n  },\n  setPicI: ({\n    commit\n  }, payload) => {\n    commit('chgPicI', payload);\n  },\n  setAtivation: ({\n    commit\n  }, payload) => {\n    commit('chgAtivation', payload);\n  },\n  setTest: ({\n    commit\n  }, payload) => {\n    commit('chgTest', payload);\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};",{"version":3,"sources":["src/store/modules/datasettings.js"],"names":["state","Idd","TagN","GeoL","latitude","longitude","CodTree","UsrN","TimeStp","PicI","ativationData","floadGeo","getters","getterID","getterTagN","getterGeoL","getterCodTree","getterUsrN","getterTimeStp","getterPicI","getterAtivation","getTest","mutations","chgIdd","payload","chgCodTree","chgTagN","chgGeoL","chgUsrN","chgTimeStp","chgPicI","chgAtivation","chgTest","actions","setIdd","commit","setTagN","setCodTree","setGeoL","setUsrN","setTimeStp","setPicI","setAtivation","setTest"],"mappings":"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","sourceRoot":"/Users/danielsecco/Downloads/quasela-master","sourcesContent":["const state = {\n    Idd: '',\n    TagN: 0,\n    GeoL: {\n        latitude: 0,\n        longitude: 0\n    },\n\n    CodTree: 0,\n    UsrN: '',\n    TimeStp: '',\n    PicI: '',\n    ativationData:{},\nfloadGeo:'xx'\n};\n\nconst getters = {\n    getterID: state => {\n        return state.Idd;\n    },\n    getterTagN: state => {\n        return state.TagN;\n    },\n    getterGeoL: state => {\n        return state.GeoL;\n    },\n    getterCodTree: state => {\n        return state.CodTree;\n    },\n    getterUsrN: state => {\n        return state.UsrN;\n    },\n    getterTimeStp: state => {\n        return state.TimeStp;\n    },\n    getterPicI: state => {\n        return state.PicI;\n    },\n    getterAtivation: state => {\n        return state.ativationData;\n    },\n    getTest: state =>{\n        return state.floadGeo;\n    }\n};\n\nconst mutations = {\n    chgIdd: (state, payload) => {\n        state.Idd = payload;\n    },\n    chgCodTree: (state, payload) => {\n        state.CodTree = payload;\n    },\n    chgTagN: (state, payload) => {\n        state.TagN = payload;\n    },\n    chgGeoL: (state, payload) => {\n        state.GeoL = payload;\n    },\n\n    chgUsrN: (state, payload) => {\n        state.UsrN = payload;\n    },\n    chgTimeStp: (state, payload) => {\n        state.TimeStp = payload;\n    },\n    chgPicI: (state, payload) => {\n        state.PicI = payload;\n    },\n    chgAtivation: (state, payload) => {\n        state.ativationData = payload;\n    },\n    chgTest: (state, payload) => {\n        state.floadGeo = payload;\n    },\n};\n\nconst actions = {\n    setIdd: ({\n        commit\n    }, payload) => {\n        commit('chgIdd', payload);\n    },\n    setTagN: ({\n        commit\n    }, payload) => {\n        commit('chgTagN', payload);\n    },\n    setCodTree: ({\n        commit\n    }, payload) => {\n        commit('chgCodTree', payload);\n    },\n    setGeoL: ({\n        commit\n    }, payload) => {\n        commit('chgGeoL', payload);\n    },\n\n    setUsrN: ({\n        commit\n    }, payload) => {\n        commit('chgUsrN', payload);\n    },\n    setTimeStp: ({\n        commit\n    }, payload) => {\n        commit('chgTimeStp', payload);\n    },\n    setPicI: ({\n        commit\n    }, payload) => {\n        commit('chgPicI', payload);\n    },\n    setAtivation: ({\n        commit\n    }, payload) => {\n        commit('chgAtivation', payload);\n    },\n    setTest: ({\n        commit\n    }, payload) => {\n        commit('chgTest', payload);\n    },\n};\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}"]}]}