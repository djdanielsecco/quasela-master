{"remainingRequest":"/Users/danielsecco/Downloads/quasela-master/node_modules/thread-loader/dist/cjs.js!/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js!/Users/danielsecco/Downloads/quasela-master/public/src/js/promise.js","dependencies":[{"path":"/Users/danielsecco/Downloads/quasela-master/public/src/js/promise.js","mtime":1528734600000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/cache-loader/dist/cjs.js","mtime":1528752079000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/thread-loader/dist/cjs.js","mtime":1528752084000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js","mtime":1519636541000}],"contextDependencies":[],"result":["/**\n * setImmediate polyfill v1.0.1, supports IE9+\n * © 2014–2015 Dmitry Korobkin\n * Released under the MIT license\n * github.com/Octane/setImmediate\n */\nwindow.setImmediate || function () {\n  'use strict';\n\n  var uid = 0;\n  var storage = {};\n  var firstCall = true;\n  var slice = Array.prototype.slice;\n  var message = 'setImmediatePolyfillMessage';\n\n  function fastApply(args) {\n    var func = args[0];\n\n    switch (args.length) {\n      case 1:\n        return func();\n\n      case 2:\n        return func(args[1]);\n\n      case 3:\n        return func(args[1], args[2]);\n    }\n\n    return func.apply(window, slice.call(args, 1));\n  }\n\n  function callback(event) {\n    var key = event.data;\n    var data;\n\n    if (typeof key == 'string' && key.indexOf(message) == 0) {\n      data = storage[key];\n\n      if (data) {\n        delete storage[key];\n        fastApply(data);\n      }\n    }\n  }\n\n  window.setImmediate = function setImmediate() {\n    var id = uid++;\n    var key = message + id;\n    var i = arguments.length;\n    var args = new Array(i);\n\n    while (i--) {\n      args[i] = arguments[i];\n    }\n\n    storage[key] = args;\n\n    if (firstCall) {\n      firstCall = false;\n      window.addEventListener('message', callback);\n    }\n\n    window.postMessage(key, '*');\n    return id;\n  };\n\n  window.clearImmediate = function clearImmediate(id) {\n    delete storage[message + id];\n  };\n}();\n/**\n * Promise polyfill v1.0.10\n * requires setImmediate\n *\n * © 2014–2015 Dmitry Korobkin\n * Released under the MIT license\n * github.com/Octane/Promise\n */\n\n(function (global) {\n  'use strict';\n\n  var STATUS = '[[PromiseStatus]]';\n  var VALUE = '[[PromiseValue]]';\n  var ON_FUlFILLED = '[[OnFulfilled]]';\n  var ON_REJECTED = '[[OnRejected]]';\n  var ORIGINAL_ERROR = '[[OriginalError]]';\n  var PENDING = 'pending';\n  var INTERNAL_PENDING = 'internal pending';\n  var FULFILLED = 'fulfilled';\n  var REJECTED = 'rejected';\n  var NOT_ARRAY = 'not an array.';\n  var REQUIRES_NEW = 'constructor Promise requires \"new\".';\n  var CHAINING_CYCLE = 'then() cannot return same Promise that it resolves.';\n\n  var setImmediate = global.setImmediate || require('timers').setImmediate;\n\n  var isArray = Array.isArray || function (anything) {\n    return Object.prototype.toString.call(anything) == '[object Array]';\n  };\n\n  function InternalError(originalError) {\n    this[ORIGINAL_ERROR] = originalError;\n  }\n\n  function isInternalError(anything) {\n    return anything instanceof InternalError;\n  }\n\n  function isObject(anything) {\n    //Object.create(null) instanceof Object → false\n    return Object(anything) === anything;\n  }\n\n  function isCallable(anything) {\n    return typeof anything == 'function';\n  }\n\n  function isPromise(anything) {\n    return anything instanceof Promise;\n  }\n\n  function identity(value) {\n    return value;\n  }\n\n  function thrower(reason) {\n    throw reason;\n  }\n\n  function enqueue(promise, onFulfilled, onRejected) {\n    if (!promise[ON_FUlFILLED]) {\n      promise[ON_FUlFILLED] = [];\n      promise[ON_REJECTED] = [];\n    }\n\n    promise[ON_FUlFILLED].push(onFulfilled);\n    promise[ON_REJECTED].push(onRejected);\n  }\n\n  function clearAllQueues(promise) {\n    delete promise[ON_FUlFILLED];\n    delete promise[ON_REJECTED];\n  }\n\n  function callEach(queue) {\n    var i;\n    var length = queue.length;\n\n    for (i = 0; i < length; i++) {\n      queue[i]();\n    }\n  }\n\n  function call(resolve, reject, value) {\n    var anything = toPromise(value);\n\n    if (isPromise(anything)) {\n      anything.then(resolve, reject);\n    } else if (isInternalError(anything)) {\n      reject(anything[ORIGINAL_ERROR]);\n    } else {\n      resolve(value);\n    }\n  }\n\n  function toPromise(anything) {\n    var then;\n\n    if (isPromise(anything)) {\n      return anything;\n    }\n\n    if (isObject(anything)) {\n      try {\n        then = anything.then;\n      } catch (error) {\n        return new InternalError(error);\n      }\n\n      if (isCallable(then)) {\n        return new Promise(function (resolve, reject) {\n          setImmediate(function () {\n            try {\n              then.call(anything, resolve, reject);\n            } catch (error) {\n              reject(error);\n            }\n          });\n        });\n      }\n    }\n\n    return null;\n  }\n\n  function resolvePromise(promise, resolver) {\n    function resolve(value) {\n      if (promise[STATUS] == PENDING) {\n        fulfillPromise(promise, value);\n      }\n    }\n\n    function reject(reason) {\n      if (promise[STATUS] == PENDING) {\n        rejectPromise(promise, reason);\n      }\n    }\n\n    try {\n      resolver(resolve, reject);\n    } catch (error) {\n      reject(error);\n    }\n  }\n\n  function fulfillPromise(promise, value) {\n    var queue;\n    var anything = toPromise(value);\n\n    if (isPromise(anything)) {\n      promise[STATUS] = INTERNAL_PENDING;\n      anything.then(function (value) {\n        fulfillPromise(promise, value);\n      }, function (reason) {\n        rejectPromise(promise, reason);\n      });\n    } else if (isInternalError(anything)) {\n      rejectPromise(promise, anything[ORIGINAL_ERROR]);\n    } else {\n      promise[STATUS] = FULFILLED;\n      promise[VALUE] = value;\n      queue = promise[ON_FUlFILLED];\n\n      if (queue && queue.length) {\n        clearAllQueues(promise);\n        callEach(queue);\n      }\n    }\n  }\n\n  function rejectPromise(promise, reason) {\n    var queue = promise[ON_REJECTED];\n    promise[STATUS] = REJECTED;\n    promise[VALUE] = reason;\n\n    if (queue && queue.length) {\n      clearAllQueues(promise);\n      callEach(queue);\n    }\n  }\n\n  function Promise(resolver) {\n    var promise = this;\n\n    if (!isPromise(promise)) {\n      throw new TypeError(REQUIRES_NEW);\n    }\n\n    promise[STATUS] = PENDING;\n    promise[VALUE] = undefined;\n    resolvePromise(promise, resolver);\n  }\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var promise = this;\n    var nextPromise;\n    onFulfilled = isCallable(onFulfilled) ? onFulfilled : identity;\n    onRejected = isCallable(onRejected) ? onRejected : thrower;\n    nextPromise = new Promise(function (resolve, reject) {\n      function tryCall(func) {\n        var value;\n\n        try {\n          value = func(promise[VALUE]);\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (value === nextPromise) {\n          reject(new TypeError(CHAINING_CYCLE));\n        } else {\n          call(resolve, reject, value);\n        }\n      }\n\n      function asyncOnFulfilled() {\n        setImmediate(tryCall, onFulfilled);\n      }\n\n      function asyncOnRejected() {\n        setImmediate(tryCall, onRejected);\n      }\n\n      switch (promise[STATUS]) {\n        case FULFILLED:\n          asyncOnFulfilled();\n          break;\n\n        case REJECTED:\n          asyncOnRejected();\n          break;\n\n        default:\n          enqueue(promise, asyncOnFulfilled, asyncOnRejected);\n      }\n    });\n    return nextPromise;\n  };\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(identity, onRejected);\n  };\n\n  Promise.resolve = function (value) {\n    var anything = toPromise(value);\n\n    if (isPromise(anything)) {\n      return anything;\n    }\n\n    return new Promise(function (resolve, reject) {\n      if (isInternalError(anything)) {\n        reject(anything[ORIGINAL_ERROR]);\n      } else {\n        resolve(value);\n      }\n    });\n  };\n\n  Promise.reject = function (reason) {\n    return new Promise(function (resolve, reject) {\n      reject(reason);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      var i;\n      var length;\n\n      if (isArray(values)) {\n        length = values.length;\n\n        for (i = 0; i < length; i++) {\n          call(resolve, reject, values[i]);\n        }\n      } else {\n        reject(new TypeError(NOT_ARRAY));\n      }\n    });\n  };\n\n  Promise.all = function (values) {\n    return new Promise(function (resolve, reject) {\n      var fulfilledCount = 0;\n      var promiseCount = 0;\n      var anything;\n      var length;\n      var value;\n      var i;\n\n      if (isArray(values)) {\n        values = values.slice(0);\n        length = values.length;\n\n        for (i = 0; i < length; i++) {\n          value = values[i];\n          anything = toPromise(value);\n\n          if (isPromise(anything)) {\n            promiseCount++;\n            anything.then(function (index) {\n              return function (value) {\n                values[index] = value;\n                fulfilledCount++;\n\n                if (fulfilledCount == promiseCount) {\n                  resolve(values);\n                }\n              };\n            }(i), reject);\n          } else if (isInternalError(anything)) {\n            reject(anything[ORIGINAL_ERROR]);\n          } else {\n            //[1, , 3] → [1, undefined, 3]\n            values[i] = value;\n          }\n        }\n\n        if (!promiseCount) {\n          resolve(values);\n        }\n      } else {\n        reject(new TypeError(NOT_ARRAY));\n      }\n    });\n  };\n\n  if (typeof module != 'undefined' && module.exports) {\n    module.exports = global.Promise || Promise;\n  } else if (!global.Promise) {\n    global.Promise = Promise;\n  }\n})(this);",{"version":3,"sources":["public/src/js/promise.js"],"names":["window","setImmediate","uid","storage","firstCall","slice","Array","prototype","message","fastApply","args","func","length","apply","call","callback","event","key","data","indexOf","id","i","arguments","addEventListener","postMessage","clearImmediate","global","STATUS","VALUE","ON_FUlFILLED","ON_REJECTED","ORIGINAL_ERROR","PENDING","INTERNAL_PENDING","FULFILLED","REJECTED","NOT_ARRAY","REQUIRES_NEW","CHAINING_CYCLE","require","isArray","anything","Object","toString","InternalError","originalError","isInternalError","isObject","isCallable","isPromise","Promise","identity","value","thrower","reason","enqueue","promise","onFulfilled","onRejected","push","clearAllQueues","callEach","queue","resolve","reject","toPromise","then","error","resolvePromise","resolver","fulfillPromise","rejectPromise","TypeError","undefined","nextPromise","tryCall","asyncOnFulfilled","asyncOnRejected","race","values","all","fulfilledCount","promiseCount","index","module","exports"],"mappings":"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","sourceRoot":"/Users/danielsecco/Downloads/quasela-master","sourcesContent":["/**\n * setImmediate polyfill v1.0.1, supports IE9+\n * © 2014–2015 Dmitry Korobkin\n * Released under the MIT license\n * github.com/Octane/setImmediate\n */\nwindow.setImmediate || function () {'use strict';\n\n  var uid = 0;\n  var storage = {};\n  var firstCall = true;\n  var slice = Array.prototype.slice;\n  var message = 'setImmediatePolyfillMessage';\n\n  function fastApply(args) {\n    var func = args[0];\n    switch (args.length) {\n      case 1:\n        return func();\n      case 2:\n        return func(args[1]);\n      case 3:\n        return func(args[1], args[2]);\n    }\n    return func.apply(window, slice.call(args, 1));\n  }\n\n  function callback(event) {\n    var key = event.data;\n    var data;\n    if (typeof key == 'string' && key.indexOf(message) == 0) {\n      data = storage[key];\n      if (data) {\n        delete storage[key];\n        fastApply(data);\n      }\n    }\n  }\n\n  window.setImmediate = function setImmediate() {\n    var id = uid++;\n    var key = message + id;\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    storage[key] = args;\n    if (firstCall) {\n      firstCall = false;\n      window.addEventListener('message', callback);\n    }\n    window.postMessage(key, '*');\n    return id;\n  };\n\n  window.clearImmediate = function clearImmediate(id) {\n    delete storage[message + id];\n  };\n\n}();\n\n/**\n * Promise polyfill v1.0.10\n * requires setImmediate\n *\n * © 2014–2015 Dmitry Korobkin\n * Released under the MIT license\n * github.com/Octane/Promise\n */\n(function (global) {'use strict';\n\n  var STATUS = '[[PromiseStatus]]';\n  var VALUE = '[[PromiseValue]]';\n  var ON_FUlFILLED = '[[OnFulfilled]]';\n  var ON_REJECTED = '[[OnRejected]]';\n  var ORIGINAL_ERROR = '[[OriginalError]]';\n  var PENDING = 'pending';\n  var INTERNAL_PENDING = 'internal pending';\n  var FULFILLED = 'fulfilled';\n  var REJECTED = 'rejected';\n  var NOT_ARRAY = 'not an array.';\n  var REQUIRES_NEW = 'constructor Promise requires \"new\".';\n  var CHAINING_CYCLE = 'then() cannot return same Promise that it resolves.';\n\n  var setImmediate = global.setImmediate || require('timers').setImmediate;\n  var isArray = Array.isArray || function (anything) {\n      return Object.prototype.toString.call(anything) == '[object Array]';\n    };\n\n  function InternalError(originalError) {\n    this[ORIGINAL_ERROR] = originalError;\n  }\n\n  function isInternalError(anything) {\n    return anything instanceof InternalError;\n  }\n\n  function isObject(anything) {\n    //Object.create(null) instanceof Object → false\n    return Object(anything) === anything;\n  }\n\n  function isCallable(anything) {\n    return typeof anything == 'function';\n  }\n\n  function isPromise(anything) {\n    return anything instanceof Promise;\n  }\n\n  function identity(value) {\n    return value;\n  }\n\n  function thrower(reason) {\n    throw reason;\n  }\n\n  function enqueue(promise, onFulfilled, onRejected) {\n    if (!promise[ON_FUlFILLED]) {\n      promise[ON_FUlFILLED] = [];\n      promise[ON_REJECTED] = [];\n    }\n    promise[ON_FUlFILLED].push(onFulfilled);\n    promise[ON_REJECTED].push(onRejected);\n  }\n\n  function clearAllQueues(promise) {\n    delete promise[ON_FUlFILLED];\n    delete promise[ON_REJECTED];\n  }\n\n  function callEach(queue) {\n    var i;\n    var length = queue.length;\n    for (i = 0; i < length; i++) {\n      queue[i]();\n    }\n  }\n\n  function call(resolve, reject, value) {\n    var anything = toPromise(value);\n    if (isPromise(anything)) {\n      anything.then(resolve, reject);\n    } else if (isInternalError(anything)) {\n      reject(anything[ORIGINAL_ERROR]);\n    } else {\n      resolve(value);\n    }\n  }\n\n  function toPromise(anything) {\n    var then;\n    if (isPromise(anything)) {\n      return anything;\n    }\n    if(isObject(anything)) {\n      try {\n        then = anything.then;\n      } catch (error) {\n        return new InternalError(error);\n      }\n      if (isCallable(then)) {\n        return new Promise(function (resolve, reject) {\n          setImmediate(function () {\n            try {\n              then.call(anything, resolve, reject);\n            } catch (error) {\n              reject(error);\n            }\n          });\n        });\n      }\n    }\n    return null;\n  }\n\n  function resolvePromise(promise, resolver) {\n    function resolve(value) {\n      if (promise[STATUS] == PENDING) {\n        fulfillPromise(promise, value);\n      }\n    }\n    function reject(reason) {\n      if (promise[STATUS] == PENDING) {\n        rejectPromise(promise, reason);\n      }\n    }\n    try {\n      resolver(resolve, reject);\n    } catch(error) {\n      reject(error);\n    }\n  }\n\n  function fulfillPromise(promise, value) {\n    var queue;\n    var anything = toPromise(value);\n    if (isPromise(anything)) {\n      promise[STATUS] = INTERNAL_PENDING;\n      anything.then(\n        function (value) {\n          fulfillPromise(promise, value);\n        },\n        function (reason) {\n          rejectPromise(promise, reason);\n        }\n      );\n    } else if (isInternalError(anything)) {\n      rejectPromise(promise, anything[ORIGINAL_ERROR]);\n    } else {\n      promise[STATUS] = FULFILLED;\n      promise[VALUE] = value;\n      queue = promise[ON_FUlFILLED];\n      if (queue && queue.length) {\n        clearAllQueues(promise);\n        callEach(queue);\n      }\n    }\n  }\n\n  function rejectPromise(promise, reason) {\n    var queue = promise[ON_REJECTED];\n    promise[STATUS] = REJECTED;\n    promise[VALUE] = reason;\n    if (queue && queue.length) {\n      clearAllQueues(promise);\n      callEach(queue);\n    }\n  }\n\n  function Promise(resolver) {\n    var promise = this;\n    if (!isPromise(promise)) {\n      throw new TypeError(REQUIRES_NEW);\n    }\n    promise[STATUS] = PENDING;\n    promise[VALUE] = undefined;\n    resolvePromise(promise, resolver);\n  }\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var promise = this;\n    var nextPromise;\n    onFulfilled = isCallable(onFulfilled) ? onFulfilled : identity;\n    onRejected = isCallable(onRejected) ? onRejected : thrower;\n    nextPromise = new Promise(function (resolve, reject) {\n      function tryCall(func) {\n        var value;\n        try {\n          value = func(promise[VALUE]);\n        } catch (error) {\n          reject(error);\n          return;\n        }\n        if (value === nextPromise) {\n          reject(new TypeError(CHAINING_CYCLE));\n        } else {\n          call(resolve, reject, value);\n        }\n      }\n      function asyncOnFulfilled() {\n        setImmediate(tryCall, onFulfilled);\n      }\n      function asyncOnRejected() {\n        setImmediate(tryCall, onRejected);\n      }\n      switch (promise[STATUS]) {\n        case FULFILLED:\n          asyncOnFulfilled();\n          break;\n        case REJECTED:\n          asyncOnRejected();\n          break;\n        default:\n          enqueue(promise, asyncOnFulfilled, asyncOnRejected);\n      }\n    });\n    return nextPromise;\n  };\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(identity, onRejected);\n  };\n\n  Promise.resolve = function (value) {\n    var anything = toPromise(value);\n    if (isPromise(anything)) {\n      return anything;\n    }\n    return new Promise(function (resolve, reject) {\n      if (isInternalError(anything)) {\n        reject(anything[ORIGINAL_ERROR]);\n      } else {\n        resolve(value);\n      }\n    });\n  };\n\n  Promise.reject = function (reason) {\n    return new Promise(function (resolve, reject) {\n      reject(reason);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      var i;\n      var length;\n      if (isArray(values)) {\n        length = values.length;\n        for (i = 0; i < length; i++) {\n          call(resolve, reject, values[i]);\n        }\n      } else {\n        reject(new TypeError(NOT_ARRAY));\n      }\n    });\n  };\n\n  Promise.all = function (values) {\n    return new Promise(function (resolve, reject) {\n      var fulfilledCount = 0;\n      var promiseCount = 0;\n      var anything;\n      var length;\n      var value;\n      var i;\n      if (isArray(values)) {\n        values = values.slice(0);\n        length = values.length;\n        for (i = 0; i < length; i++) {\n          value = values[i];\n          anything = toPromise(value);\n          if (isPromise(anything)) {\n            promiseCount++;\n            anything.then(\n              function (index) {\n                return function (value) {\n                  values[index] = value;\n                  fulfilledCount++;\n                  if (fulfilledCount == promiseCount) {\n                    resolve(values);\n                  }\n                };\n              }(i),\n              reject\n            );\n          } else if (isInternalError(anything)) {\n            reject(anything[ORIGINAL_ERROR]);\n          } else {\n            //[1, , 3] → [1, undefined, 3]\n            values[i] = value;\n          }\n        }\n        if (!promiseCount) {\n          resolve(values);\n        }\n      } else {\n        reject(new TypeError(NOT_ARRAY));\n      }\n    });\n  };\n\n  if (typeof module != 'undefined' && module.exports) {\n    module.exports = global.Promise || Promise;\n  } else if (!global.Promise) {\n    global.Promise = Promise;\n  }\n\n}(this));"]}]}