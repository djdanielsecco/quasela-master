{"remainingRequest":"/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js!/Users/danielsecco/Downloads/quasela-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/danielsecco/Downloads/quasela-master/src/components/comps/Foto.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/danielsecco/Downloads/quasela-master/src/components/comps/Foto.vue","mtime":1529010389000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/cache-loader/dist/cjs.js","mtime":1528752079000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/danielsecco/Downloads/quasela-master/node_modules/vue-loader/lib/index.js","mtime":1525995699000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nwindow.downloadURL = '';\nwindow.showB = false;\nimport { firestore } from '@/main.js';\nimport { noty } from '@/assets/js/config.js';\n\nvar $ = require('jquery');\n\nwindow.post = {};\nimport Swiper from 'swiper';\nexport default {\n  name: 'foto',\n\n  data() {\n    return {\n      msg: 'Imagens',\n      image: '',\n      imageB: '',\n      urr: '',\n      iscomplete: showB\n    };\n  },\n\n  methods: {\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.createImage(files[0]); // this.createImageTest(files[0]);\n\n      var file = e.target.files[0]; //window.storageRef = firebase.storage().ref(file.name);\n\n      console.log('<filename =============>', file.size);\n      var metadata = {\n        contentType: 'image/jpeg'\n      };\n      /* window.uploadTask = storageRef.put(file, metadata);\n      storageRef.getMetadata().then(function(metadata) {\n      console.log('metadata  >', metadata.cacheControl);\n      }).catch(function(error) {\n      console.log('metadata error  >', error);\n      });\n      */\n    },\n\n    createImage(file) {\n      var dataT = new Date();\n      var image = new Image();\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = e => {\n        vm.image = e.target.result;\n        $(\"#lastIMG\").append('<img  src=\"' + vm.image + '\" width=\"100px\" height=\"auto\"/>');\n        var ind = new Date().toISOString();\n        post = {\n          id: ind,\n          image: vm.image,\n          lele: vm.image.length,\n          tag_num: this.$store.getters.getterTagN,\n          geolocation: this.$store.getters.getterGeoL,\n          cod_Tree: this.$store.getters.getterCodTree,\n          data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n          hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n          user: this.$store.getters.getterUsrN,\n          counts: '',\n          downloadlink: ''\n        };\n        console.log('variavel>', post);\n        $(\"#imgLoad\").remove();\n        this.ResizeImage(file);\n      };\n\n      reader.readAsDataURL(file);\n      console.log('readerfile > ', reader);\n    },\n\n    ResizeImage(file) {\n      if ( //window.File && window.FileReader\n      navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        // var filesToUploads = document.getElementById('inputF').files;\n        //var file = filesToUploads[0];\n        //var file = post.image;\n        if (file) {\n          var reader = new FileReader(); // Set the image once loaded into file reader\n\n          reader.onload = function (e) {\n            var img = document.createElement(\"img\");\n            img.id = 'result';\n            img.src = e.target.result;\n            var canvas = document.createElement(\"canvas\");\n            var ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            var MAX_WIDTH = 1024;\n            var MAX_HEIGHT = 768;\n            var width = img.width;\n            var height = img.height;\n\n            if (width > height) {\n              if (width > MAX_WIDTH) {\n                height *= MAX_WIDTH / width;\n                width = MAX_WIDTH;\n              }\n            } else {\n              if (height > MAX_HEIGHT) {\n                width *= MAX_HEIGHT / height;\n                height = MAX_HEIGHT;\n              }\n            }\n\n            canvas.width = width;\n            canvas.height = height; // var ctx = canvas.getContext(\"2d\");\n\n            ctx.drawImage(img, 0, 0, width, height);\n            var dataurl = canvas.toDataURL(file.type); //document.getElementById('lastIMG').src = dataurl;\n\n            post.image = dataurl;\n            post.lele = dataurl.length;\n            console.log('readerfile new> ', post);\n          };\n\n          reader.readAsDataURL(file);\n        }\n      } else {\n        alert('The File APIs are not fully supported in this browser.');\n      }\n    },\n\n    removeImage: function (e) {\n      $(\"#lastIMG\").remove();\n      $(\"#imgLoad\").remove();\n    },\n\n    avancar() {\n      /*        // post.downloadlink =  downloadURL ;\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      \n      var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      console.log('Upload is ' + progress + '% done');\n      switch (snapshot.state) {\n      case firebase.storage.TaskState.PAUSED: // or 'paused'\n      \tconsole.log('Upload is paused');\n      \tbreak;\n      case firebase.storage.TaskState.RUNNING: // or 'running'\n      \tconsole.log('Upload is running');\n      \tbreak;\n      }\n        \t\n                     \n                   \n                  // console.log(downloadURL1);\n      },\n             function(error) {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n      case 'storage/unauthorized':\n      \t// User doesn't have permission to access the object\n      \tbreak;\n      \tcase 'storage/canceled':\n      \t// User canceled the upload\n      \tbreak;\n      \t\t\tcase 'storage/unknown':\n      \t// Unknown error occurred, inspect error.serverResponse\n      \tbreak;\n      }\n      },\n             function() {\n      // Upload completed successfully, now we can get the download URL\n      uploadTask.snapshot.ref.getDownloadURL().then(function(url) {\n      post.downloadlink = url;\t\n      \n         console.log('File available at', url);\n      showB = true;\t\n         // [START_EXCLUDE]\n       firestore.collection(\"sid\").doc(post.id).set(post)\n                   .then(function(docRef) {\n                       console.log(\"Document written with ID: \", post.id);\n                       //console.log(\"Document Data with ID: \", dodoref);\n                   })\n                   .catch(function(error) {\n                       console.error(\"Error adding document: \", error);\n                   });\n        document.getElementById('btGo').style.display = \"block\";\n         // [END_EXCLUDE]\n       });\t\t\n      \t document.getElementById('btGo').style.display = \"block\";\n      });\n               */\n      firestore.collection(\"sid\").doc(post.id).set(post).then(function (docRef) {\n        console.log(\"Document written with ID: \", post.id); //console.log(\"Document Data with ID: \", dodoref);\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n      firestore.collection(\"sid2\").doc(\"a\" + post.id).set(post).then(function (docRef) {\n        var ttg = [];\n\n        for (var key in docRef) {\n          ttg.push(docRef[key]);\n          console.log(\"Document>>>: \", ttg[key]); // writeData('trees', data[key]);\n        }\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n\n      if ('serviceWorker' in navigator && 'SyncManager' in window) {\n        navigator.serviceWorker.ready.then(function (sw) {\n          writeData('sync-posts', post).then(function () {\n            return sw.sync.register('sync-new-posts');\n          }).then(function () {\n            var data = {\n              message: 'Your Post was saved for syncing!'\n            };\n            noty(\"success\", data.message, post.id);\n            console.log(data);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        });\n      }\n\n      ;\n\n      if ('indexedDB' in window) {\n        readAllData('sync-posts').then(function (data) {\n          console.log('From cache', data);\n        });\n      }\n\n      ;\n      var mySwiper = new Swiper('.swiper-container', {}); //mySwiper.slideTo(1);\n\n      this.$router.push('/');\n    },\n\n    carregar() {\n      for (var i = 1; i < 400; i++) {\n        var ind = new Date().toISOString();\n        post.id = ind;\n        post.counts = i;\n        console.log(i);\n        firestore.collection(\"sid3\").doc('\"' + i + '\"').set(post).then(function (docRef) {\n          console.log(\"Document written with ID: \", post.id + '  >' + i);\n        }).catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n\n        if ('serviceWorker' in navigator && 'SyncManager' in window) {\n          navigator.serviceWorker.ready.then(function (sw) {\n            writeData('sync-posts', post).then(function () {\n              return sw.sync.register('sync-new-posts');\n            }).then(function () {\n              var data = {\n                message: 'Your Post was saved for syncing!'\n              }; // noty(\"success\", data.message, post.id);\n\n              console.log(data);\n            }).catch(function (err) {\n              console.log(err);\n            });\n          });\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n  }\n};\nreadAllData('posts').then(function (data) {\n  $(\"#imgf\").text('');\n\n  for (var dt of data) {\n    $(\"#imgf\").html(\"<p> \" + dt.data + '----' + dt.id + '-->' + dt.hora + \"</p><br> \");\n  }\n});",{"version":3,"sources":["Foto.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;qBACA;eACA;AACA,SACA,iBACA;AACA,SACA,YACA;;gBACA;;cACA;mBACA;;QAEA;;SACA;;WAEA;aACA;cACA;WACA;kBACA,AACA;AANA;AAOA;;;oBAEA;mDACA;iBACA,QACA;6BACA,KACA;;gCACA,IACA;;mDACA;;qBAEA,AACA;AAFA;AAIA,AACA,AACA,AACA,AACA,AACA,AAWA;;;;;;;AACA;;sBACA;sBACA;sBACA;uBACA;eACA;;2BACA;4BACA;wDAEA;6BACA;;cAEA;oBACA;yBACA;uCACA;2CACA;wCACA;uEACA;0EACA;oCACA;kBACA;wBAEA,AACA;AAbA;iCAcA;sBACA;yBACA;AACA;;2BACA;mCACA;AACA;;sBACA;WACA;uDACA,cACA;AACA;AACA;AACA;kBACA;2BACA,cACA;;;6CAEA;qBACA;+BACA;gDACA;wCACA;kCACA;4BACA;6BACA;4BACA;6BACA;;gCACA;qCACA;sCACA;wBACA;AACA;mBACA;uCACA;sCACA;yBACA;AACA;AACA;;2BACA;4BACA,OAvBA,CAwBA;;4CACA;gDACA,OACA;;yBACA;gCACA;4CACA;AACA;;+BACA;AACA;aACA;cACA;AACA;AACA;;8BACA;oBACA;oBACA;AACA;;cAEA;AACA,AACA,AACA,AAIA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAMA,AACA,AACA,AAEA,AACA,AACA,AACA,AACA,AACA,AAEA,AACA,AACA,AAIA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAEA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mDACA;uDAEA,IADA,CAEA;AACA,gCACA;iDACA;AAEA;0DACA,6BACA;kBACA;;gCACA;0BAEA;2CACA,OACA;AACA;AACA,gCACA;iDACA;AACA;;mEACA;gCACA,yBACA;kCACA,uBACA;oCACA;AACA,8BACA;;uBAEA,AACA;AAFA;+CAGA;wBACA;AACA,kCACA;wBACA;AACA;AACA;AACA;;;;iCACA;oBACA,mCACA;oCACA;AACA;AACA;;;qDACA,KACA;;wBACA;AACA;;eAGA;oCACA;6BACA;kBACA;sBACA;oBACA;4DACA,6BACA;sEACA;AACA,kCACA;mDACA;AAEA;;qEACA;kCACA,yBAEA;oCACA,uBACA;sCACA;AACA;;yBAGA,AACA;AAFA,gBADA,CAIA;;0BACA;AACA,oCACA;0BACA;AACA;AACA;AAEA;;;AACA;;;AACA,AACA,AACA;;AAnRA;AAXA;YA+RA,8BACA;kBACA;;uBACA;0EACA;AACA","file":"Foto.vue","sourceRoot":"src/components/comps","sourcesContent":["<template>\n  <div class=\"foto\">\n    <h1>{{ msg }}</h1>\n      \n      <p>Registre uma imagens para comprovar a identificação da árvore.</p>\n      <div v-if=\"!image\">\n            <div id=\"lastIMG\"> \n              <img id=\"imgL\" src=\"@/assets/icoo.png\" width=\"100px\" height=\"auto\"/>    \n    </div>\n    <input id=\"inputF\" type=\"file\" accept=\"video/*;capture=camcorder\" @change=\"onFileChange\">\n  </div>\n  <div v-else>\n          <div id=\"lastIMG\"> \n    </div>\n    <img id=\"imgLoad\" :src=\"image\" width=\"100px\" height=\"100px\"/>\n      <input id=\"inputF\" type=\"file\" accept=\"video/*;capture=camcorder\" @change=\"onFileChange\">\n     <div id=\"warp1\"> \n      <button @click=\"removeImage\">Remove image</button>\n      <br>\n       <button id=\"btGo\" style=\"display: block\" class=\"btavancar\" @click=\"avancar\">Salvar</button>\n       <button class=\"btavancar\" @click=\"carregar\">caregar</button>\n  </div>  </div>\n    \n      <!--<input type=\"button\" value=\"Resize Image\"  @click=\"ResizeImage\"/>-->\n    <img src=\"\" id=\"output\">\n  </div>\n</template>\n<script>\n    window.downloadURL = '' ;\n\twindow.showB = false;\n    import {\n        firestore\n    } from '@/main.js'\n    import {\n        noty\n    } from '@/assets/js/config.js'\n    var $ = require('jquery')\n    window.post = {}\n    import Swiper from 'swiper'\n    export default {\n        name: 'foto',\n        data() {\n            return {\n                msg: 'Imagens',\n                image: '',\n                imageB: '',\n                urr: '',\n\t\t\t\tiscomplete: showB,\n            }\n        },\n        methods: {\n            onFileChange(e) {\n                var files = e.target.files || e.dataTransfer.files;\n                if (!files.length)\n                    return;\n                this.createImage(files[0]);\n                // this.createImageTest(files[0]);\n                var file = e.target.files[0];\n                //window.storageRef = firebase.storage().ref(file.name);\n                console.log('<filename =============>', file.size);\n                var metadata = {\n                    contentType: 'image/jpeg'\n                };\n              /* window.uploadTask = storageRef.put(file, metadata);\n\n\t\t\tstorageRef.getMetadata().then(function(metadata) {\n  console.log('metadata  >', metadata.cacheControl);\n}).catch(function(error) {\n  console.log('metadata error  >', error);\n});\n*/\n                \n               \n                \n                \n                \n                \n                \n                \n                \n                \n            },\n            createImage(file) {\n                var dataT = new Date();\n                var image = new Image();\n                var reader = new FileReader();\n                var vm = this;\n                reader.onload = (e) => {\n                    vm.image = e.target.result;\n                    $(\"#lastIMG\").append('<img  src=\"' + vm.image + '\" width=\"100px\" height=\"auto\"/>');\n\t\t\t\t\t\n                    var ind = new Date().toISOString();\n                    post = {\n                        id: ind,\n                        image: vm.image,\n                        lele: vm.image.length,\n                        tag_num: this.$store.getters.getterTagN,\n                        geolocation: this.$store.getters.getterGeoL,\n                        cod_Tree: this.$store.getters.getterCodTree,\n                        data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n                        hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n                        user: this.$store.getters.getterUsrN,\n                        counts: '',\n                        downloadlink: ''\n\n                    };\n                    console.log('variavel>', post);\n                    $(\"#imgLoad\").remove();\n                    this.ResizeImage(file);\n                };\n                reader.readAsDataURL(file);\n                console.log('readerfile > ', reader);\n            },\n            ResizeImage(file) {\n                if ( //window.File && window.FileReader\n                    navigator.mediaDevices && navigator.mediaDevices.getUserMedia\n                ) {\n                    // var filesToUploads = document.getElementById('inputF').files;\n                    //var file = filesToUploads[0];\n                    //var file = post.image;\n                    if (file) {\n                        var reader = new FileReader();\n                        // Set the image once loaded into file reader\n                        reader.onload = function(e) {\n                            var img = document.createElement(\"img\");\n                            img.id = 'result';\n                            img.src = e.target.result;\n                            var canvas = document.createElement(\"canvas\");\n                            var ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(img, 0, 0);\n                            var MAX_WIDTH = 1024;\n                            var MAX_HEIGHT = 768;\n                            var width = img.width;\n                            var height = img.height;\n                            if (width > height) {\n                                if (width > MAX_WIDTH) {\n                                    height *= MAX_WIDTH / width;\n                                    width = MAX_WIDTH;\n                                }\n                            } else {\n                                if (height > MAX_HEIGHT) {\n                                    width *= MAX_HEIGHT / height;\n                                    height = MAX_HEIGHT;\n                                }\n                            }\n                            canvas.width = width;\n                            canvas.height = height;\n                            // var ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(img, 0, 0, width, height);\n                            var dataurl = canvas.toDataURL(file.type);\n                            //document.getElementById('lastIMG').src = dataurl;\n                            post.image = dataurl;\n                            post.lele = dataurl.length;\n                            console.log('readerfile new> ', post);\n                        }\n                        reader.readAsDataURL(file);\n                    }\n                } else {\n                    alert('The File APIs are not fully supported in this browser.');\n                }\n            },\n            removeImage: function(e) {\n                $(\"#lastIMG\").remove();\n                $(\"#imgLoad\").remove();\n            },\n            avancar() {\n                \n       /*        // post.downloadlink =  downloadURL ;\n\t\t\t\tuploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n\t\t\t\t\tfunction(snapshot) {\n\t\t\t\t\t\t// Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n\t\t\t\t\t\t\n\n\t\n\tvar progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n\t\t\t\t\t\tconsole.log('Upload is ' + progress + '% done');\n\t\t\t\t\t\tswitch (snapshot.state) {\n\t\t\t\t\t\t\tcase firebase.storage.TaskState.PAUSED: // or 'paused'\n\t\t\t\t\t\t\t\tconsole.log('Upload is paused');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase firebase.storage.TaskState.RUNNING: // or 'running'\n\t\t\t\t\t\t\t\tconsole.log('Upload is running');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n    \n    \t\n\t\n                    \n                    \n                   // console.log(downloadURL1);\n\t\t\t\t\t},\n              function(error) {\n\n\t\t\t\t\t\t// A full list of error codes is available at\n\t\t\t\t\t\t// https://firebase.google.com/docs/storage/web/handle-errors\n\t\t\t\t\t\tswitch (error.code) {\n\t\t\t\t\t\t\tcase 'storage/unauthorized':\n\t\t\t\t\t\t\t\t// User doesn't have permission to access the object\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'storage/canceled':\n\t\t\t\t\t\t\t\t// User canceled the upload\n\t\t\t\t\t\t\t\tbreak;\n\n\n\n\t\t\t\t\t\t\tcase 'storage/unknown':\n\t\t\t\t\t\t\t\t// Unknown error occurred, inspect error.serverResponse\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n              function() {\n\t\t\t\t\t\t// Upload completed successfully, now we can get the download URL\n\t\t\t\t\t\tuploadTask.snapshot.ref.getDownloadURL().then(function(url) {\n\t\t\t\t\t\tpost.downloadlink = url;\t\n\t\t\t\t\t\t\t\n          console.log('File available at', url);\n\t\t\t\t\tshowB = true;\t\n          // [START_EXCLUDE]\n\t\t\t\t\t\t\t firestore.collection(\"sid\").doc(post.id).set(post)\n                    .then(function(docRef) {\n                        console.log(\"Document written with ID: \", post.id);\n                        //console.log(\"Document Data with ID: \", dodoref);\n                    })\n                    .catch(function(error) {\n                        console.error(\"Error adding document: \", error);\n                    });\n         document.getElementById('btGo').style.display = \"block\";\n          // [END_EXCLUDE]\n        });\t\t\n\t\t\t\t\t \n\t document.getElementById('btGo').style.display = \"block\";\n\t\t\t\t\t});\n                */\n                 firestore.collection(\"sid\").doc(post.id).set(post)\n                    .then(function(docRef) {\n                        console.log(\"Document written with ID: \", post.id);\n                        //console.log(\"Document Data with ID: \", dodoref);\n                    })\n                    .catch(function(error) {\n                        console.error(\"Error adding document: \", error);\n                    });\n              \n                firestore.collection(\"sid2\").doc(\"a\"+ post.id).set(post)\n                    .then(function(docRef) {\n\t\t\t\t\tvar ttg= [];\n\t\t\t\t\tfor (var key in docRef) {\n           ttg.push(docRef[key]);\n            \n                        console.log(\"Document>>>: \", ttg[key]);\n            // writeData('trees', data[key]);\n        }\n                    })\n                    .catch(function(error) {\n                        console.error(\"Error adding document: \", error);\n                    })\n                if ('serviceWorker' in navigator && 'SyncManager' in window) {\n                    navigator.serviceWorker.ready\n                        .then(function(sw) {\n                            writeData('sync-posts', post)\n                                .then(function() {\n                                    return sw.sync.register('sync-new-posts');\n                                })\n                                .then(function() {\n                                    var data = {\n                                        message: 'Your Post was saved for syncing!'\n                                    };\n                                    noty(\"success\", data.message, post.id);\n                                    console.log(data);\n                                })\n                                .catch(function(err) {\n                                    console.log(err);\n                                });\n                        })\n                };\n                if ('indexedDB' in window) {\n                    readAllData('sync-posts')\n                        .then(function(data) {\n                            console.log('From cache', data);\n                        });\n                };\n                var mySwiper = new Swiper('.swiper-container', {});\n                //mySwiper.slideTo(1);\n                this.$router.push('/');\n            },\n            carregar() {\n                \n                \n                for(var i =1; i < 400 ; i++ ){\n                     var ind = new Date().toISOString();\n                    post.id =ind;\n                    post.counts = i;\n                    console.log(i);\n                    firestore.collection(\"sid3\").doc('\"' + i +'\"').set(post)\n                    .then(function(docRef) {\n                        console.log(\"Document written with ID: \", post.id +'  >'+ i);\n                    })\n                    .catch(function(error) {\n                        console.error(\"Error adding document: \", error);\n                    });\n                  \n                     if ('serviceWorker' in navigator && 'SyncManager' in window) {\n                    navigator.serviceWorker.ready\n                        .then(function(sw) {\n\t\t\t\t\t\t\n                            writeData('sync-posts', post)\n                                .then(function() {\n                                    return sw.sync.register('sync-new-posts');\n                                })\n                                .then(function() {\n                                    var data = {\n                                        message: 'Your Post was saved for syncing!'\n                                    };\n                                   // noty(\"success\", data.message, post.id);\n                                    console.log(data);\n                                })\n                                .catch(function(err) {\n                                    console.log(err);\n                                });\n                        })\n                };\n                    \n                };\n            }\n        }\n    };\n    readAllData('posts')\n        .then(function(data) {\n            $(\"#imgf\").text('');\n            for (var dt of data) {\n                $(\"#imgf\").html(\"<p> \" + dt.data + '----' + dt.id + '-->' + dt.hora + \"</p><br> \");\n            }\n        })\n\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    h1,\n    h2,\n    p {\n        font-weight: normal;\n        color: black;\n    }\n\n    button {\n        color: aliceblue;\n        background-color: #000;\n        font-size: 1em;\n        padding: 1em 2em;\n        margin: 1em;\n        border: none !important;\n        border-radius: 5em;\n        box-shadow: none;\n    }\n\t\n\t#btGo {\n        color: aliceblue;\n        background-color: #000;\n        font-size: 1em;\n        padding: 1em 2em;\n        margin: 1em;\n        border: none !important;\n        border-radius: 5em;\n        box-shadow: none;\n\t\tmargin-left: auto;\n    margin-right: auto;\n    }\n\t#warp1{\n\t\t display: inline-block;\n   \n\t\talign-content: center;\n\t}\n\n</style>\n// fetch('https://192.168.0.8/lambanca', { // method: 'POST', // headers: { // // 'dataType': 'json', // 'Access-Control-Allow-Origin': '*/*', // 'Content-Type': 'application/json', // 'Accept': 'application/json' // }, // dataType: 'json', // mode: 'cors', // body: JSON.stringify([post]) // }).then(function(response) { // console.log(response); // return response.json(); // }).then(function (data) { // // console.log(data); // }) // .catch(function(err) { // console.log('******'); // }); // // fetch('https://ativador-55a4a.firebaseio.com/posts/alfa.json', { // method: 'POST', // headers: { // // 'dataType': 'json', // 'Access-Control-Allow-Origin': '*/*', // 'Content-Type': 'application/json', // 'Accept': 'application/json' // }, // dataType: 'json', // mode: 'cors', // body: JSON.stringify([post]) // }).then(function(response) { // console.log(response); // return response.json(); // }).then(function (data) { // // console.log(data); // }) // .catch(function(err) { // console.log('******'); // }); // firebase.database().ref('posts/'+(post.tag_num)).set(post); // firebase.database().ref('posts').push(post);\n"]}]}